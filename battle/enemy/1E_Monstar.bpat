% Automatically dumped from section 1E

#new:Actor $1E_Monstar
% stats
[Index]        BCb 
[Level]        45`b 
[MaxHP]        20`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80219E74_1E 
% ai
[SpriteCount]   2`s 
[SpriteTable] $SpriteTable_80219F20_1E 
[Script]      $Script_Init_80219FF0_1E 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  90`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]        100`b  98`b % width height
[HealthBar]     0`b  16`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Function $Function_80218000_1E
	ADDIU     SP, SP, FF48
	SW        S2, 88 (SP)
	DADDU     S2, A0, R0
	SW        RA, 98 (SP)
	SW        S5, 94 (SP)
	SW        S4, 90 (SP)
	SW        S3, 8C (SP)
	SW        S1, 84 (SP)
	SW        S0, 80 (SP)
	SDC1      F24, B0 (SP)
	SDC1      F22, A8 (SP)
	SDC1      F20, A0 (SP)
	LW        A0, 148 (S2)
	JAL       {Func:GetActor}
	DADDU     S0, A1, R0
	DADDU     A0, V0, R0
	JAL       {Func:GetSprite}
	ADDIU     A1, R0, 1
	BEQ       S0, R0, .o84
	DADDU     S4, V0, R0
	DADDU     A1, R0, R0
	ADDIU     A2, R0, 11
	ADDIU     V0, R0, FF
	SW        R0, 74 (S2)
	SW        R0, 78 (S2)
	SW        R0, 70 (S2)
	SW        R0, 10 (SP)
	SW        R0, 14 (SP)
	SW        V0, 18 (SP)
	SW        R0, 1C (SP)
	LW        A0, 84 (S4)
	JAL       802DE780
	ADDIU     A3, R0, 14
	.o84
	ADDIU     A1, R0, 1
	ADDIU     V0, R0, FF
	SW        V0, 10 (SP)
	SW        R0, 14 (SP)
	SW        V0, 18 (SP)
	SW        R0, 1C (SP)
	LW        A0, 84 (S4)
	LIA       A3, $???_8021A2B8_1E
	JAL       802DE780
	ADDIU     A2, R0, F
	LW        V0, 74 (S2)
	ADDIU     A0, V0, A
	SLTI      V0, A0, 168
	BNE       V0, R0, .o100
	SW        A0, 74 (S2)
	LIO       V0, B60B60B7
	MULT      A0, V0
	SRA       V1, A0, 1F
	MFHI      T0
	ADDU      V0, T0, A0
	SRA       V0, V0, 8
	SUBU      V0, V0, V1
	SLL       V1, V0, 1
	ADDU      V1, V1, V0
	SLL       V0, V1, 4
	SUBU      V0, V0, V1
	SLL       V0, V0, 3
	SUBU      V0, A0, V0
	SW        V0, 74 (S2)
	.o100
	DADDU     S0, R0, R0
	LUI       S3, 8000
	DADDU     S1, S0, R0
	LIF       F25, 1.875
	MTC1      R0, F24
	LIF       F23, 3.1875
	MTC1      R0, F22
	LIF       F21, 28.0
	MTC1      R0, F20
	.o130
	LHU       A0, 76 (S2)
	ADDU      A0, A0, S1
	SLL       A0, A0, 10
	JAL       800293D4
	SRA       A0, A0, 10
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F24
	MUL.D     F0, F0, F22
	NOP
	ADDIU     V0, SP, 20
	C.LE.D    F20, F0
	NOP
	BC1T      .o178
	ADDU      V0, V0, S0
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	BEQ       R0, R0, .o190
	SB        V1, 0 (V0)
	.o178
	SUB.D     F0, F0, F20
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	NOP
	OR        V1, V1, S3
	SB        V1, 0 (V0)
	.o190
	LHU       A0, 76 (S2)
	ADDU      A0, A0, S1
	ADDIU     A0, A0, 2D
	SLL       A0, A0, 10
	JAL       800293D4
	SRA       A0, A0, 10
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F24
	MUL.D     F0, F0, F22
	NOP
	ADDIU     V0, SP, 38
	C.LE.D    F20, F0
	NOP
	BC1T      .o1DC
	ADDU      V0, V0, S0
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	BEQ       R0, R0, .o1F4
	SB        V1, 0 (V0)
	.o1DC
	SUB.D     F0, F0, F20
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	NOP
	OR        V1, V1, S3
	SB        V1, 0 (V0)
	.o1F4
	LHU       A0, 76 (S2)
	ADDU      A0, A0, S1
	ADDIU     A0, A0, 5A
	SLL       A0, A0, 10
	JAL       800293D4
	SRA       A0, A0, 10
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F24
	MUL.D     F0, F0, F22
	NOP
	ADDIU     V0, SP, 50
	C.LE.D    F20, F0
	NOP
	BC1T      .o240
	ADDU      V0, V0, S0
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	BEQ       R0, R0, .o258
	SB        V1, 0 (V0)
	.o240
	SUB.D     F0, F0, F20
	TRUNC.W.D F2, F0
	MFC1      V1, F2
	NOP
	OR        V1, V1, S3
	SB        V1, 0 (V0)
	.o258
	ADDIU     S0, S0, 1
	SLTI      V0, S0, 14
	BNE       V0, R0, .o130
	ADDIU     S1, S1, 19
	DADDU     S0, R0, R0
	ADDIU     S3, SP, 20
	ADDIU     S2, SP, 38
	ADDIU     S1, SP, 50
	ADDIU     S5, R0, FF
	DADDU     A1, R0, R0
	.o280
	ADDIU     A2, R0, C
	ADDU      V0, S3, S0
	ADDU      V1, S2, S0
	ADDU      A0, S1, S0
	LBU       V0, 0 (V0)
	LBU       V1, 0 (V1)
	LBU       A0, 0 (A0)
	DADDU     A3, S0, R0
	SW        R0, 14 (SP)
	SW        S5, 18 (SP)
	SW        R0, 1C (SP)
	SLL       V0, V0, 18
	SLL       V1, V1, 10
	OR        V0, V0, V1
	SLL       A0, A0, 8
	OR        V0, V0, A0
	ORI       V0, V0, FF
	SW        V0, 10 (SP)
	LW        A0, 84 (S4)
	JAL       802DE780
	ADDIU     S0, S0, 1
	SLTI      V0, S0, 14
	BNE       V0, R0, .o280
	DADDU     A1, R0, R0
	LW        RA, 98 (SP)
	LW        S5, 94 (SP)
	LW        S4, 90 (SP)
	LW        S3, 8C (SP)
	LW        S2, 88 (SP)
	LW        S1, 84 (SP)
	LW        S0, 80 (SP)
	LDC1      F24, B0 (SP)
	LDC1      F22, A8 (SP)
	LDC1      F20, A0 (SP)
	DADDU     V0, R0, R0
	JR        RA
	ADDIU     SP, SP, B8

#new:Function $Function_80218458_1E
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       8011D82C
	ADDIU     A0, R0, 1
	DADDU     A0, R0, R0
	ADDIU     V0, R0, 1
	DADDU     A1, A0, R0
	DADDU     A2, A0, R0
	LAW       V1, 801512F0
	DADDU     A3, A0, R0
	JAL       8011BE5C
	SB        V0, 0 (V1)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18

#new:Function $Function_8021849C_1E
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       {Func:GetVariable}
	LW        A1, 0 (V0)
	DADDU     A0, R0, R0
	DADDU     A1, A0, R0
	DADDU     A2, A0, R0
	JAL       8011BE5C
	ANDI      A3, V0, FF
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18

#new:Function $Function_802184D4_1E
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	DADDU     A0, S0, R0
	JAL       80028F08
	DADDU     A1, V0, R0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20

#new:DefenseTable $DefenseTable_80219E60_1E
.Element:Normal 00000000
.Element:Cosmic 00000063
.Element:End

#new:StatusTable $StatusTable_80219E74_1E
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_80219F20_1E
00020000 01000000 000000FF $IdleAnimations_80219F90_1E $DefenseTable_80219E60_1E 00000100 00000000 01F10000 00000000 
80800001 02003200 FA1400FF $IdleAnimations_80219F90_1E $DefenseTable_80219E60_1E 00000100 00000000 01F10000 00000000 

#new:IdleAnimations $IdleAnimations_80219F90_1E
.Status:Normal    007E0001
.Status:Stone     007E0000
.Status:Sleep     007E0001
.Status:Poison    007E0001
.Status:Stop      007E0000
.Status:Static    007E0001
.Status:Paralyze  007E0000
.Status:Paralyze  007E0000
.Status:Dizzy     007E0001
.Status:Dizzy     007E0001
.Status:End

#new:Script $Script_Init_80219FF0_1E
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021B394_1E )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8021A2D0_1E )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021A4FC_1E )
	Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_8021B384_1E )
	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
	Return
	End

#new:Unknown $???_8021A2B8_1E
$???_8021A098_1E $???_8021A298_1E 00200020 FFFFFFFC 00000000 $???_80223570_1E 

#new:Script $Script_Idle_8021A2D0_1E
	ChildThread
	   Call     $Function_80218000_1E ( )
	EndChildThread
	Label    00000000 
	Call     GetActorPos 	( .Actor:Self *Var[2] *Var[3] *Var[4] )
	Call     MakeLerp    	( 00000000 0000000A 0000001E 0000000A )
	Label    00000001 
	Call     UpdateLerp  	( )
	Add  *Var[0]  *Var[3] 
	Call     SetActorPos 	( .Actor:Self *Var[2] *Var[0] *Var[4] )
	Label    00000002 
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[5] )
	Wait     00000001 
	If  *Var[5]  ==  00000001 
	   Goto     00000002 
	EndIf
	If  *Var[1]  ==  00000001 
	   Goto     00000001 
	EndIf
	Call     GetActorPos 	( .Actor:Self *Var[2] *Var[3] *Var[4] )
	Call     MakeLerp    	( 00000000 FFFFFFF6 0000001E 0000000A )
	Label    00000003 
	Call     UpdateLerp  	( )
	Add  *Var[0]  *Var[3] 
	Call     SetActorPos 	( .Actor:Self *Var[2] *Var[0] *Var[4] )
	Label    00000004 
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[5] )
	Wait     00000001 
	If  *Var[5]  ==  00000001 
	   Goto     00000004 
	EndIf
	If  *Var[1]  ==  00000001 
	   Goto     00000003 
	EndIf
	Goto     00000000 
	Return
	End

#new:Script $Script_HandleEvent_8021A4FC_1E
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  007E0008 
	      ExecWait DoNormalHit 
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      Set  *Var[0]  00000001 
	      Set  *Var[1]  007E0008 
	      Set  *Var[2]  FFFFFFFF 
	      ExecWait $Script_8021B898_1E 
	   Case  ==  .Event:BurnDeath
	      Set  *Var[0]  00000001 
	      Set  *Var[1]  007E0008 
	      Set  *Var[2]  FFFFFFFF 
	      ExecWait $Script_8021B898_1E 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  007E0008 
	      ExecWait $Script_8021B55C_1E 
	      Return
	   Case  ==  00000017
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         Case  ==  00000000 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  007E0001 
	         Case  ==  00000001 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  007E0004 
	      EndSwitch
	      ExecWait DoImmune 
	   Case  ==  .Event:Immune
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         Case  ==  00000000 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  007E0001 
	         Case  ==  00000001 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  007E0004 
	      EndSwitch
	      ExecWait DoImmune 
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  007E0008 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  007E0008 
	      ExecWait $Script_8021B55C_1E 
	      Return
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  007E0001 
	      ExecWait DoRecover 
	   Case  ==  .Event:BeginAirLift
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         Case  ==  00000000 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  007E0001 
	         Case  ==  00000001 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  007E0004 
	      EndSwitch
	      ExecWait DoAirLift 
	   Case  ==  .Event:AirLiftFailed
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         Case  ==  00000000 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  007E0001 
	         Case  ==  00000001 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  007E0004 
	      EndSwitch
	      ExecWait DoImmune 
	EndSwitch
	Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021AB64_1E
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 00000013 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
	Call     SetCamZoom  	( 000000FA )
	Call     SetCamOffsetZ 	( 00000037 )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 0000001E )
	Wait     0000001E 
	Thread
	   Call     SetAnimation 	( .Actor:Self 00000001 007E0004 )
	   Wait     00000014 
	   Call     SetAnimation 	( .Actor:Self 00000001 007E0005 )
	   Wait     00000014 
	   Call     SetAnimation 	( .Actor:Self 00000001 007E0006 )
	EndThread
	Thread
	   Call     $Function_80218458_1E ( )
	   Call     MakeLerp    	( 00000000 000000C8 0000003C 00000001 )
	   Label    00000000 
	   Call     UpdateLerp  	( )
	   Call     $Function_8021849C_1E ( *Var[0] )
	   Wait     00000001 
	   If  *Var[1]  ==  00000001 
	      Goto     00000000 
	   EndIf
	EndThread
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:BigPowerUp )
	Call     $Function_802184D4_1E ( 00000050 00000078 )
	Call     UseCamPreset 	( 00000013 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
	Call     SetCamZoom  	( 00000064 )
	Call     SetCamOffsetZ 	( 0000003C )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 0000003C )
	Wait     0000003C 
	Call     PlaySoundAtActor 	( .Actor:Self 000002EA )
	Call     PlaySoundAtActor 	( .Actor:Self 0000036E )
	Thread
	   Wait     0000000A 
	   Loop     00000012 
	      Call     RandInt     	( 00000096 *Var[0] )
	      Add  *Var[0]  00000064 
	      Call     $Function_802184D4_1E ( *Var[0] 00000014 )
	      Wait     0000000A 
	   EndLoop
	EndThread
	Thread
	   Loop     0000003C 
	      Call     RandInt     	( 00000001 *Var[0] )
	      Add  *Var[0]  00000002 
	      Call     RandInt     	( 00000190 *Var[1] )
	      Sub  *Var[1]  00000064 
	      Call     RandInt     	( 00000064 *Var[2] )
	      Sub  *Var[2]  00000032 
	      Set  *Var[3]  *Var[1] 
	      Sub  *Var[3]  000000C8 
	      Set  *Var[4]  *Var[2] 
	      Call     RandInt     	( 0000000A *Var[5] )
	      Add  *Var[5]  0000000A 
	      Call     PlayEffect  	( 0000000F *Var[0] *Var[1] 000000F0 *Var[2] *Var[3] 00000000 *Var[4] *Var[5] 00000000 00000000 00000000 00000000 00000000 )
	      Wait     00000003 
	   EndLoop
	EndThread
	Wait     00000008 
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 0000000A )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[1]  00000032 
	Add  *Var[2]  00000005 
	Call     PlayEffect  	( {FX:RadialFlowOut:BlueSpikes} *Var[0] *Var[1] *Var[2] *Fixed[0.80078125] 000000A0 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 007E0007 )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000000 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Wait     000000AA 
	      Call     SetAnimation 	( .Actor:Self 00000001 007E0001 )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80219F90_1E )
	      Call     MakeLerp    	( 000000C8 00000000 0000003C 00000000 )
	      Label    00000001 
	      Call     UpdateLerp  	( )
	      Call     $Function_8021849C_1E ( *Var[0] )
	      Wait     00000001 
	      If  *Var[1]  ==  00000001 
	         Goto     00000001 
	      EndIf
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Wait     00000014 
	      Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Wait     000000AA 
	Wait     00000002 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000100 00000000 00000000 00000001 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     SetAnimation 	( .Actor:Self 00000001 007E0001 )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80219F90_1E )
	      Call     MakeLerp    	( 000000C8 00000000 0000003C 00000000 )
	      Label    00000002 
	      Call     UpdateLerp  	( )
	      Call     $Function_8021849C_1E ( *Var[0] )
	      Wait     00000001 
	      If  *Var[1]  ==  00000001 
	         Goto     00000002 
	      EndIf
	      Wait     00000014 
	   EndCaseGroup
	EndSwitch
	Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_NextTurn_8021B384_1E
	Return
	End

#new:Script $Script_TakeTurn_8021B394_1E
	ExecWait $Script_8021AB64_1E 
	Call     UseCamPreset 	( 00000013 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[1]  00000048 
	Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
	Call     SetCamZoom  	( 00000154 )
	Call     MoveCamOver 	( 00000014 )
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     GetActorVar 	( .Actor:Self 00000003 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      Call     SayMessage  	( 001200E5 .Actor:Self 00000001 007E0009 007E0009 ) % Are you scaaaaared yet?
	   Case  ==  00000001 
	      Call     SayMessage  	( 001200E6 .Actor:Self 00000001 007E0009 007E0009 ) % Ho ho ho ho! Your puuuuny attack doesn't hurt me a ...
	   Case  ==  00000002 
	      Call     SayMessage  	( 001200E7 .Actor:Self 00000001 007E0009 007E0009 ) % Thiiiis is your only chance!
	   Default
	      Call     SayMessage  	( 001200E6 .Actor:Self 00000001 007E0009 007E0009 ) % Ho ho ho ho! Your puuuuny attack doesn't hurt me a ...
	EndSwitch
	Call     ActorVarAdd 	( .Actor:Self 00000003 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 00000014 )
	Return
	End

#new:Script $Script_8021B55C_1E
	Call     8027D32C ( FFFFFF81 )
	Call     UseIdleAnimation 	( .Actor:Self .False )
	If  *Var[1]  !=  FFFFFFFF 
	   Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
	   Wait     0000000A 
	EndIf
	Call     80269E80 ( *Var[5] )
	Switch  *Var[5] 
	   CaseOR  ==  0000000A 
	   CaseOR  ==  0000000E 
	   CaseOR  ==  0000000C 
	   CaseOR  ==  00000010 
	   CaseOR  ==  0000000B 
	   CaseOR  ==  0000000F 
	   CaseOR  ==  0000000D 
	   CaseOR  ==  00000011 
	   CaseOR  ==  00000002 
	   EndCaseGroup
	   Default
	      Set  *Flag[00]  00000000 
	      Call     GetActorType 	( .Actor:Self *Var[1] )
	      Switch  *Var[1] 
	         CaseOR  ==  0000000D 
	         CaseOR  ==  0000000F 
	         CaseOR  ==  0000004A 
	         EndCaseGroup
	         Default
	      EndSwitch
	      If  *Var[2]  !=  FFFFCFC7 
	         Set  *Var[2]  00000000 
	         Loop     00000018 
	            Call     SetActorAngle 	( .Actor:Self *Var[2] )
	            Add  *Var[2]  0000001E 
	            Wait     00000001 
	         EndLoop
	         Call     SetActorAngle 	( .Actor:Self 00000000 )
	      EndIf
	EndSwitch
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[1]  0000000A 
	Add  *Var[2]  0000000A 
	Call     PlayEffect  	( {FX:BigSmokePuff} *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:Death )
	Call     8027C8A4 ( FFFFFF81 )
	Call     SetActorAngle 	( .Actor:Self 00000000 )
	Set  *Var[3]  00000000 
	Loop     0000000C 
	   Call     SetActorRotation 	( .Actor:Self *Var[3] 00000000 00000000 )
	   Add  *Var[3]  00000008 
	   Wait     00000001 
	EndLoop
	Call     UseCamPreset 	( 00000002 )
	ExecWait 80298BF0 
	Call     RemoveActor 	( .Actor:Self )
	Return
	End

#new:Script $Script_8021B898_1E
	Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
	Call     80269E80 ( *Var[3] )
	Switch  *Var[3] 
	   Case  ==  00000009 
	      Call     GetActorType 	( .Actor:Self *Var[7] )
	      Switch  *Var[7] 
	         CaseOR  ==  00000012 
	         CaseOR  ==  00000030 
	         EndCaseGroup
	         Default
	            Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
	            Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.0107421875] )
	            Add  *Var[5]  00000037 
	            Call     SetGoalToPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
	            Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000000 00000000 )
	      EndSwitch
	      Set  *Var[7]  00000000 
	      Loop     0000001E 
	         Add  *Var[7]  00000030 
	         Call     SetActorAngle 	( .Actor:Self *Var[7] )
	         Wait     00000001 
	      EndLoop
	      Call     GetActorType 	( .Actor:Self *Var[7] )
	      Switch  *Var[7] 
	         CaseOR  ==  00000012 
	         CaseOR  ==  00000030 
	            Wait     0000001E 
	         EndCaseGroup
	         Default
	            Sub  *Var[5]  00000037 
	            Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
	            If  *Var[5]  ==  00000000 
	               Call     SetGoalToPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
	               Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
	               Call     SetGoalToPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
	               Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	               Call     SetGoalToPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
	               Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	            Else
	               Call     SetGoalToPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
	               Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000000 00000000 )
	               Call     SetGoalToPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
	               Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
	               Call     SetGoalToPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
	               Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000000 00000000 )
	            EndIf
	      EndSwitch
	   Default
	      Wait     00000014 
	EndSwitch
	If  *Var[2]  !=  FFFFFFFF 
	   Call     SetAnimation 	( .Actor:Self *Var[0] *Var[2] )
	EndIf
	Wait     0000000A 
	Call     GetEventType 	( .Actor:Self *Var[1] )
	Switch  *Var[1] 
	   Case  ==  .Event:BurnHit
	      Call     GetSpriteEventFlags 	( .Actor:Self *Var[0] *Var[1] )
	      If  *Var[1]  !&  00000202 
	         Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     8027D8E0 ( FFFFFF81 *Var[3] *Var[4] )
	         Call     GetStatusFlags ( .Actor:Self *Var[5] )
	         If  *Var[5]  &  00080000 
	            MulF  *Var[3]  *Fixed[0.40039062] 
	            MulF  *Var[4]  *Fixed[0.40039062] 
	         EndIf
	         DivF  *Var[3]  *Fixed[2.0] 
	         Call     GetActorFlags 	( .Actor:Self *Var[5] )
	         If  *Var[5]  &  00000800 
	            SubF  *Var[1]  *Var[3] 
	         Else
	            AddF  *Var[1]  *Var[3] 
	         EndIf
	         AddF  *Var[2]  *Fixed[5.0] 
	         DivF  *Var[3]  *Fixed[10.0] 
	         Call     GetStatusFlags ( .Actor:Self *Var[5] )
	         If  *Var[5]  &  00080000 
	            MulF  *Var[3]  *Fixed[0.40039062] 
	            If  *Var[3]  <  00000001 
	               SetF  *Var[3]  *Fixed[1.0] 
	            EndIf
	         EndIf
	         Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	      EndIf
	   Case  ==  .Event:BurnDeath
	EndSwitch
	Return
	End

