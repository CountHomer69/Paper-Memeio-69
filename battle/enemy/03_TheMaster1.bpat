% Automatically dumped from section 03

#new:Actor $03_TheMaster1
% stats
[Index]        7Ab 
[Level]         0`b 
[MaxHP]        50`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8022A2B8_03 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8022A364_03 
[Script]      $Script_Init_8022A3B0_03 
% move effectiveness
[Escape]      100`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         30`b  35`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  30`b % dx dy
[StatusIcon]   10`b  30`b % dx dy

#new:IdleAnimations $IdleAnimations_8022A260_03
.Status:Normal    00A20005
.Status:Stone     00A20000
.Status:Sleep     00A2001C
.Status:Poison    00A20000
.Status:Stop      00A20000
.Status:Static    00A20000
.Status:Paralyze  00A20000
.Status:Dizzy     00A2001E
.Status:Dizzy     00A2001E
.Status:End

#new:DefenseTable $DefenseTable_8022A2AC_03
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8022A2B8_03
.Status:Normal     50`
.Status:Default    50`
.Status:Sleep      40`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      40`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   50`
.Status:Shrink     60`
.Status:Stop       70`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod    -1`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -1`
.Status:End

#new:SpriteTable $SpriteTable_8022A364_03
00800000 01000000 FB1C00FF $IdleAnimations_8022A260_03 $DefenseTable_8022A2AC_03 00000000 00000000 02F90000 00000000 

#new:Script $Script_Init_8022A3B0_03
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022AA54_03 )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8022A494_03 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022B2CC_03 )
	Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_8022B06C_03 )
	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000003 00000002 )
	Set  *Flag_KMR_48  00000001 
	Call     SetBattleFlagBits 	( 00800000 .True )
	Return
	End

#new:Script $Script_Idle_8022A494_03
	Return
	End

#new:Script $Script_8022A4A4_03
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00A20017 
	      ExecWait DoNormalHit 
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00A2001A 
	      SetConst  *Var[2]  00A2001B 
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00A2001A 
	      SetConst  *Var[2]  00A2001B 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00A20019 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00A20017 
	      ExecWait 8029B998 
	   Case  ==  .Event:ShockHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00A20017 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00A20017 
	      ExecWait 8029BD70 
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	      Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 00A20007 )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
	      Wait     00000005 
	      Call     SetAnimation 	( .Actor:Self 00000001 00A20005 )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	   CaseOR  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00A20002 
	      ExecWait DoImmune 
	   EndCaseGroup
	   Case  ==  .Event:ShockDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00A20017 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00A20019 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00A20017 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00A20019 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00A20017 
	      ExecWait 8029B998 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00A20019 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:EndFirstStrike
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00A20002 
	      ExecWait DoReturnHome 
	      Call     HPBarToHome 	( .Actor:Self )
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00A20002 
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00A20007 
	      SetConst  *Var[2]  00A20017 
	      ExecWait DoScareAway 
	      Return
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_8022AA54_03
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 00A20007 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     AddToGoalPos 	( .Actor:Self 0000001E 00000000 00000000 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[4.600586] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Call     SetAnimation 	( .Actor:Self 00000001 00A20002 )
	Wait     0000000A 
	Thread
	   Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
	   Wait     00000005 
	   Call     PlaySoundAtActor 	( .Actor:Self 000020BB )
	EndThread
	Call     SetAnimation 	( .Actor:Self 00000001 00A20010 )
	Wait     0000000A 
	Thread
	   Call     SetAnimation 	( .Actor:Self 00000001 00A20011 )
	   Wait     00000007 
	   Call     SetAnimation 	( .Actor:Self 00000001 00A20012 )
	EndThread
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     RunToGoal   	( .Actor:Self 00000008 .True )
	Call     CheckPlayerHit ( .Actor:Self *Var[A] 00000000 00000000 00000000 00000010 )
	Switch  *Var[A] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Call     UseCamPreset 	( 00000002 )
	      Wait     0000000A 
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[0]  00000014 
	      Set  *Var[1]  00000000 
	      Call     SetAnimation 	( .Actor:Self 00000001 00A20007 )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     RunToGoal   	( .Actor:Self 0000000A .True )
	      Call     SetAnimation 	( .Actor:Self 00000001 00A20002 )
	      Wait     00000003 
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Call     SetAnimation 	( .Actor:Self 00000001 00A20002 )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[3.8007812] )
	      Call     SetAnimation 	( .Actor:Self 00000001 00A20007 )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Call     SetAnimation 	( .Actor:Self 00000001 00A20002 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     PlaySoundAtActor 	( .Actor:Self 000003ED )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000006 00000030 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[0]  00000014 
	      Set  *Var[1]  00000000 
	      Call     SetAnimation 	( .Actor:Self 00000001 00A20007 )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     RunToGoal   	( .Actor:Self 0000000A .True )
	      Call     SetAnimation 	( .Actor:Self 00000001 00A20002 )
	      Wait     00000014 
	   EndCaseGroup
	EndSwitch
	Call     UseCamPreset 	( 00000002 )
	Call     SetAnimation 	( .Actor:Self 00000001 00A20002 )
	Call     SetGoalToHome 	( .Actor:Self )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	Call     SetAnimation 	( .Actor:Self 00000001 00A20007 )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Call     SetAnimation 	( .Actor:Self 00000001 00A20002 )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_NextTurn_8022B06C_03
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetBattlePhase ( *Var[0] )
	Switch  *Var[0] 
	   Case  ==  .Phase:PlayerBegin
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      If  *Var[0]  ==  00000000 
	         Call     UseCamPreset 	( 00000002 )
	         Call     MoveCamOver 	( 0000000A )
	         Call     SayMessage  	( 0002002E .Actor:Self 00000001 00A20009 00A20005 ) % To battle!!
	         Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
	      EndIf
	   Case  ==  .Phase:EnemyBegin
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  &  00351000 
	         BreakCase
	      EndIf
	      Call     GetActorHP  	( .Actor:Self *Var[0] )
	      Call     GetEnemyMaxHP 	( .Actor:Self *Var[1] )
	      Div  *Var[1]  00000002 
	      If  *Var[0]  <=  *Var[1] 
	         Call     UseCamPreset 	( 00000002 )
	         Call     MoveCamOver 	( 0000000A )
	         Call     SayMessage  	( 00020031 .Actor:Self 00000001 00A20009 00A20005 ) % You have natural talent.
	         BreakCase
	      EndIf
	      Call     GetPlayerHP 	( *Var[0] )
	      If  *Var[0]  <=  00000005 
	         Call     UseCamPreset 	( 00000002 )
	         Call     MoveCamOver 	( 0000000A )
	         Call     SayMessage  	( 00020032 .Actor:Self 00000001 00A20009 00A20005 ) % Mario, I'm afraid I must finish you.
	         BreakCase
	      EndIf
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_HandleEvent_8022B2CC_03
	ExecWait $Script_8022A4A4_03 
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  &  00351000 
	   Return
	EndIf
	Call     GetBattleFlags ( *Var[0] )
	If  *Var[0]  &  00000240 
	   Call     GetLastDamage 	( .Actor:Self *Var[0] )
	   If  *Var[0]  >  00000000 
	      Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
	      Call     ActorVarAdd 	( .Actor:Self 00000003 00000001 )
	   EndIf
	EndIf
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:Hit
	   CaseOR  ==  .Event:BurnHit
	   CaseOR  ==  .Event:MultibounceHit
	   CaseOR  ==  .Event:Immune
	   CaseOR  ==  .Event:AirLiftFailed
	      Call     GetActorVar 	( .Actor:Self 00000002 *Var[A] )
	      Call     GetActorVar 	( .Actor:Self 00000003 *Var[B] )
	      Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  &  003F1000 
	         BreakCase
	      EndIf
	      Set  *Flag[00]  00000000 
	      Call     GetMenuSelection 	( *Var[0] *Var[1] *Var[2] )
	      Switch  *Var[0] 
	         CaseOR  ==  00000001 
	         CaseOR  ==  00000000 
	            Set  *Flag[00]  00000001 
	         EndCaseGroup
	      EndSwitch
	      If  *Flag[00]  ==  00000000 
	         BreakCase
	      EndIf
	      Call     UseIdleAnimation 	( .Actor:Self .False )
	      Call     EnableIdleScript 	( .Actor:Self 00000000 )
	      If  *Var[A]  ==  00000001 
	         If  *Var[B]  >  00000002 
	            Call     UseCamPreset 	( 00000002 )
	            Call     MoveCamOver 	( 0000000A )
	            Call     SayMessage  	( 00020030 .Actor:Self 00000001 00A20009 00A20005 ) % Hm! Excellent move.
	            Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
	         EndIf
	      Else
	         Call     UseCamPreset 	( 00000002 )
	         Call     MoveCamOver 	( 0000000A )
	         Call     SayMessage  	( 0002002F .Actor:Self 00000001 00A20009 00A20005 ) % Foolish! That won't work on me.
	      EndIf
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	   EndCaseGroup
	EndSwitch
	Return
	End

