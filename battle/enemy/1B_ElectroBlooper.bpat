% Automatically dumped from section 1B

#new:Actor $1B_ElectroBlooper
% stats
[Index]        C8b 
[Level]        50`b 
[MaxHP]        50`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_8021C664_1B 
% ai
[SpriteCount]   2`s 
[SpriteTable] $SpriteTable_8021C7BC_1B 
[Script]      $Script_Init_8021C82C_1B 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  85`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         95`b 105`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]    0`b  40`b % dx dy
[StatusIcon]   25`b  85`b % dx dy

#new:Function $Function_80218200_1B
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	DADDU     A0, S0, R0
	JAL       80028F08
	DADDU     A1, V0, R0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20

#new:Function $Function_802182EC_1B
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	DADDU     S0, A0, R0
	BEQ       A1, R0, .o48
	SW        RA, 14 (SP)
	JAL       8011D82C
	ADDIU     A0, R0, 1
	DADDU     A0, R0, R0
	DADDU     A1, A0, R0
	DADDU     A2, A0, R0
	DADDU     A3, A0, R0
	LAW       V0, 801512F0
	ADDIU     V1, R0, 1
	JAL       8011BE5C
	SB        V1, 0 (V0)
	ADDIU     V0, R0, 14
	SW        V0, 70 (S0)
	.o48
	DADDU     A0, R0, R0
	DADDU     A1, A0, R0
	DADDU     A2, A0, R0
	LW        V1, 70 (S0)
	ADDIU     V0, R0, 14
	SUBU      V0, V0, V1
	SLL       A3, V0, 2
	ADDU      A3, A3, V0
	SLL       A3, A3, 1
	JAL       8011BE5C
	ANDI      A3, A3, FE
	LW        V0, 70 (S0)
	ADDIU     V0, V0, FFFF
	SW        V0, 70 (S0)
	SLTIU     V0, V0, 1
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	SLL       V0, V0, 1
	JR        RA
	ADDIU     SP, SP, 18

#new:Function $Function_80218384_1B
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	DADDU     S0, A0, R0
	BEQ       A1, R0, .o1C
	SW        RA, 14 (SP)
	ADDIU     V0, R0, 14
	SW        V0, 70 (S0)
	.o1C
	DADDU     A0, R0, R0
	DADDU     A1, A0, R0
	LW        V0, 70 (S0)
	DADDU     A2, A0, R0
	SLL       A3, V0, 2
	ADDU      A3, A3, V0
	SLL       A3, A3, 1
	JAL       8011BE5C
	ANDI      A3, A3, FE
	LW        V0, 70 (S0)
	ADDIU     V0, V0, FFFF
	BEQ       V0, R0, .o58
	SW        V0, 70 (S0)
	BEQ       R0, R0, .o70
	DADDU     V0, R0, R0
	.o58
	DADDU     A0, R0, R0
	DADDU     A1, A0, R0
	DADDU     A2, A0, R0
	JAL       8011BE5C
	DADDU     A3, A0, R0
	ADDIU     V0, R0, 2
	.o70
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 18

#new:Function $Function_80218404_1B
	ADDIU     SP, SP, FFC8
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F24, 30 (SP)
	SDC1      F22, 28 (SP)
	SDC1      F20, 20 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S2, V0, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F24
	NOP
	CVT.S.W   F24, F24
	JAL       {Func:GetVariable}
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F22
	NOP
	CVT.S.W   F22, F22
	JAL       {Func:GetVariable}
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	MTC1      V0, F20
	NOP
	CVT.S.W   F20, F20
	JAL       {Func:GetFloatVariable}
	DADDU     A0, S1, R0
	LW        V0, C (S2)
	SWC1      F24, 4 (V0)
	LW        V0, C (S2)
	SWC1      F22, 8 (V0)
	LW        V0, C (S2)
	SWC1      F20, C (V0)
	LW        V1, C (S2)
	SWC1      F0, 38 (V1)
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 30 (SP)
	LDC1      F22, 28 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 38

#new:Function $Function_802184E4_1B
	ADDIU     SP, SP, FFB0
	SW        S1, 1C (SP)
	DADDU     S1, A0, R0
	SW        RA, 20 (SP)
	SW        S0, 18 (SP)
	SDC1      F28, 48 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F28
	NOP
	CVT.S.W   F28, F28
	JAL       {Func:GetVariable}
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F26
	NOP
	CVT.S.W   F26, F26
	JAL       {Func:GetVariable}
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       {Func:GetVariable}
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	MTC1      V0, F20
	NOP
	CVT.S.W   F20, F20
	JAL       {Func:GetVariable}
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	MTC1      V0, F22
	NOP
	CVT.S.W   F22, F22
	JAL       {Func:GetVariable}
	DADDU     A0, S1, R0
	LIF       F0, 40.0
	MTC1      V0, F24
	NOP
	CVT.S.W   F24, F24
	ADD.S     F0, F22, F0
	MOV.S     F12, F28
	MFC1      A2, F20
	MFC1      A3, F0
	JAL       80029C80
	MOV.S     F14, F26
	LIF       F2, 10.0
	DADDU     A0, R0, R0
	SUB.S     F20, F20, F2
	LIF       F2, 60.0
	LIF       F4, 2.5
	ADD.S     F22, F22, F2
	LIF       F2, 20.0
	ADDIU     V0, R0, 28
	SW        V0, 14 (SP)
	SWC1      F4, 10 (SP)
	ADD.S     F24, F24, F2
	MFC1      A1, F20
	MFC1      A2, F22
	MFC1      A3, F24
	JAL       80071B10
	MOV.S     F20, F0
	LW        V1, C (V0)
	SWC1      F20, 38 (V1)
	LW        V1, C (V0)
	ADDIU     A0, R0, 2
	SW        A0, 18 (V1)
	LW        V1, C (V0)
	SW        A0, 1C (V1)
	LW        V1, C (V0)
	SW        A0, 20 (V1)
	LW        V1, C (V0)
	ADDIU     A0, R0, 50
	SW        A0, 28 (V1)
	LW        V1, C (V0)
	SW        A0, 2C (V1)
	LW        V1, C (V0)
	SW        A0, 30 (V1)
	LW        RA, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	LDC1      F28, 48 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 50

#new:Script $Script_8021C070_1B
	Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
	Call     SetAnimation 	( .Actor:Self 00000001 0050000C )
	Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	If  *Var[B]  >  00000014 
	   Sub  *Var[B]  00000014 
	Else
	   Set  *Var[B]  00000000 
	EndIf
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.30078125] )
	Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Call     80279BEC ( FFFFFF81 00000008 )
	Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
	Call     PlaySoundAtActor 	( .Actor:Self 000003DC )
	Set  *Var[7]  *Var[4] 
	Add  *Var[7]  *Var[4] 
	Add  *Var[7]  *Var[0] 
	MulF  *Var[7]  *Fixed[0.33007812] 
	Set  *Var[8]  *Var[5] 
	Add  *Var[8]  *Var[5] 
	Add  *Var[8]  *Var[1] 
	MulF  *Var[8]  *Fixed[0.33007812] 
	Set  *Var[9]  *Var[6] 
	Add  *Var[9]  *Var[6] 
	Add  *Var[9]  *Var[2] 
	MulF  *Var[9]  *Fixed[0.33007812] 
	Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
	Call     SetGoalToPos 	( .Actor:Self *Var[7] *Var[8] *Var[9] )
	Call     MoveToGoal  	( .Actor:Self *Var[3] FFFFFFFE .Easing:CubicOut )
	Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
	Call     SetAnimation 	( .Actor:Self 00000001 0050000C )
	Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Sub  *Var[B]  00000014 
	Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.30078125] )
	Call     80279BEC ( FFFFFF81 00000008 )
	Call     PlaySoundAtActor 	( .Actor:Self 000003DC )
	Set  *Var[7]  *Var[0] 
	Add  *Var[7]  *Var[0] 
	Add  *Var[7]  *Var[4] 
	MulF  *Var[7]  *Fixed[0.33007812] 
	Set  *Var[8]  *Var[1] 
	Add  *Var[8]  *Var[1] 
	Add  *Var[8]  *Var[5] 
	MulF  *Var[8]  *Fixed[0.33007812] 
	Set  *Var[9]  *Var[2] 
	Add  *Var[9]  *Var[2] 
	Add  *Var[9]  *Var[6] 
	MulF  *Var[9]  *Fixed[0.33007812] 
	Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
	Call     SetGoalToPos 	( .Actor:Self *Var[7] *Var[8] *Var[9] )
	Call     MoveToGoal  	( .Actor:Self *Var[3] FFFFFFFE .Easing:CubicOut )
	Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
	Call     SetAnimation 	( .Actor:Self 00000001 0050000C )
	Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Sub  *Var[B]  00000014 
	Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.30078125] )
	Call     80279BEC ( FFFFFF81 00000008 )
	Call     PlaySoundAtActor 	( .Actor:Self 000003DC )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     MoveToGoal  	( .Actor:Self *Var[3] FFFFFFFE .Easing:CubicOut )
	Return
	End

#new:Script $Script_8021C54C_1B
	Call     SetGoalToHome 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Set  *Var[3]  0000000C 
	ExecWait $Script_8021C070_1B 
	Return
	End

#new:IdleAnimations $IdleAnimations_8021C5A4_1B
.Status:Normal    00500000
.Status:Stop      00500000
.Status:Sleep     00500007
.Status:Paralyze  00500008
.Status:Paralyze  00500000
.Status:Dizzy     00500008
.Status:Shrink    00500000
.Status:End

#new:IdleAnimations $IdleAnimations_8021C5E0_1B
.Status:Normal    0050000C
.Status:Stop      00500000
.Status:Sleep     00500007
.Status:Paralyze  00500008
.Status:Paralyze  00500000
.Status:Dizzy     00500008
.Status:Shrink    0050000C
.Status:End

#new:IdleAnimations $IdleAnimations_8021C61C_1B
.Status:Normal    00500000
.Status:Stop      00500000
.Status:Sleep     00500007
.Status:Paralyze  00500008
.Status:Paralyze  00500000
.Status:Dizzy     00500008
.Status:Shrink    00500000
.Status:End

#new:DefenseTable $DefenseTable_8021C658_1B
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021C664_1B
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      60`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   50`
.Status:Shrink     80`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -1`
.Status:End

#new:StatusTable $StatusTable_8021C710_1B
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      25`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      30`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink     70`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -1`
.Status:End

#new:SpriteTable $SpriteTable_8021C7BC_1B
00020000 01000000 005000FF $IdleAnimations_8021C5A4_1B $DefenseTable_8021C658_1B 00000000 00000000 00000000 00000000 
00800000 02001400 003C00FF 00000000 $DefenseTable_8021C658_1B 00000000 00000000 00DB0000 00000000 

#new:Script $Script_Init_8021C82C_1B
	Call     ForceHomePos 	( .Actor:Self 0000005A 0000002D FFFFFFF6 )
	Call     HPBarToHome 	( .Actor:Self )
	Call     SetActorScale 	( .Actor:Self *Fixed[1.25] *Fixed[1.25] *Fixed[1.0] )
	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
	Exec     $Script_UpdateElectictyPosition_1B 
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021D40C_1B )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8021CAB0_1B )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021CEE8_1B )
	Return
	End

#new:Script $Script_UpdateElectictyPosition_1B
	Label    00000000 
	Call     ActorExists 	( .Actor:Self *Var[0] )
	If  *Var[0]  ==  00000000 
	   Return
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	If  *Var[0]  !=  00000001 
	   Goto     00000063 
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	If  *Var[0]  ==  00000000 
	   Goto     00000063 
	EndIf
	Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
	Call     GetStatusFlags ( .Actor:Self *Var[4] )
	If  *Var[4]  !&  00080000 
	   Add  *Var[2]  0000002D 
	   SetF  *Var[4]  *Fixed[1.6005859] 
	Else
	   Add  *Var[2]  00000012 
	   SetF  *Var[4]  *Fixed[0.640625] 
	EndIf
	Call     $Function_80218404_1B ( *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] )
	Label    00000063 
	Wait     00000001 
	Goto     00000000 
	Return
	End

#new:Script $Script_Idle_8021CAB0_1B
	Label    00000000 
	Call     GetStatusFlags ( .Actor:Self *Var[A] )
	If  *Var[A]  &  00351000 
	   Wait     00000001 
	   Goto     00000000 
	EndIf
	Call     80269F2C ( FFFFFF81 )
	Call     8026A8EC ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	Add  *Var[1]  00000000 
	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	If  *Var[4]  >=  *Var[1] 
	   Goto     0000000B 
	EndIf
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021C5E0_1B )
	Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
	Wait     00000009 
	Call     SetAnimation 	( .Actor:Self 00000001 0050000C )
	Call     8026B5D8 ( FFFFFF81 *Fixed[1.0] )
	Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
	Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	Call     8027BBB8 ( FFFFFF81 00000000 00000000 0000000B )
	Label    0000000B 
	Call     GetStatusFlags ( .Actor:Self *Var[A] )
	If  *Var[A]  &  00351000 
	   Wait     00000001 
	   Goto     00000000 
	EndIf
	Call     80269F2C ( FFFFFF81 )
	Call     8026A8EC ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	Add  *Var[1]  0000000A 
	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	If  *Var[4]  >=  *Var[1] 
	   Goto     0000000C 
	EndIf
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021C5E0_1B )
	Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
	Wait     00000009 
	Call     SetAnimation 	( .Actor:Self 00000001 0050000C )
	Call     8026B5D8 ( FFFFFF81 *Fixed[1.0] )
	Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
	Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	Call     8027BBB8 ( FFFFFF81 00000000 00000000 0000000B )
	Wait     00000003 
	Label    0000000C 
	Call     GetStatusFlags ( .Actor:Self *Var[A] )
	If  *Var[A]  &  00351000 
	   Wait     00000001 
	   Goto     00000000 
	EndIf
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021C61C_1B )
	Call     80269F2C ( FFFFFF81 )
	Call     8026A8EC ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	Add  *Var[1]  FFFFFFF6 
	Call     8026B5D8 ( FFFFFF81 *Fixed[0.80078125] )
	Call     8026B6D0 ( FFFFFF81 *Fixed[0.30078125] )
	Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	Call     8027BBB8 ( FFFFFF81 00000000 00000001 0000000B )
	Wait     00000001 
	Goto     00000000 
	Return
	End

#new:Script $Script_HandleEvent_8021CEE8_1B
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00500004 
	      ExecWait DoNormalHit 
	      ExecWait $Script_8021EE44_1B 
	   EndCaseGroup
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00500004 
	      ExecWait DoNormalHit 
	      ExecWait $Script_8021EE44_1B 
	      SetConst  *Var[1]  00500004 
	      ExecWait $Script_8021D3E0_1B 
	      Return
	   Case  ==  .Event:BurnHit
	      Set  *Var[0]  00000001 
	      Set  *Var[1]  00500005 
	      Set  *Var[2]  00500006 
	      ExecWait DoBurnHit 
	      ExecWait $Script_8021EE44_1B 
	   Case  ==  .Event:BurnDeath
	      Set  *Var[0]  00000001 
	      Set  *Var[1]  00500005 
	      Set  *Var[2]  00500006 
	      ExecWait DoBurnHit 
	      ExecWait $Script_8021EE44_1B 
	      SetConst  *Var[1]  00500006 
	      ExecWait $Script_8021D3E0_1B 
	      Return
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00500004 
	      ExecWait 8029B998 
	      ExecWait $Script_8021EE44_1B 
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00500004 
	      ExecWait 8029B998 
	      ExecWait $Script_8021EE44_1B 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00500004 
	      ExecWait $Script_8021D3E0_1B 
	      Return
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	   CaseOR  ==  .Event:AirLiftFailed
	   CaseOR  ==  0000001D
	   CaseOR  ==  0000001E
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00500000 
	      ExecWait DoImmune 
	   EndCaseGroup
	   CaseOR  ==  .Event:StarBeam
	   CaseOR  ==  00000014
	      ExecWait $Script_8021EE44_1B 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00500004 
	      ExecWait DoNormalHit 
	   EndCaseGroup
	   Case  ==  .Event:ShockHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00500004 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00500004 
	      ExecWait 8029BD70 
	      ExecWait $Script_8021C54C_1B 
	   Case  ==  .Event:ShockDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00500004 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00500004 
	      ExecWait 8029BD70 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00500004 
	      ExecWait $Script_8021D3E0_1B 
	      Return
	   Case  ==  .Event:EndFirstStrike
	      ExecWait $Script_8021C54C_1B 
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00500000 
	      ExecWait DoRecover 
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021D3E0_1B
	SetConst  *Var[0]  00000001 
	ExecWait DoDeath 
	Return
	End

#new:Script $Script_TakeTurn_8021D40C_1B
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	If  *Var[0]  ==  00000001 
	   Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
	   ExecWait $Script_ElectroTackle_1B 
	   Return
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	If  *Var[0]  ==  00000001 
	   ExecWait $Script_Electrify_1B 
	   Return
	Else
	   Call     GetStatusFlags ( .Actor:Self *Var[0] )
	   If  *Var[0]  !&  00080000 
	      Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
	      Call     RandInt     	( 00000064 *Var[0] )
	      If  *Var[0]  <  00000032 
	         ExecWait $Script_Tackle_ElectroBlooper_1B 
	      Else
	         ExecWait $Script_SprayInk_ElectroBlooper_1B 
	      EndIf
	   Else
	      ExecWait $Script_Tackle_ElectroBlooper_1B 
	   EndIf
	EndIf
	Return
	End

#new:Script $Script_Electrify_1B
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[1]  00000041 
	Call     UseCamPreset 	( 00000013 )
	Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
	Call     SetCamZoom  	( 00000140 )
	Call     MoveCamOver 	( 00000032 )
	Wait     00000014 
	Call     $Function_802182EC_1B ( )
	Call     $Function_80218200_1B ( 00000046 00000050 )
	Thread
	   Call     ShakeCam    	( 00000001 00000000 00000028 *Fixed[0.30078125] )
	EndThread
	Call     SetAnimation 	( .Actor:Self 00000001 00500009 )
	Wait     0000000A 
	Call     SetAnimation 	( .Actor:Self 00000001 0050000A )
	Wait     0000000A 
	Call     SetAnimation 	( .Actor:Self 00000001 0050000B )
	Wait     0000000A 
	ExecWait $Script_8021EC88_1B 
	Wait     00000014 
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 0000001E )
	Call     $Function_80218384_1B ( )
	Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	Return
	End

#new:Script $Script_Tackle_ElectroBlooper_1B
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00080000 
	   Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	   Add  *Var[1]  00000070 
	   Call     UseCamPreset 	( 00000013 )
	   Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
	   Call     SetCamZoom  	( 000001F4 )
	   Call     MoveCamOver 	( 00000082 )
	Else
	   Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	   Add  *Var[1]  00000052 
	   Call     UseCamPreset 	( 00000013 )
	   Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
	   Call     SetCamZoom  	( 00000181 )
	   Call     MoveCamOver 	( 00000082 )
	EndIf
	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Set  *Var[1]  00000064 
	Set  *Var[3]  0000000F 
	ExecWait $Script_8021C070_1B 
	Call     PlaySoundAtActor 	( .Actor:Self 000003DD )
	Call     CheckPlayerHit ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch  *Var[F] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Thread
	         Set  *Var[0]  00000000 
	         Loop     00000024 
	            Add  *Var[0]  0000001E 
	            Call     SetActorAngle 	( .Actor:Self *Var[0] )
	            Wait     00000001 
	         EndLoop
	         Call     SetActorAngle 	( .Actor:Self 00000000 )
	      EndThread
	      Call     SetAnimation 	( .Actor:Self 00000001 0050000D )
	      Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
	      Call     UseCamPreset 	( 00000002 )
	      Call     MoveCamOver 	( 00000014 )
	      If  *Var[F]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[F] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Add  *Var[0]  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
	      Add  *Var[0]  00000014 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	      ExecWait $Script_8021C54C_1B 
	      Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Thread
	   Set  *Var[0]  00000000 
	   Loop     00000010 
	      Add  *Var[0]  0000001E 
	      Call     SetActorAngle 	( .Actor:Self *Var[0] )
	      Wait     00000001 
	   EndLoop
	   Call     SetActorAngle 	( .Actor:Self 00000000 )
	EndThread
	Call     SetAnimation 	( .Actor:Self 00000001 0050000D )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Add  *Var[1]  0000001E 
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000004 00000020 )
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 00000014 )
	Call     GetStatusFlags ( .Actor:Player *Var[0] )
	If  *Var[0]  &  00100000 
	   Call     SetAnimation 	( .Actor:Self 00000001 00500004 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
	EndIf
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  0000001E 
	Sub  *Var[1]  0000000F 
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	ExecWait $Script_8021C54C_1B 
	Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_ElectroTackle_1B
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00080000 
	   Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	   Add  *Var[1]  00000070 
	   Call     UseCamPreset 	( 00000013 )
	   Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
	   Call     SetCamZoom  	( 000001F4 )
	   Call     MoveCamOver 	( 00000082 )
	Else
	   Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	   Add  *Var[1]  00000052 
	   Call     UseCamPreset 	( 00000013 )
	   Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
	   Call     SetCamZoom  	( 00000181 )
	   Call     MoveCamOver 	( 00000082 )
	EndIf
	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Set  *Var[1]  00000064 
	Set  *Var[3]  0000000F 
	ExecWait $Script_8021C070_1B 
	Call     CheckPlayerHit ( .Actor:Self *Var[F] 00000020 00000000 00000001 00000010 )
	Switch  *Var[F] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Thread
	         Set  *Var[0]  00000000 
	         Loop     00000024 
	            Add  *Var[0]  0000001E 
	            Call     SetActorAngle 	( .Actor:Self *Var[0] )
	            Wait     00000001 
	         EndLoop
	         Call     SetActorAngle 	( .Actor:Self 00000000 )
	      EndThread
	      Call     SetAnimation 	( .Actor:Self 00000001 0050000D )
	      Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
	      Call     UseCamPreset 	( 00000002 )
	      Call     MoveCamOver 	( 00000014 )
	      If  *Var[F]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[F] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Add  *Var[0]  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
	      Add  *Var[0]  00000014 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	      ExecWait $Script_8021C54C_1B 
	      Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Thread
	   Set  *Var[0]  00000000 
	   Loop     00000010 
	      Add  *Var[0]  0000001E 
	      Call     SetActorAngle 	( .Actor:Self *Var[0] )
	      Wait     00000001 
	   EndLoop
	   Call     SetActorAngle 	( .Actor:Self 00000000 )
	EndThread
	Call     SetAnimation 	( .Actor:Self 00000001 0050000D )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Add  *Var[1]  0000001E 
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000020 00000008 00000000 00000006 00000020 )
	If  *Var[F]  !=  00000007 
	   ExecWait $Script_8021EE44_1B 
	EndIf
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 00000014 )
	Call     GetStatusFlags ( .Actor:Player *Var[0] )
	If  *Var[0]  &  00100000 
	   Call     SetAnimation 	( .Actor:Self 00000001 00500004 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
	EndIf
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  0000001E 
	Sub  *Var[1]  0000000F 
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	ExecWait $Script_8021C54C_1B 
	Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_SprayInk_ElectroBlooper_1B
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  00000055 
	Add  *Var[1]  0000002D 
	Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
	Call     SetAnimation 	( .Actor:Self 00000001 0050000C )
	Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	If  *Var[B]  >  0000001E 
	   Sub  *Var[B]  0000001E 
	Else
	   Set  *Var[B]  00000000 
	EndIf
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.30078125] )
	Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Call     80279BEC ( FFFFFF81 00000008 )
	Thread
	   Call     UseCamPreset 	( 00000013 )
	   Sub  *Var[0]  0000001E 
	   Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
	   Call     SetCamZoom  	( 0000015E )
	   Call     MoveCamOver 	( 00000050 )
	EndThread
	Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
	Call     PlaySoundAtActor 	( .Actor:Self 000003DC )
	Set  *Var[7]  *Var[4] 
	Add  *Var[7]  *Var[0] 
	MulF  *Var[7]  *Fixed[0.5] 
	Set  *Var[8]  *Var[5] 
	Add  *Var[8]  *Var[1] 
	MulF  *Var[8]  *Fixed[0.5] 
	Set  *Var[9]  *Var[6] 
	Add  *Var[9]  *Var[2] 
	MulF  *Var[9]  *Fixed[0.5] 
	Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
	Call     SetGoalToPos 	( .Actor:Self *Var[7] *Var[8] *Var[9] )
	Call     MoveToGoal  	( .Actor:Self 0000000F FFFFFFFE .Easing:CubicOut )
	Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
	Call     SetAnimation 	( .Actor:Self 00000001 0050000C )
	Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Sub  *Var[B]  00000014 
	Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.30078125] )
	Call     80279BEC ( FFFFFF81 00000008 )
	Call     PlaySoundAtActor 	( .Actor:Self 000003DC )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     MoveToGoal  	( .Actor:Self 0000000F FFFFFFFE .Easing:CubicOut )
	Call     SetAnimation 	( .Actor:Self 00000001 00500003 )
	Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Sub  *Var[B]  0000001E 
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.20019531] )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
	Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Call     MoveToGoal  	( .Actor:Self 00000010 00000000 .Easing:Linear )
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 0000000A )
	Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000028 00000000 )
	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFD8 )
	Call     PlaySoundAtActor 	( .Actor:Self 000003DE )
	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Add  *Var[3]  00000001 
	Sub  *Var[4]  0000001C 
	Sub  *Var[5]  00000003 
	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Call     $Function_802184E4_1B ( *Var[0] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] )
	Call     CheckPlayerHit ( .Actor:Self *Var[F] 10000000 00000000 00000001 00000010 )
	Switch  *Var[F] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Wait     0000000A 
	      If  *Var[F]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[F] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Wait     0000001E 
	      Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	      ExecWait $Script_8021C54C_1B 
	      Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Wait     0000000A 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     80269EAC ( 0000001A )
	Call     DamageTarget 	( .Actor:Self *Var[F] 10000000 00000000 00000000 00000004 00000020 )
	Wait     0000001E 
	Call     SetAnimation 	( .Actor:Self 00000001 00500000 )
	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	ExecWait $Script_8021C54C_1B 
	Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021EC88_1B
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	If  *Var[0]  !=  00000000 
	   Return
	EndIf
	Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetStatusFlags ( .Actor:Self *Var[3] )
	If  *Var[3]  !&  00080000 
	   Add  *Var[1]  0000002D 
	   SetF  *Var[3]  *Fixed[1.6005859] 
	Else
	   Add  *Var[1]  00000012 
	   SetF  *Var[3]  *Fixed[0.640625] 
	EndIf
	Call     PlayEffect  	( {FX:SnakingStatic} *Var[0] *Var[1] *Var[2] *Var[3] FFFFFFFF 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000001 *Var[F] )
	Call     PlaySoundAtActor 	( .Actor:Self 0000035C )
	Call     SetSpriteEventFlags 	( .Actor:Self 00000002 00400080 )
	Call     8026ED20 ( FFFFFF81 00000001 00000001 )
	Call     8026EA7C ( FFFFFF81 00000001 00000004 )
	Call     SetStatusTable ( .Actor:Self $StatusTable_8021C710_1B )
	Return
	End

#new:Script $Script_8021EE44_1B
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	If  *Var[0]  !=  00000001 
	   Return
	EndIf
	Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	If  *Var[0]  !=  00000000 
	   Call     RemoveEffect 	( *Var[0] )
	   Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
	EndIf
	Call     SetSpriteEventFlags 	( .Actor:Self 00000002 00000000 )
	Call     8026ED20 ( FFFFFF81 00000001 00000000 )
	Call     SetStatusTable ( .Actor:Self $StatusTable_8021C664_1B )
	Return
	End

