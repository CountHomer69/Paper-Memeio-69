% Script File: 12 Area OMO3.bscr
% Decoded from: 5573E0 to 56E2A0 (12 Area OMO3)

#new:Function $Function_80218000
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       {Func:GetActor}
	LW        A0, 148 (A0)
	LUI       A1, 435C
	JAL       80137DA4
	ADDIU     A0, R0, D
	LUI       A1, 4348
	JAL       801380D4
	ADDIU     A0, R0, 1
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18

#new:Function $Function_80218038
	LW        V1, 80 (A0)
	SUBU      A2, A1, V1
	SLTI      V0, A2, 4
	BNE       V0, R0, .o1C
	SLTI      V0, A2, FFFC
	BEQ       R0, R0, .o2C
	ADDIU     V0, V1, 4
	.o1C
	BNE       V0, R0, .o2C
	ADDIU     V0, V1, FFFC
	BEQ       R0, R0, .o30
	SW        A1, 80 (A0)
	.o2C
	SW        V0, 80 (A0)
	.o30
	JR        RA
	LW        V0, 80 (A0)

#new:Function $Function_80218070
	ADDIU     SP, SP, FF88
	SW        S0, 30 (SP)
	DADDU     S0, A0, R0
	SW        RA, 44 (SP)
	SW        S4, 40 (SP)
	SW        S3, 3C (SP)
	SW        S2, 38 (SP)
	SW        S1, 34 (SP)
	SDC1      F30, 70 (SP)
	SDC1      F28, 68 (SP)
	SDC1      F26, 60 (SP)
	SDC1      F24, 58 (SP)
	SDC1      F22, 50 (SP)
	SDC1      F20, 48 (SP)
	LW        V0, C (S0)
	JAL       {Func:GetVariable}
	LW        A1, 0 (V0)
	LW        A0, 148 (S0)
	JAL       {Func:GetActor}
	DADDU     S3, V0, R0
	DADDU     S2, V0, R0
	BNE       S2, R0, .o6C
	ADDIU     A0, R0, 1
	JAL       801380D4
	DADDU     A1, R0, R0
	BEQ       R0, R0, .o3E8
	DADDU     V0, R0, R0
	.o6C
	BEQ       S3, R0, .o78
	ADDIU     S1, S2, C
	LW        S4, C (S3)
	.o78
	DADDU     A0, S2, R0
	LWC1      F2, 160 (S2)
	LWC1      F0, 18C (S2)
	LWC1      F30, 144 (S2)
	LWC1      F6, 148 (S2)
	ADDIU     A1, R0, 1
	SWC1      F6, 24 (SP)
	LWC1      F6, 14C (S2)
	SWC1      F6, 28 (SP)
	LWC1      F28, 15C (S2)
	LWC1      F26, 164 (S2)
	JAL       {Func:GetSprite}
	ADD.S     F20, F2, F0
	LUI       V1, 6D
	LW        V0, 88 (V0)
	ORI       V1, V1, C
	BNE       V0, V1, .oC4
	ADDIU     A1, R0, 1
	DADDU     A1, R0, R0
	.oC4
	ADDIU     A2, SP, 18
	LW        V1, 1F4 (S2)
	ADDIU     V0, SP, 20
	SW        V0, 10 (SP)
	LW        A0, 84 (V1)
	JAL       802DE8DC
	ADDIU     A3, SP, 1C
	LWC1      F24, 18 (SP)
	CVT.S.W   F24, F24
	LAD       F0, $ConstDouble_8022EB70
	CVT.D.S   F24, F24
	MUL.D     F24, F24, F0
	NOP
	LW        V0, 1C (SP)
	ADDIU     V0, V0, 14
	MTC1      V0, F22
	NOP
	CVT.S.W   F22, F22
	CVT.D.S   F22, F22
	MUL.D     F22, F22, F0
	NOP
	MOV.S     F12, F20
	SW        V0, 1C (SP)
	CVT.S.D   F24, F24
	JAL       {Func:CosDeg}
	CVT.S.D   F22, F22
	LAD       F2, $ConstDouble_8022EB78
	CVT.D.S   F12, F28
	ADD.D     F12, F12, F2
	MUL.S     F24, F24, F0
	NOP
	JAL       {Func:SinDeg}
	CVT.S.D   F12, F12
	MUL.S     F22, F22, F0
	NOP
	JAL       {Func:CosDeg}
	MOV.S     F12, F26
	MOV.S     F12, F26
	JAL       {Func:SinDeg}
	MOV.S     F20, F0
	MUL.S     F20, F24, F20
	NOP
	MUL.S     F0, F22, F0
	NOP
	ADD.S     F20, F20, F0
	TRUNC.W.S F6, F20
	SWC1      F6, 18 (SP)
	JAL       {Func:SinDeg}
	MOV.S     F12, F26
	MOV.S     F12, F26
	JAL       {Func:CosDeg}
	MOV.S     F20, F0
	NEG.S     F20, F20
	MUL.S     F24, F24, F20
	NOP
	MUL.S     F22, F22, F0
	NOP
	LW        V1, 7C (S1)
	ADD.S     F24, F24, F22
	SLTIU     V0, V1, C
	TRUNC.W.S F6, F24
	SWC1      F6, 1C (SP)
	BEQ       V0, R0, .o2D8
	SLL       V0, V1, 2
	LTW       V0, V0 ($JumpTable_8022EB80)
	JR        V0
	NOP
% LBL: from $JumpTable_8022EB80 , entry 0`
	DADDU     A0, S1, R0
	JAL       $Function_80218038
	ADDIU     A1, R0, 122
	BEQ       R0, R0, .o2DC
	NOP
% LBL: from $JumpTable_8022EB80 , entry 1`
	DADDU     A0, S1, R0
	BEQ       R0, R0, .o268
	ADDIU     A1, R0, FA
% LBL: from $JumpTable_8022EB80 , entry 2`
	DADDU     A0, S1, R0
	BEQ       R0, R0, .o268
	ADDIU     A1, R0, F0
% LBL: from $JumpTable_8022EB80 , entry 3`
	DADDU     A0, S1, R0
	BEQ       R0, R0, .o268
	ADDIU     A1, R0, E6
% LBL: from $JumpTable_8022EB80 , entry 4`
	DADDU     A0, S1, R0
	BEQ       R0, R0, .o268
	ADDIU     A1, R0, DC
% LBL: from $JumpTable_8022EB80 , entry 5`
	DADDU     A0, S1, R0
	BEQ       R0, R0, .o268
	ADDIU     A1, R0, D2
% LBL: from $JumpTable_8022EB80 , entry 6`
	DADDU     A0, S1, R0
	BEQ       R0, R0, .o268
	ADDIU     A1, R0, B4
% LBL: from $JumpTable_8022EB80 , entry 7`
	DADDU     A0, S1, R0
	BEQ       R0, R0, .o268
	ADDIU     A1, R0, 8C
% LBL: from $JumpTable_8022EB80 , entry 8`
	DADDU     A0, S1, R0
	BEQ       R0, R0, .o268
	ADDIU     A1, R0, 64
% LBL: from $JumpTable_8022EB80 , entry 9`
	DADDU     A0, S1, R0
	BEQ       R0, R0, .o268
	ADDIU     A1, R0, 46
% LBL: from $JumpTable_8022EB80 , entry 10`
	DADDU     A0, S1, R0
	ADDIU     A1, R0, 28
	.o268
	JAL       $Function_80218038
	NOP
	ADDIU     A0, R0, 4000
	JAL       {Func:GetRandom}
	DADDU     S0, V0, R0
	LIO       V1, 66666667
	MULT      V0, V1
	SRA       V1, V0, 1F
	MFHI      T0
	SRA       A0, T0, 1
	SUBU      A0, A0, V1
	SLL       V1, A0, 2
	ADDU      V1, V1, A0
	SUBU      V0, V0, V1
	BEQ       R0, R0, .o2DC
	ADDU      V0, S0, V0
% LBL: from $JumpTable_8022EB80 , entry 11`
	DADDU     A0, S1, R0
	JAL       $Function_80218038
	ADDIU     A1, R0, 14
	DADDU     A0, S1, R0
	JAL       $Function_80218038
	ADDIU     A1, R0, 14
	DADDU     A0, S1, R0
	JAL       $Function_80218038
	ADDIU     A1, R0, 14
	BEQ       R0, R0, .o2DC
	NOP
	.o2D8
	DADDU     V0, R0, R0
	.o2DC
	MTC1      V0, F6
	NOP
	CVT.S.W   F6, F6
	MFC1      A1, F6
	JAL       801380D4
	ADDIU     A0, R0, 1
	LWC1      F4, 18 (SP)
	CVT.S.W   F4, F4
	ADDIU     A0, R0, 1
	LWC1      F2, 20 (SP)
	CVT.S.W   F2, F2
	ADD.S     F4, F30, F4
	LWC1      F6, 28 (SP)
	ADD.S     F2, F6, F2
	LWC1      F6, 24 (SP)
	LWC1      F0, 1C (SP)
	CVT.S.W   F0, F0
	ADD.S     F0, F6, F0
	TRUNC.W.S F6, F2
	SWC1      F6, 10 (SP)
	TRUNC.W.S F6, F4
	MFC1      A2, F6
	TRUNC.W.S F6, F0
	MFC1      A3, F6
	JAL       80137EC0
	DADDU     A1, R0, R0
	LWC1      F4, 18 (SP)
	CVT.S.W   F4, F4
	DADDU     A0, S2, R0
	LWC1      F2, 1C (SP)
	CVT.S.W   F2, F2
	ADD.S     F4, F30, F4
	LWC1      F6, 24 (SP)
	ADD.S     F2, F6, F2
	LWC1      F6, 28 (SP)
	LWC1      F0, 20 (SP)
	CVT.S.W   F0, F0
	ADD.S     F0, F6, F0
	TRUNC.W.S F6, F4
	SWC1      F6, 84 (S1)
	TRUNC.W.S F6, F2
	SWC1      F6, 88 (S1)
	TRUNC.W.S F6, F0
	SWC1      F6, 8C (S1)
	JAL       {Func:GetSprite}
	ADDIU     A1, R0, 2
	DADDU     A0, V0, R0
	LHU       V0, 1A (SP)
	LHU       V1, 1E (SP)
	ADDIU     V0, V0, FFFB
	ADDIU     V1, V1, 5
	SH        V0, 14 (A0)
	BEQ       S3, R0, .o3E4
	SH        V1, 16 (A0)
	LWC1      F0, 84 (S1)
	CVT.S.W   F0, F0
	SWC1      F0, 4 (S4)
	LWC1      F0, 88 (S1)
	CVT.S.W   F0, F0
	SWC1      F0, 8 (S4)
	LW        V0, 8C (S1)
	ADDIU     V0, V0, 19
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, C (S4)
	.o3E4
	ADDIU     V0, R0, 2
	.o3E8
	LW        RA, 44 (SP)
	LW        S4, 40 (SP)
	LW        S3, 3C (SP)
	LW        S2, 38 (SP)
	LW        S1, 34 (SP)
	LW        S0, 30 (SP)
	LDC1      F30, 70 (SP)
	LDC1      F28, 68 (SP)
	LDC1      F26, 60 (SP)
	LDC1      F24, 58 (SP)
	LDC1      F22, 50 (SP)
	LDC1      F20, 48 (SP)
	JR        RA
	ADDIU     SP, SP, 78

#new:Function $Function_80218490
	ADDIU     SP, SP, FF30
	SW        S5, AC (SP)
	SW        RA, B0 (SP)
	SW        S4, A8 (SP)
	SW        S3, A4 (SP)
	SW        S2, A0 (SP)
	SW        S1, 9C (SP)
	SW        S0, 98 (SP)
	SDC1      F24, C8 (SP)
	SDC1      F22, C0 (SP)
	SDC1      F20, B8 (SP)
	BEQ       A1, R0, .oAC
	DADDU     S5, A0, R0
	JAL       8002ACE4
	ADDIU     A0, R0, 18
	DADDU     S2, V0, R0
	DADDU     S4, R0, R0
	ADDIU     S0, S2, C
	LIA       S3, $Script_8021B254
	LIF       F20, 3.5
	LIA       S1, $???_8021B250
	SW        S2, 70 (S5)
	.o64
	LW        V0, 0 (S1)
	ADDIU     S1, S1, 4
	ADDIU     S4, S4, 1
	SW        V0, 4 (S0)
	DADDU     A0, V0, R0
	LW        V0, 0 (S3)
	ADDIU     S3, S3, 4
	JAL       8011B010
	SW        V0, 8 (S0)
	JAL       8011AD30
	DADDU     A0, V0, R0
	SW        R0, 0 (S2)
	SW        R0, FFF8 (S0)
	SWC1      F20, FFFC (S0)
	SW        R0, 0 (S0)
	ADDIU     S0, S0, 18
	BEQ       S4, R0, .o64
	ADDIU     S2, S2, 18
	.oAC
	DADDU     S4, R0, R0
	ADDIU     S3, SP, 58
	LW        S2, 70 (S5)
	MTC1      R0, F24
	ADDIU     S1, S2, 4
	.oC0
	LWC1      F12, 8 (S1)
	LWC1      F0, 4 (S1)
	ADD.S     F12, F12, F0
	JAL       80029B24
	SWC1      F12, 8 (S1)
	LIO       AT, 4048F5C3
	MTC1      AT, F12
	NOP
	MUL.S     F12, F0, F12
	NOP
	LIF       F2, 180.0
	SWC1      F0, 8 (S1)
	JAL       {Func:SinRad}
	DIV.S     F12, F12, F2
	LIF       F2, 20.0
	NOP
	MUL.S     F20, F0, F2
	NOP
	MUL.S     F22, F20, F20
	NOP
	ADDIU     S4, S4, 1
	LIF       F0, 90.0
	LW        A0, C (S1)
	JAL       8011B010
	DIV.S     F22, F22, F0
	JAL       8011AD30
	DADDU     A0, V0, R0
	DADDU     S0, V0, R0
	LHU       V0, 0 (S0)
	MFC1      A2, F24
	ORI       V0, V0, 1400
	SH        V0, 0 (S0)
	LWC1      F0, 0 (S2)
	LWC1      F2, 0 (S1)
	NEG.S     F0, F0
	NEG.S     F2, F2
	MFC1      A1, F0
	MFC1      A3, F2
	JAL       80067900
	ADDIU     A0, SP, 18
	MFC1      A1, F20
	MFC1      A2, F24
	MFC1      A3, F24
	LIF       F0, 1.0
	DADDU     A0, S3, R0
	JAL       80067B20
	SWC1      F0, 10 (SP)
	ADDIU     A0, SP, 18
	DADDU     A1, S3, R0
	ADDIU     S0, S0, 58
	JAL       80067600
	DADDU     A2, S0, R0
	ADDIU     A0, SP, 18
	LW        A3, 0 (S1)
	ADDIU     S1, S1, 18
	LW        A1, 0 (S2)
	MFC1      A2, F22
	JAL       80067900
	ADDIU     S2, S2, 18
	DADDU     A0, S0, R0
	ADDIU     A1, SP, 18
	JAL       80067600
	DADDU     A2, A0, R0
	BEQ       S4, R0, .oC0
	DADDU     V0, R0, R0
	LW        RA, B0 (SP)
	LW        S5, AC (SP)
	LW        S4, A8 (SP)
	LW        S3, A4 (SP)
	LW        S2, A0 (SP)
	LW        S1, 9C (SP)
	LW        S0, 98 (SP)
	LDC1      F24, C8 (SP)
	LDC1      F22, C0 (SP)
	LDC1      F20, B8 (SP)
	JR        RA
	ADDIU     SP, SP, D0

PADDING: 80218698 to 802186A0 (00557A78 to 00557A80)
00000000 00000000 

#new:Function $Function_802186A0
	LAW       V0, 8007419C
	SW        R0, 84 (A0)
	LBU       V0, AA (V0)
	ANDI      V0, V0, 1
	BEQ       V0, R0, .o20
	ADDIU     V0, R0, 1
	SW        V0, 84 (A0)
	.o20
	JR        RA
	ADDIU     V0, R0, 2

#new:Function $Function_802186C8
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       800EA0C0
	ADDIU     A0, R0, 1
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18

PADDING: 802186E8 to 802186F0 (00557AC8 to 00557AD0)
00000000 00000000 

#new:Function $Function_802186F0
	ADDIU     SP, SP, FFD8
	SDC1      F22, 20 (SP)
	MOV.S     F22, F12
	SDC1      F20, 18 (SP)
	SW        RA, 10 (SP)
	JAL       80028FF0
	MOV.S     F20, F14
	TRUNC.W.S F6, F20
	MFC1      V0, F6
	NOP
	BLTZL     V0, .o30
	SUBU      V0, R0, V0
	.o30
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	DIV.S     F4, F2, F0
	DADDU     A0, R0, R0
	ADDIU     A2, R0, 5A
	DADDU     A1, A0, R0
	LIA       A3, $FloatTable_8021DCD4
	ANDI      V0, A2, FFFF
	.o58
	ANDI      V1, A0, FFFF
	SUBU      V0, V0, V1
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SRA       V0, V0, 1
	ADDU      V1, A0, V0
	ANDI      V0, V1, FFFF
	SLL       V0, V0, 2
	ADDU      V0, V0, A3
	LWC1      F0, 0 (V0)
	C.LT.S    F0, F4
	NOP
	BC1FL     .o94
	DADDU     A2, V1, R0
	DADDU     A0, V1, R0
	.o94
	ADDIU     A1, A1, 1
	ANDI      V0, A1, FFFF
	SLTIU     V0, V0, 7
	BNE       V0, R0, .o58
	ANDI      V0, A2, FFFF
	ANDI      V0, A0, FFFF
	SLL       V0, V0, 2
	ANDI      V1, A2, FFFF
	LTF       F2, V0 ($FloatTable_8021DCD4)
	SLL       V1, V1, 2
	SUB.S     F2, F2, F4
	LTF       F0, V1 ($FloatTable_8021DCD4)
	SUB.S     F0, F0, F4
	ABS.S     F2, F2
	ABS.S     F0, F0
	C.LT.S    F2, F0
	NOP
	BC1F      .oF4
	DADDU     V1, A2, R0
	DADDU     V1, A0, R0
	.oF4
	MTC1      R0, F0
	NOP
	C.LT.S    F22, F0
	NOP
	BC1F      .o130
	NOP
	C.LE.S    F0, F20
	NOP
	BC1F      .o128
	ADDIU     V0, R0, B4
	SUBU      V1, V0, V1
	MTC1      R0, F0
	NOP
	.o128
	C.LT.S    F22, F0
	NOP
	.o130
	BC1F      .o148
	NOP
	C.LT.S    F20, F0
	NOP
	BC1TL     .o148
	ADDIU     V1, V1, B4
	.o148
	MTC1      R0, F0
	NOP
	C.LE.S    F0, F22
	NOP
	BC1F      .o174
	NOP
	C.LT.S    F20, F0
	NOP
	BC1F      .o174
	ADDIU     V0, R0, 168
	SUBU      V1, V0, V1
	.o174
	LW        RA, 10 (SP)
	LDC1      F22, 20 (SP)
	LDC1      F20, 18 (SP)
	ANDI      V0, V1, FFFF
	JR        RA
	ADDIU     SP, SP, 28

#new:Function $Function_8021887C
	ADDIU     SP, SP, FFD8
	SW        S4, 20 (SP)
	DADDU     S4, A0, R0
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S2, C (S4)
	LW        A1, 0 (S2)
	JAL       {Func:GetVariable}
	ADDIU     S2, S2, 4
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	DADDU     A0, S4, R0
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	DADDU     A0, S4, R0
	JAL       {Func:GetVariable}
	DADDU     S1, V0, R0
	DADDU     S3, V0, R0
	LW        A1, 0 (S2)
	ADDIU     S2, S2, 4
	DADDU     A0, S4, R0
	JAL       {Func:GetVariable}
	SUBU      S3, S3, S0
	DADDU     S0, V0, R0
	DADDU     A0, S4, R0
	LW        A1, 0 (S2)
	JAL       {Func:GetVariable}
	SUBU      S0, S0, S1
	BNE       S3, R0, .oA0
	NOP
	BNE       S0, R0, .oA0
	DADDU     A0, S4, R0
	LW        A1, 0 (S2)
	BEQ       R0, R0, .oC8
	DADDU     A2, V0, R0
	.oA0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S0, F14
	NOP
	JAL       $Function_802186F0
	CVT.S.W   F14, F14
	DADDU     A0, S4, R0
	LW        A1, 0 (S2)
	ADDIU     A2, V0, FFA6
	.oC8
	JAL       {Func:SetVariable}
	NOP
	ADDIU     V0, R0, 2
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	JR        RA
	ADDIU     SP, SP, 28

#new:Function $Function_80218970
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S3, V0, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S2, V0, R0
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S2, F14
	NOP
	CVT.S.W   F14, F14
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A2, F0
	JAL       802D7460
	DADDU     A3, V0, R0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28

#new:Function $Function_80218A24
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S3, V0, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S2, V0, R0
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S2, F14
	NOP
	CVT.S.W   F14, F14
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A2, F0
	JAL       802D74C0
	DADDU     A3, V0, R0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28

PADDING: 80218AD8 to 80218AE0 (00557EB8 to 00557EC0)
00000000 00000000 

#new:Function $Function_80218AE0
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S3, V0, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S2, V0, R0
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	LW        A0, 148 (S1)
	JAL       {Func:GetActor}
	DADDU     S1, V0, R0
	DADDU     V1, V0, R0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28

PADDING: 80218BAC to 80218BB0 (00557F8C to 00557F90)
00000000 

#new:Function $Function_80218BB0
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S3, V0, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S2, V0, R0
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	LW        A0, 148 (S1)
	JAL       {Func:GetActor}
	DADDU     S1, V0, R0
	DADDU     V1, V0, R0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28

#new:Function $Function_80218C7C
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	DADDU     A0, S0, R0
	JAL       80028F08
	DADDU     A1, V0, R0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20

PADDING: 80218CD4 to 80218CE0 (005580B4 to 005580C0)
00000000 00000000 00000000 

#new:Function $Function_80218CE0
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S3, V0, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S2, V0, R0
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	LW        A0, 148 (S1)
	JAL       {Func:GetActor}
	DADDU     S1, V0, R0
	DADDU     V1, V0, R0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28

PADDING: 80218DAC to 80218DB0 (0055818C to 00558190)
00000000 

#new:DefenseTable $DefenseTable_80218DB0
.Element:Normal 00000000
.Element:End

#new:DefenseTable $DefenseTable_80218DBC
.Element:Normal 00000063
.Element:End

#new:StatusTable $StatusTable_80218DC8
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      40`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   60`
.Status:Shrink      0`
.Status:Stop       60`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -2`
.Status:End

#new:SpriteTable $SpriteTable_80218E74
00820000 01000000 003600FF $IdleAnimations_80218EE4 $DefenseTable_80218DB0 00000000 00000000 FBF60000 00000000 
00002001 02D80000 000000FF $IdleAnimations_80218EE4 $DefenseTable_80218DBC 00000000 00000000 00F70000 0029007F 

#new:Actor $BigLanternGhost
% stats
[Index]        B1b 
[Level]        42`b 
[MaxHP]        40`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80218DC8 
% ai
[SpriteCount]   2`s 
[SpriteTable] $SpriteTable_80218E74 
[Script]      $Script_Init_80218F38 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  75`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         86`b  60`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -30`b  55`b % dx dy
[StatusIcon]   20`b  45`b % dx dy

#new:IdleAnimations $IdleAnimations_80218EE4
.Status:Normal    006D0001
.Status:Stone     006D0000
.Status:Sleep     006D000C
.Status:Poison    006D0001
.Status:Stop      006D0000
.Status:Static    006D0000
.Status:Paralyze  006D0000
.Status:Paralyze  006D0000
.Status:Dizzy     006D000D
.Status:Fear      006D000D
.Status:End

#new:Script $Script_Init_80218F38
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021AF4C )
	Call     BindIdle    	( .Actor:Self $Script_Idle_802192B0 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80219328 )
	Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_802190E4 )
	Call     SetActorVar 	( .Actor:Self 00000005 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000006 0000000A )
	Call     SetActorVar 	( .Actor:Self 00000000 00000002 )
	Call     SetActorVar 	( .Actor:Self 00000001 000000F0 )
	Call     SetActorVar 	( .Actor:Self 00000007 00000000 )
	Call     SetActorVar 	( .Actor:Self 0000000B 00000000 )
	Call     SetActorVar 	( .Actor:Self 0000000C 00000000 )
	Call     PlayEffect  	( 0000003C 00000001 *Var[0] *Var[1] *Var[2] *Fixed[1.0] *Var[0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     SetActorVar 	( .Actor:Self 0000000A *Var[0] )
	Call     $Function_80218000 ( )
	Exec     $Script_80219204 
	ExecWait $Script_8021B14C 
	Wait     00000002 
	Call     SetActorVar 	( .Actor:Self 0000000D 00000000 )
	Return
	End

#new:Script $Script_NextTurn_802190E4
	Call     GetBattlePhase ( *Var[0] )
	Switch  *Var[0] 
	   Case  ==  .Phase:PlayerBegin
	      Call     GetActorVar 	( .Actor:Self 00000007 *Var[0] )
	      If  *Var[0]  !&  00000001 
	         ConstOR  *Var[0] 00000001 
	         Call     SetActorVar 	( .Actor:Self 00000007 *Var[0] )
	         Call     UseCamPreset 	( 0000000E )
	         Call     CamTargetActor ( .Actor:Self )
	         Call     SetCamOffsetZ 	( 00000028 )
	         Call     MoveCamOver 	( 0000001E )
	         Wait     0000001E 
	         Call     SayMessage  	( 000F0051 .Actor:Self 00000001 006D0005 006D0001 ) % Wee hee hee... I'll take care of you quickly, then ...
	         Call     UseCamPreset 	( 00000002 )
	      EndIf
	   Case  ==  .Phase:EnemyBegin
	EndSwitch
	Return
	End

#new:Script $Script_80219204
	SetPriority 00000063 
	Label    00000000 
	Call     ActorExists 	( .Actor:Self *Var[0] )
	If  *Var[0]  !=  00000000 
	   Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
	Else
	   Set  *Var[0]  00000000 
	EndIf
	Call     $Function_80218070 ( *Var[0] )
	Wait     00000001 
	Goto     00000000 
	Return
	End

#new:Script $Script_Idle_802192B0
	Label    00000000 
	Call     ActorExists 	( .Actor:Enemy0 *Var[0] )
	If  *Var[0]  !=  00000000 
	   Wait     00000001 
	   Goto     00000000 
	EndIf
	Wait     00000001 
	Goto     00000000 
	Return
	End

#new:Script $Script_HandleEvent_80219328
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   Case  ==  .Event:BeginFirstStrike
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      ExecWait $Script_80219B00 
	      ExecWait $Script_80219BA8 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  006D0009 
	      ExecWait DoNormalHit 
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      ExecWait $Script_80219B00 
	      ExecWait $Script_80219BA8 
	      Set  *Var[0]  00000001 
	      Set  *Var[1]  006D000A 
	      Set  *Var[2]  006D000B 
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      ExecWait $Script_80219B00 
	      Set  *Var[0]  00000001 
	      Set  *Var[1]  006D000A 
	      Set  *Var[2]  006D000B 
	      ExecWait DoBurnHit 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  006D000B 
	      ExecWait $Script_8021B1FC 
	      Return
	   Case  ==  .Event:MultibounceHit
	      ExecWait $Script_80219B00 
	      ExecWait $Script_80219BA8 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  006D0009 
	      ExecWait 8029B998 
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  006D0009 
	      ExecWait 8029B998 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  006D0009 
	      ExecWait $Script_8021B1FC 
	      Return
	   Case  ==  .Event:ShockHit
	      ExecWait $Script_80219B00 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  006D0009 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  006D0009 
	      ExecWait 8029BD70 
	      ExecWait $Script_8021B0F8 
	   Case  ==  .Event:ShockDeath
	      ExecWait $Script_80219B00 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  006D0009 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  006D0009 
	      ExecWait 8029BD70 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  006D0009 
	      ExecWait $Script_8021B1FC 
	      Return
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	      Call     8026E914 ( *Var[0] *Var[1] )
	      If  *Var[1]  ==  00000002 
	         Call     GetActorVar 	( .Actor:Self 00000000 *Var[2] )
	         If  *Var[2]  <  0000000A 
	            Add  *Var[2]  00000002 
	            Call     GetActorVar 	( .Actor:Self 0000000D *Var[0] )
	            Switch  *Var[0] 
	               Case  ==  00000000 
	                  Call     PlaySoundAtActor 	( .Actor:Self 000003A3 )
	                  Call     ActorVarAdd 	( .Actor:Self 0000000D 00000001 )
	               Case  ==  00000001 
	                  Call     PlaySoundAtActor 	( .Actor:Self 000003A4 )
	                  Call     ActorVarAdd 	( .Actor:Self 0000000D 00000001 )
	               Case  ==  00000002 
	                  Call     PlaySoundAtActor 	( .Actor:Self 000003A5 )
	                  Call     ActorVarAdd 	( .Actor:Self 0000000D 00000001 )
	               Case  ==  00000003 
	                  Call     PlaySoundAtActor 	( .Actor:Self 000003A6 )
	                  Call     ActorVarAdd 	( .Actor:Self 0000000D 00000001 )
	               Default
	            EndSwitch
	            If  *Var[2]  >  0000000A 
	               Set  *Var[2]  0000000A 
	            EndIf
	            Call     SetActorVar 	( .Actor:Self 00000000 *Var[2] )
	            ExecWait $Script_8021B14C 
	            Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	            If  *Var[0]  >=  00000006 
	               ExecWait $Script_80219BA8 
	            EndIf
	         EndIf
	      EndIf
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  006D0001 
	      ExecWait DoImmune 
	   EndCaseGroup
	   Case  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  006D0001 
	      ExecWait DoImmune 
	   Case  ==  .Event:SpikeTaunt
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  006D0001 
	      ExecWait DoImmune 
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  006D0009 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  006D0009 
	      ExecWait $Script_8021B1FC 
	      Return
	   Case  ==  .Event:EndFirstStrike
	      ExecWait $Script_8021B0F8 
	      Call     HPBarToHome 	( .Actor:Self )
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  006D0001 
	      ExecWait DoRecover 
	   Case  ==  00000030
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  006D0009 
	      ExecWait DoNormalHit 
	      Wait     000003E8 
	   Case  ==  .Event:ScareAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  006D0001 
	      SetConst  *Var[2]  006D0009 
	      ExecWait DoScareAway 
	      Return
	   Default
	EndSwitch
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_80219B00
	Call     8026E914 ( *Var[0] *Var[1] )
	If  *Var[1]  !=  00000001 
	   Return
	EndIf
	Call     GetLastDamage 	( .Actor:Self *Var[1] )
	Mul  *Var[1]  0000000A 
	Call     GetActorVar 	( .Actor:Self 00000006 *Var[0] )
	Add  *Var[0]  *Var[1] 
	Call     SetActorVar 	( .Actor:Self 00000006 *Var[0] )
	Return
	End

#new:Script $Script_80219BA8
	Call     GetActorVar 	( .Actor:Self 0000000B *Var[0] )
	If  *Var[0]  !=  00000002 
	   Call     SetActorVar 	( .Actor:Self 0000000B 00000001 )
	EndIf
	Return
	End

#new:Script $Script_80219C00
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	If  *Var[0]  >=  00000006 
	   ExecWait $Script_80219BA8 
	EndIf
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000003F )
	Call     SetCamZoom  	( 00000104 )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 00000014 )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  00000032 
	Set  *Var[1]  00000000 
	Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
	Call     SetAnimation 	( .Actor:Self 00000001 006D0006 )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Call     SetAnimation 	( .Actor:Self 00000001 006D0001 )
	Wait     00000008 
	Call     8026F740 ( FFFFFF81 00000002 000003E7 00000000 )
	Call     CheckPlayerHit ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
	Switch  *Var[A] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Call     SetAnimation 	( .Actor:Self 00000001 006D0010 )
	      Thread
	         Wait     0000000A 
	         Call     SetAnimation 	( .Actor:Self 00000001 006D0011 )
	      EndThread
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000014 
	      Set  *Var[1]  00000000 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 0000037D )
	      Call     8026F838 ( FFFFFF81 00000002 )
	      Sub  *Var[0]  0000000F 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 006D0001 )
	      Sub  *Var[0]  0000000A 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 0000037D )
	      Wait     00000008 
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Call     UseCamPreset 	( 00000002 )
	      ExecWait $Script_8021B0F8 
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetAnimation 	( .Actor:Self 00000001 006D0010 )
	Thread
	   Wait     00000007 
	   Call     SetAnimation 	( .Actor:Self 00000001 006D0011 )
	EndThread
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
	Wait     00000002 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000005 00000020 )
	Set  *Var[F]  *Var[0] 
	Switch  *Var[F] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     PlaySoundAtActor 	( .Actor:Self 0000037D )
	      Call     8026F838 ( FFFFFF81 00000002 )
	      Call     UseCamPreset 	( 0000003F )
	      Call     SetCamZoom  	( 00000140 )
	      Call     CamTargetActor ( .Actor:Self )
	      Call     MoveCamOver 	( 00000014 )
	      Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	      Thread
	         Wait     00000005 
	         Call     SetAnimation 	( .Actor:Self 00000001 006D0010 )
	      EndThread
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[0]  00000028 
	      Set  *Var[1]  00000000 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000C 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 0000037D )
	      Call     SetAnimation 	( .Actor:Self 00000001 006D0001 )
	      Add  *Var[0]  00000014 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 0000037D )
	      Wait     00000008 
	      Call     UseCamPreset 	( 00000002 )
	      Call     MoveCamOver 	( 00000014 )
	      ExecWait $Script_8021B0F8 
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021A3E4
	Call     SetActorVar 	( .Actor:Self 0000000B 00000000 )
	Call     SetActorVar 	( .Actor:Self 0000000C 00000003 )
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000000D )
	Call     SetCamZoom  	( 000000F0 )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 00000014 )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  00000050 
	Set  *Var[1]  00000000 
	Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
	Call     SetAnimation 	( .Actor:Self 00000001 006D0006 )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Call     SetAnimation 	( .Actor:Self 00000001 006D0001 )
	Wait     00000014 
	Call     UseCamPreset 	( 00000005 )
	Call     SetCamZoom  	( 0000015E )
	Call     SetCamOffsetZ 	( 00000023 )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 00000008 )
	Call     PlaySoundAtActor 	( .Actor:Self 000002EB )
	Call     SetAnimation 	( .Actor:Self 00000001 006D000F )
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[5] )
	Call     SetActorVar 	( .Actor:Self 00000000 0000000B )
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	Call     GetActorVar 	( .Actor:Self 00000004 *Var[2] )
	Add  *Var[1]  0000000A 
	Add  *Var[2]  00000002 
	Thread
	   Wait     00000001 
	   Call     PlayEffect  	( {FX:LightRays:SharpA} *Var[0] *Var[1] *Var[2] *Fixed[1.0] *Var[B] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Wait     0000001E 
	   Call     RemoveEffect 	( *Var[B] )
	EndThread
	Thread
	   Wait     00000001 
	   Call     PlayEffect  	( 0000004F 00000001 *Var[0] *Var[1] *Var[2] *Fixed[1.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	EndThread
	Wait     00000005 
	Call     CheckPlayerHit ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
	Switch  *Var[A] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Call     SetTargetActor ( .Actor:Self .Actor:Partner )
	      Call     CheckPlayerHit ( .Actor:Self *Var[A] 00000000 00000000 00000001 00000010 )
	      Switch  *Var[A] 
	         Case  ==  00000006 
	         Default
	            Call     ActorExists 	( .Actor:Partner *Var[0] )
	            If  *Var[0]  ==  00000001 
	               Call     SetTargetActor ( .Actor:Self .Actor:Partner )
	               Call     SetGoalToTarget 	( .Actor:Self )
	               Call     DamageTarget 	( .Actor:Self *Var[D] 00000000 0000FFFF 00000000 00000002 00000020 )
	            EndIf
	      EndSwitch
	   EndCaseGroup
	   Default
	      Wait     00000002 
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     DamageTarget 	( .Actor:Self *Var[E] 20000000 0000FFFF 00000000 00000002 00000020 )
	      Wait     00000002 
	      Call     ActorExists 	( .Actor:Partner *Var[0] )
	      If  *Var[0]  ==  00000001 
	         Call     SetTargetActor ( .Actor:Self .Actor:Partner )
	         Call     SetGoalToTarget 	( .Actor:Self )
	         Call     DamageTarget 	( .Actor:Self *Var[D] 20000000 0000FFFF 00000000 00000002 00000020 )
	      EndIf
	EndSwitch
	Wait     00000028 
	Call     SetActorVar 	( .Actor:Self 00000000 *Var[5] )
	Thread
	   Call     GetActorVar 	( .Actor:Self 0000000D *Var[0] )
	   Wait     0000000A 
	   Switch  *Var[0] 
	      Case  ==  00000000 
	         Call     PlaySoundAtActor 	( .Actor:Self 000003AA )
	      Case  ==  00000001 
	         Call     PlaySoundAtActor 	( .Actor:Self 000003A9 )
	      Case  ==  00000002 
	         Call     PlaySoundAtActor 	( .Actor:Self 000003A8 )
	      Case  ==  00000003 
	         Call     PlaySoundAtActor 	( .Actor:Self 000003A7 )
	   EndSwitch
	EndThread
	Call     SetAnimation 	( .Actor:Self 00000001 006D0014 )
	Wait     0000003C 
	Call     UseCamPreset 	( 00000002 )
	ExecWait $Script_8021B0F8 
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021AB14
	Call     SetActorVar 	( .Actor:Self 00000005 00000001 )
	Call     SetActorVar 	( .Actor:Self 00000006 000003E8 )
	Call     SetActorVar 	( .Actor:Self 0000000B 00000002 )
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetActorVar 	( .Actor:Self 00000007 *Var[0] )
	If  *Var[0]  !&  00000002 
	   ConstOR  *Var[0] 00000002 
	   Call     SetActorVar 	( .Actor:Self 00000007 *Var[0] )
	   Call     UseCamPreset 	( 0000000E )
	   Call     SetCamOffsetZ 	( 00000028 )
	   Call     CamTargetActor ( .Actor:Self )
	   Call     MoveCamOver 	( 0000001E )
	   Wait     0000001E 
	   Call     GetEnemyMaxHP 	( .Actor:Self *Var[0] )
	   Call     GetActorHP  	( .Actor:Self *Var[1] )
	   If  *Var[0]  ==  *Var[1] 
	      Call     SayMessage  	( 000F0053 .Actor:Self 00000001 006D0005 006D0001 ) % Ow, that light! It's so bright... This is no good. ...
	   Else
	      Call     SayMessage  	( 000F0052 .Actor:Self 00000001 006D0005 006D0001 ) % Woooaaahh!! I hate light!!! I'll make it darker... ...
	   EndIf
	EndIf
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000000D )
	Call     SetCamZoom  	( 000000E6 )
	Call     SetCamOffsetZ 	( 00000019 )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 00000014 )
	Wait     00000014 
	Call     PlaySoundAtActor 	( .Actor:Self 000003CF )
	Call     SetAnimation 	( .Actor:Self 00000001 006D000F )
	Wait     00000008 
	Thread
	   Wait     00000002 
	   Call     PlaySoundAtActor 	( .Actor:Self 000003D0 )
	EndThread
	Call     SetAnimation 	( .Actor:Self 00000001 006D000E )
	Wait     00000005 
	Call     SetActorVar 	( .Actor:Self 00000000 00000002 )
	Thread
	   Call     GetActorVar 	( .Actor:Self 0000000D *Var[0] )
	   Call     SetActorVar 	( .Actor:Self 0000000D 00000000 )
	   Wait     0000000A 
	   Switch  *Var[0] 
	      Case  ==  00000004 
	         Call     PlaySoundAtActor 	( .Actor:Self 000003AA )
	      Case  ==  00000003 
	         Call     PlaySoundAtActor 	( .Actor:Self 000003A9 )
	      Case  ==  00000002 
	         Call     PlaySoundAtActor 	( .Actor:Self 000003A8 )
	      Case  ==  00000001 
	         Call     PlaySoundAtActor 	( .Actor:Self 000003A7 )
	   EndSwitch
	EndThread
	Wait     0000000E 
	Wait     00000001 
	Wait     0000000F 
	Call     UseCamPreset 	( 00000002 )
	Wait     00000002 
	Call     SetAnimation 	( .Actor:Self 00000001 006D0001 )
	ExecWait $Script_8021B14C 
	Wait     0000001E 
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_8021AF4C
	Call     GetActorVar 	( .Actor:Self 0000000C *Var[0] )
	If  *Var[0]  >  00000000 
	   Sub  *Var[0]  00000001 
	   Call     SetActorVar 	( .Actor:Self 0000000C *Var[0] )
	EndIf
	Call     GetActorVar 	( .Actor:Self 0000000B *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000002 
	      Call     GetActorVar 	( .Actor:Self 0000000C *Var[0] )
	      If  *Var[0]  >  00000000 
	         Call     SetActorVar 	( .Actor:Self 0000000B 00000000 )
	      EndIf
	   Case  ==  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      If  *Var[0]  <  00000006 
	         Call     SetActorVar 	( .Actor:Self 0000000B 00000000 )
	      EndIf
	EndSwitch
	Call     GetActorVar 	( .Actor:Self 0000000B *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000002 
	      ExecWait $Script_8021A3E4 
	   Case  ==  00000001 
	      ExecWait $Script_8021AB14 
	   Default
	      ExecWait $Script_80219C00 
	EndSwitch
	Return
	End

#new:Script $Script_8021B0F8
	SetConst  *Var[0]  00000001 
	SetConst  *Var[1]  006D0007 
	ExecWait DoReturnHome 
	Call     SetAnimation 	( .Actor:Self 00000001 006D0001 )
	Return
	End

#new:Script $Script_8021B14C
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Switch  *Var[0] 
	   Case  <  00000005 
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .True )
	   Case  <  00000008 
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .False )
	   Default
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .False )
	EndSwitch
	Return
	End

#new:Script $Script_8021B1FC
	ExecWait 8029AF08 
	Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
	Call     RemoveEffect 	( *Var[0] )
	Call     RemoveActor 	( .Actor:Self )
	Return
	End

#new:Unknown $???_8021B250
00000019 

#new:Script $Script_8021B254
	Call     $Function_80218490 ( )
	Return
	End

#new:Script $Script_BeforeBattle_8021B270
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Thread
	   SetF  *Var[0]  *Fixed[0.0] 
	   SetF  *Var[1]  *Fixed[0.0] 
	   Loop     
	      Call     RotateModel 	( 00000017 *Var[1] 00000000 00000000 00000001 )
	      Call     RotateModel 	( 00000015 *Var[0] 00000000 00000000 00000001 )
	      SubF  *Var[0]  *Fixed[0.60058594] 
	      SubF  *Var[1]  *Fixed[7.2001953] 
	      Call     ClampFloat  	( *Var[0] )
	      Call     ClampFloat  	( *Var[1] )
	      Wait     00000001 
	   EndLoop
	EndThread
	Exec     $Script_8021B254 
	Return
	End

#new:Script $Script_AfterBattle_8021B388
	Return
	End

#new:Stage $Stage_8021B398
$ASCII_8022EBD8  % omo_tex
$ASCII_8022EBC8  % omo_bt01_shape
$ASCII_8022EBB8  % omo_bt01_hit
$Script_BeforeBattle_8021B270 
$Script_AfterBattle_8021B388 
$ASCII_8022EBB0  % omo_bg
00000000 
00000000 
00000000 
00000000 

#new:Script $Script_BeforeBattle_8021B3C0
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Return
	End

#new:Script $Script_AfterBattle_8021B3FC
	Return
	End

#new:Stage $Stage_8021B40C
$ASCII_8022EC08  % omo_tex
$ASCII_8022EBF8  % omo_bt02_shape
$ASCII_8022EBE8  % omo_bt02_hit
$Script_BeforeBattle_8021B3C0 
$Script_AfterBattle_8021B3FC 
$ASCII_8022EBE0  % omo_bg
00000000 
00000000 
00000000 
00000000 

PADDING: 8021B434 to 8021B440 (0055A814 to 0055A820)
00000000 00000000 00000000 

#new:Script $Script_BeforeBattle_8021B440
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Call     802C9308 ( 00000012 00000000 )
	Return
	End

#new:Script $Script_AfterBattle_8021B490
	Return
	End

#new:Stage $Stage_8021B4A0
$ASCII_8022EC38  % omo_tex
$ASCII_8022EC28  % omo_bt03_shape
$ASCII_8022EC18  % omo_bt03_hit
$Script_BeforeBattle_8021B440 
$Script_AfterBattle_8021B490 
$ASCII_8022EC10  % omo_bg
00000000 
00000000 
00000000 
00000000 

PADDING: 8021B4C8 to 8021B4D0 (0055A8A8 to 0055A8B0)
00000000 00000000 

#new:Script $Script_BeforeBattle_8021B4D0
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Return
	End

#new:Script $Script_AfterBattle_8021B50C
	Return
	End

#new:Stage $Stage_8021B51C
$ASCII_8022EC68  % omo_tex
$ASCII_8022EC58  % omo_bt03_shape
$ASCII_8022EC48  % omo_bt03_hit
$Script_BeforeBattle_8021B4D0 
$Script_AfterBattle_8021B50C 
$ASCII_8022EC40  % omo_bg
00000000 
00000000 
00000000 
00000000 

PADDING: 8021B544 to 8021B550 (0055A924 to 0055A930)
00000000 00000000 00000000 

#new:Script $Script_BeforeBattle_8021B550
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Call     SetTexPanner 	( 0000001D 0000000A )
	Thread
	   Set  *Var[E]  00000000 
	   Loop     
	      Add  *Var[E]  00008000 
	      Call     802C9364 ( 0000000A 00000000 *Var[E] 00000000 )
	      Wait     0000000A 
	   EndLoop
	EndThread
	Return
	End

#new:Script $Script_AfterBattle_8021B60C
	Return
	End

#new:ForegroundModelList $ForegroundModelList_8021B61C
00000012 00000011 0000000D 00000000 

#new:Stage $Stage_8021B62C
$ASCII_8022EC98  % omo_tex
$ASCII_8022EC88  % omo_bt04_shape
$ASCII_8022EC78  % omo_bt04_hit
$Script_BeforeBattle_8021B550 
$Script_AfterBattle_8021B60C 
$ASCII_8022EC70  % omo_bg
$ForegroundModelList_8021B61C 
00000004 
$SpecialFormation_8021B684 
00000000 

#new:Vector3D $Vector3D_8021B654
-49` 56` -68`

#new:Vector3D $Vector3D_8021B660
-13` 56` -68`

#new:Vector3D $Vector3D_8021B66C
20` 56` -68`

#new:Vector3D $Vector3D_8021B678
53` 56` -68`

#new:SpecialFormation $SpecialFormation_8021B684
$SlotMachineStart $Vector3D_8021B654 00000000 00000000 00000000 00000000 00000000 
$SlotMachineStop $Vector3D_8021B660 00000000 00000001 00000000 00000000 00000000 
$SlotMachineStop $Vector3D_8021B66C 00000000 00000002 00000000 00000000 00000000 
$SlotMachineStop $Vector3D_8021B678 00000000 00000003 00000000 00000000 00000000 

#new:IntTable $IntTable_8021B6F4
00000000 00000001 00000000 00000002 00000000 00000002 00000000 00000002 

#new:IntTable $IntTable_8021B714
00000000 00000001 00000000 00000002 00000001 00000002 00000000 00000002 

#new:IntTable $IntTable_8021B734
00000000 00000001 00000000 00000002 00000000 00000002 00000000 00000002 

#new:DefenseTable $DefenseTable_8021B754
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021B760
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021B80C
00800000 01000000 000000FF 00000000 $DefenseTable_8021B754 00000000 00000000 00000000 00000000 

#new:Actor $SlotMachineStop
% stats
[Index]        CFb 
[Level]        99`b 
[MaxHP]        99`b 
[Coins]         0`b 
[Flags]       00244005 
[StatusTable] $StatusTable_8021B760 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021B80C 
[Script]      $Script_Init_8021B880 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]   0`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         44`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Actor $SlotMachineStart
% stats
[Index]        CEb 
[Level]        99`b 
[MaxHP]        99`b 
[Coins]         0`b 
[Flags]       00244005 
[StatusTable] $StatusTable_8021B760 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021B80C 
[Script]      $Script_Init_8021B880 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]   0`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         44`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Script $Script_Init_8021B880
	UseArray $End[0] 
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021CCC8 )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8021BA18 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021C574 )
	Set  *Array[1]  00000000 
	Set  *Array[2]  00000000 
	Set  *Array[3]  00000000 
	Set  *Array[4]  00000000 
	Call     RandInt     	( 00000008 *Var[0] )
	Mul  *Var[0]  0000002D 
	Set  *Array[5]  *Var[0] 
	Call     RandInt     	( 00000008 *Var[0] )
	Mul  *Var[0]  0000002D 
	Set  *Array[6]  *Var[0] 
	Call     RandInt     	( 00000008 *Var[0] )
	Mul  *Var[0]  0000002D 
	Set  *Array[7]  *Var[0] 
	Call     $Function_802186A0 ( )
	If  *Var[0]  ==  00000001 
	   Set  *Array[1]  00000001 
	   Set  *Array[2]  00000001 
	   Set  *Array[3]  00000001 
	   Set  *Array[4]  00000001 
	EndIf
	Return
	End

#new:Script $Script_Idle_8021BA18
	UseArray $End[0] 
	Call     EnableTexPanning 	( 0000002D .True )
	Set  *Var[E]  00000000 
	Set  *Var[F]  00000000 
	Label    00000000 
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	   Case  ==  00000001 
	      Switch  *Array[2] 
	         Case  ==  00000000 
	         Case  ==  00000001 
	            Add  *Array[5]  00000005 
	         Case  ==  00000002 
	            If  *Array[8]  >  00000000 
	               Add  *Array[5]  00000005 
	               Sub  *Array[8]  00000005 
	               BreakCase
	            EndIf
	            Set  *Var[0]  *Array[5] 
	            Mod  *Var[0]  0000002D 
	            If  *Var[0]  !=  00000000 
	               Add  *Array[5]  00000005 
	            Else
	               Set  *Array[2]  00000003 
	            EndIf
	      EndSwitch
	      Call     RotateModel 	( 00000020 *Array[5] 00000001 00000000 00000000 )
	      Call     RotateModel 	( 00000021 *Array[5] 00000001 00000000 00000000 )
	      Call     RotateModel 	( 00000022 *Array[5] 00000001 00000000 00000000 )
	   Case  ==  00000002 
	      Switch  *Array[3] 
	         Case  ==  00000000 
	         Case  ==  00000001 
	            Add  *Array[6]  00000005 
	         Case  ==  00000002 
	            If  *Array[9]  >  00000000 
	               Add  *Array[6]  00000005 
	               Sub  *Array[9]  00000005 
	               BreakCase
	            EndIf
	            Set  *Var[0]  *Array[6] 
	            Mod  *Var[0]  0000002D 
	            If  *Var[0]  !=  00000000 
	               Add  *Array[6]  00000005 
	            Else
	               Set  *Array[3]  00000003 
	            EndIf
	      EndSwitch
	      Call     RotateModel 	( 00000024 *Array[6] 00000001 00000000 00000000 )
	      Call     RotateModel 	( 00000025 *Array[6] 00000001 00000000 00000000 )
	      Call     RotateModel 	( 00000026 *Array[6] 00000001 00000000 00000000 )
	   Case  ==  00000003 
	      Switch  *Array[4] 
	         Case  ==  00000000 
	         Case  ==  00000001 
	            Add  *Array[7]  00000005 
	         Case  ==  00000002 
	            If  *Array[A]  >  00000000 
	               Add  *Array[7]  00000005 
	               Sub  *Array[A]  00000005 
	               BreakCase
	            EndIf
	            Set  *Var[0]  *Array[7] 
	            Mod  *Var[0]  0000002D 
	            If  *Var[0]  !=  00000000 
	               Add  *Array[7]  00000005 
	            Else
	               Set  *Array[4]  00000003 
	            EndIf
	      EndSwitch
	      Call     RotateModel 	( 00000028 *Array[7] 00000001 00000000 00000000 )
	      Call     RotateModel 	( 00000029 *Array[7] 00000001 00000000 00000000 )
	      Call     RotateModel 	( 0000002A *Array[7] 00000001 00000000 00000000 )
	EndSwitch
	If  *Array[5]  >=  00000168 
	   Sub  *Array[5]  00000168 
	EndIf
	If  *Array[6]  >=  00000168 
	   Sub  *Array[6]  00000168 
	EndIf
	If  *Array[7]  >=  00000168 
	   Sub  *Array[7]  00000168 
	EndIf
	If  *Array[1]  ==  00000000 
	   Add  *Var[F]  FFFFFEEB 
	   Call     802C9364 ( 0000000B 00000000 00000000 *Var[F] )
	EndIf
	If  *Array[1]  ==  00000001 
	   Add  *Var[F]  FFFFFBAA 
	   Call     802C9364 ( 0000000B 00000000 00000000 *Var[F] )
	EndIf
	If  *Array[1]  ==  00000002 
	   Add  *Var[F]  FFFFF2FE 
	   Call     802C9364 ( 0000000B 00000000 00000000 *Var[F] )
	EndIf
	If  *Array[1]  ==  00000002 
	   Goto     00000001 
	EndIf
	If  *Array[1]  ==  00000000 
	   Goto     00000001 
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	If  *Var[0]  !=  00000000 
	   Goto     00000001 
	EndIf
	Set  *Var[0]  *Array[2] 
	Add  *Var[0]  *Array[3] 
	Add  *Var[0]  *Array[4] 
	If  *Var[0]  ==  00000009 
	   Set  *Var[0]  *Array[5] 
	   Div  *Var[0]  0000002D 
	   UseIntBuffer $IntTable_8021B6F4 
	   GetIntN  *Var[A] *Var[0] 
	   Set  *Var[0]  *Array[6] 
	   Div  *Var[0]  0000002D 
	   UseIntBuffer $IntTable_8021B714 
	   GetIntN  *Var[B] *Var[0] 
	   Set  *Var[0]  *Array[7] 
	   Div  *Var[0]  0000002D 
	   UseIntBuffer $IntTable_8021B734 
	   GetIntN  *Var[C] *Var[0] 
	   Loop     
	      If  *Var[A]  !=  *Var[B] 
	         BreakLoop
	      EndIf
	      If  *Var[A]  !=  *Var[C] 
	         BreakLoop
	      EndIf
	      If  *Var[B]  !=  *Var[C] 
	         BreakLoop
	      EndIf
	      Thread
	         Call     8026BF48 ( 00000001 )
	         Call     UseCamPreset 	( 00000013 )
	         Call     SetCamTarget 	( 00000000 00000064 00000000 )
	         Call     SetCamOffsetZ 	( 00000000 )
	         Call     SetCamZoom  	( 00000154 )
	         Call     MoveCamOver 	( 0000000A )
	         Switch  *Var[A] 
	            Case  ==  00000000 
	               Loop     0000000A 
	                  Call     MakeItemEntity ( .Item:Coin FFFFFFF9 00000069 FFFFFFB6 0000001A 00000000 )
	                  Call     $Function_802186C8 ( )
	                  Wait     00000001 
	                  Call     MakeItemEntity ( .Item:Coin 00000011 00000069 FFFFFFB6 0000001A 00000000 )
	                  Call     $Function_802186C8 ( )
	                  Wait     00000001 
	                  Call     MakeItemEntity ( .Item:Coin 0000002A 00000069 FFFFFFB6 0000001A 00000000 )
	                  Call     $Function_802186C8 ( )
	                  Wait     0000000A 
	               EndLoop
	            Case  ==  00000001 
	               Loop     0000000A 
	                  Call     MakeItemEntity ( .Item:Coin FFFFFFF9 00000069 FFFFFFB6 0000001A 00000000 )
	                  Call     $Function_802186C8 ( )
	                  Wait     00000001 
	                  Call     MakeItemEntity ( .Item:Coin 00000011 00000069 FFFFFFB6 0000001A 00000000 )
	                  Call     $Function_802186C8 ( )
	                  Wait     00000001 
	                  Call     MakeItemEntity ( .Item:Coin 0000002A 00000069 FFFFFFB6 0000001A 00000000 )
	                  Call     $Function_802186C8 ( )
	                  Wait     0000000A 
	               EndLoop
	            Case  ==  00000002 
	               Loop     0000000A 
	                  Call     MakeItemEntity ( .Item:Coin FFFFFFF9 00000069 FFFFFFB6 0000001A 00000000 )
	                  Call     $Function_802186C8 ( )
	                  Wait     00000001 
	                  Call     MakeItemEntity ( .Item:Coin 00000011 00000069 FFFFFFB6 0000001A 00000000 )
	                  Call     $Function_802186C8 ( )
	                  Wait     00000001 
	                  Call     MakeItemEntity ( .Item:Coin 0000002A 00000069 FFFFFFB6 0000001A 00000000 )
	                  Call     $Function_802186C8 ( )
	                  Wait     0000000A 
	               EndLoop
	         EndSwitch
	         Set  *Array[1]  00000000 
	         Set  *Array[2]  00000000 
	         Set  *Array[3]  00000000 
	         Set  *Array[4]  00000000 
	         Call     8026BF48 ( 00000000 )
	      EndThread
	      Set  *Array[1]  00000002 
	      BreakLoop
	   EndLoop
	EndIf
	Label    00000001 
	Wait     00000001 
	Goto     00000000 
	Return
	End

#new:Script $Script_HandleEvent_8021C574
	UseArray $End[0] 
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	   CaseOR  ==  .Event:BurnHit
	   CaseOR  ==  .Event:ShockHit
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         Case  ==  00000000 
	            Call     TranslateModel ( 0000001C 00000000 FFFFFFFE 00000000 )
	            Wait     00000001 
	            Call     TranslateModel ( 0000001C 00000000 FFFFFFFA 00000000 )
	            Wait     00000001 
	            Call     TranslateModel ( 0000001C 00000000 FFFFFFF9 00000000 )
	            Wait     00000004 
	            Call     TranslateModel ( 0000001C 00000000 FFFFFFFC 00000000 )
	            Wait     00000001 
	            Call     TranslateModel ( 0000001C 00000000 FFFFFFFE 00000000 )
	            Wait     00000001 
	            Call     TranslateModel ( 0000001C 00000000 FFFFFFFF 00000000 )
	            Wait     00000001 
	            Call     TranslateModel ( 0000001C 00000000 00000000 00000000 )
	            Set  *Array[1]  00000001 
	            Set  *Array[2]  00000001 
	            Set  *Array[3]  00000001 
	            Set  *Array[4]  00000001 
	         Case  ==  00000001 
	            Call     TranslateModel ( 0000001D 00000000 FFFFFFFE 00000000 )
	            Wait     00000001 
	            Call     TranslateModel ( 0000001D 00000000 FFFFFFFA 00000000 )
	            Wait     00000001 
	            Call     TranslateModel ( 0000001D 00000000 FFFFFFF9 00000000 )
	            Wait     00000004 
	            Call     TranslateModel ( 0000001D 00000000 FFFFFFFC 00000000 )
	            Wait     00000001 
	            Call     TranslateModel ( 0000001D 00000000 FFFFFFFE 00000000 )
	            Wait     00000001 
	            Call     TranslateModel ( 0000001D 00000000 FFFFFFFF 00000000 )
	            Wait     00000001 
	            Call     TranslateModel ( 0000001D 00000000 00000000 00000000 )
	            If  *Array[2]  ==  00000001 
	               Set  *Array[8]  00000064 
	               Set  *Array[9]  00000096 
	               Set  *Array[A]  000000C8 
	               Set  *Array[2]  00000002 
	               Set  *Array[3]  00000002 
	               Set  *Array[4]  00000002 
	            EndIf
	         Case  ==  00000002 
	            Call     TranslateModel ( 0000001D 00000000 FFFFFFFE 00000000 )
	            Wait     00000001 
	            Call     TranslateModel ( 0000001D 00000000 FFFFFFFA 00000000 )
	            Wait     00000001 
	            Call     TranslateModel ( 0000001D 00000000 FFFFFFF9 00000000 )
	            Wait     00000004 
	            Call     TranslateModel ( 0000001D 00000000 FFFFFFFC 00000000 )
	            Wait     00000001 
	            Call     TranslateModel ( 0000001D 00000000 FFFFFFFE 00000000 )
	            Wait     00000001 
	            Call     TranslateModel ( 0000001D 00000000 FFFFFFFF 00000000 )
	            Wait     00000001 
	            Call     TranslateModel ( 0000001D 00000000 00000000 00000000 )
	            If  *Array[3]  ==  00000001 
	               Set  *Array[8]  00000096 
	               Set  *Array[9]  00000064 
	               Set  *Array[A]  000000C8 
	               Set  *Array[2]  00000002 
	               Set  *Array[3]  00000002 
	               Set  *Array[4]  00000002 
	            EndIf
	         Case  ==  00000003 
	            Call     TranslateModel ( 0000001D 00000000 FFFFFFFE 00000000 )
	            Wait     00000001 
	            Call     TranslateModel ( 0000001D 00000000 FFFFFFFA 00000000 )
	            Wait     00000001 
	            Call     TranslateModel ( 0000001D 00000000 FFFFFFF9 00000000 )
	            Wait     00000004 
	            Call     TranslateModel ( 0000001D 00000000 FFFFFFFC 00000000 )
	            Wait     00000001 
	            Call     TranslateModel ( 0000001D 00000000 FFFFFFFE 00000000 )
	            Wait     00000001 
	            Call     TranslateModel ( 0000001D 00000000 FFFFFFFF 00000000 )
	            Wait     00000001 
	            Call     TranslateModel ( 0000001D 00000000 00000000 00000000 )
	            If  *Array[4]  ==  00000001 
	               Set  *Array[8]  000000C8 
	               Set  *Array[9]  00000096 
	               Set  *Array[A]  00000064 
	               Set  *Array[2]  00000002 
	               Set  *Array[3]  00000002 
	               Set  *Array[4]  00000002 
	            EndIf
	      EndSwitch
	   EndCaseGroup
	   CaseOR  ==  .Event:BurnDeath
	   CaseOR  ==  .Event:MultibounceHit
	   CaseOR  ==  .Event:ShockDeath
	   CaseOR  ==  .Event:Death
	   CaseOR  ==  .Event:MultibounceDeath
	   CaseOR  ==  .Event:SpikeContact
	   CaseOR  ==  .Event:BurnContact
	   EndCaseGroup
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	   EndCaseGroup
	EndSwitch
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_8021CCC8
	UseArray $End[0] 
	Return
	End

PADDING: 8021CCE4 to 8021CCF0 (0055C0C4 to 0055C0D0)
00000000 00000000 00000000 

#new:Script $Script_BeforeBattle_8021CCF0
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Call     802C9308 ( 00000018 00000000 )
	Call     802C9308 ( 0000001C 00000000 )
	Return
	End

#new:Script $Script_AfterBattle_8021CD54
	Return
	End

#new:ForegroundModelList $ForegroundModelList_8021CD64
00000027 00000026 00000000 

#new:Stage $Stage_8021CD70
$ASCII_8022ECC8  % omo_tex
$ASCII_8022ECB8  % omo_bt05_shape
$ASCII_8022ECA8  % omo_bt05_hit
$Script_BeforeBattle_8021CCF0 
$Script_AfterBattle_8021CD54 
$ASCII_8022ECA0  % omo_bg
$ForegroundModelList_8021CD64 
00000000 
00000000 
00000000 

PADDING: 8021CD98 to 8021CDA0 (0055C178 to 0055C180)
00000000 00000000 

#new:Script $Script_BeforeBattle_8021CDA0
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Call     802C9308 ( 00000023 00000000 )
	Call     802C9308 ( 0000002D 00000000 )
	Return
	End

#new:Script $Script_AfterBattle_8021CE04
	Return
	End

#new:ForegroundModelList $ForegroundModelList_8021CE14
0000001B 00000000 

#new:Stage $Stage_8021CE1C
$ASCII_8022ECF8  % omo_tex
$ASCII_8022ECE8  % omo_bt05_shape
$ASCII_8022ECD8  % omo_bt05_hit
$Script_BeforeBattle_8021CDA0 
$Script_AfterBattle_8021CE04 
$ASCII_8022ECD0  % omo_bg
$ForegroundModelList_8021CE14 
00000000 
00000000 
00000000 

PADDING: 8021CE44 to 8021CE50 (0055C224 to 0055C230)
00000000 00000000 00000000 

#new:Script $Script_8021CE50
	Set  *Var[A]  *Var[0] 
	Set  *Var[9]  *Var[1] 
	Set  *Var[8]  *Var[2] 
	Label    00000000 
	Call     MakeLerp    	( 00000000 *Var[9] *Var[8] 0000000A )
	Loop     
	   Call     UpdateLerp  	( )
	   Call     TranslateGroup ( *Var[A] 00000000 *Var[0] 00000000 )
	   Wait     00000001 
	   If  *Var[1]  ==  00000000 
	      BreakLoop
	   EndIf
	EndLoop
	Call     MakeLerp    	( *Var[9] 00000000 *Var[8] 0000000A )
	Loop     
	   Call     UpdateLerp  	( )
	   Call     TranslateGroup ( *Var[A] 00000000 *Var[0] 00000000 )
	   Wait     00000001 
	   If  *Var[1]  ==  00000000 
	      BreakLoop
	   EndIf
	EndLoop
	Goto     00000000 
	Return
	End

#new:Script $Script_BeforeBattle_8021CFB0
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Thread
	   Set  *Var[0]  0000001A 
	   Set  *Var[1]  FFFFFFCE 
	   Set  *Var[2]  00000078 
	   Exec     $Script_8021CE50 
	   Wait     0000000A 
	   Set  *Var[0]  0000001E 
	   Set  *Var[1]  FFFFFFB0 
	   Set  *Var[2]  00000096 
	   Exec     $Script_8021CE50 
	EndThread
	Return
	End

#new:Script $Script_AfterBattle_8021D080
	Return
	End

#new:ForegroundModelList $ForegroundModelList_8021D090
00000027 00000026 00000000 

#new:Stage $Stage_8021D09C
$ASCII_8022ED28  % omo_tex
$ASCII_8022ED18  % omo_bt06_shape
$ASCII_8022ED08  % omo_bt06_hit
$Script_BeforeBattle_8021CFB0 
$Script_AfterBattle_8021D080 
$ASCII_8022ED00  % omo_bg
$ForegroundModelList_8021D090 
00000000 
00000000 
00000000 

PADDING: 8021D0C4 to 8021D0D0 (0055C4A4 to 0055C4B0)
00000000 00000000 00000000 

#new:Script $Script_BeforeBattle_8021D0D0
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Return
	End

#new:Script $Script_AfterBattle_8021D10C
	Return
	End

#new:Stage $Stage_8021D11C
$ASCII_8022ED50  % omo_tex
$ASCII_8022ED40  % omo_bt07_shape
$ASCII_8022ED30  % omo_bt07_hit
$Script_BeforeBattle_8021D0D0 
$Script_AfterBattle_8021D10C 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 8021D144 to 8021D150 (0055C524 to 0055C530)
00000000 00000000 00000000 

#new:DefenseTable $DefenseTable_8021D150
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021D15C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep     100`
.Status:Poison    100`
.Status:Frozen    100`
.Status:Dizzy     100`
.Status:Fear      100`
.Status:Static    100`
.Status:Paralyze  100`
.Status:Shrink    100`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021D208
00800000 01000000 001400FF $IdleAnimations_8021D254 $DefenseTable_8021D150 00000000 00000000 00F60000 00000000 

#new:Actor $Goomba
% stats
[Index]         7b 
[Level]         5`b 
[MaxHP]         2`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021D15C 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021D208 
[Script]      $Script_Init_8021D2EC 
% move effectiveness
[Escape]       90`b 
[Item]        100`b 
[AirLift]     100`b 
[Hurricane]    90`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  24`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_8021D254
.Status:Normal    00260001
.Status:Stone     00260000
.Status:Sleep     00260008
.Status:Poison    00260001
.Status:Stop      00260000
.Status:Static    00260001
.Status:Paralyze  00260000
.Status:Dizzy     00260007
.Status:Fear      00260007
.Status:End

#new:IdleAnimations $IdleAnimations_8021D2A0
.Status:Normal    00260003
.Status:Stone     00260000
.Status:Sleep     00260008
.Status:Poison    00260001
.Status:Stop      00260000
.Status:Static    00260003
.Status:Paralyze  00260000
.Status:Dizzy     00260007
.Status:Fear      00260007
.Status:End

#new:Script $Script_Init_8021D2EC
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021DE40 )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8021D338 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021D614 )
	Return
	End

#new:Script $Script_Idle_8021D338
	Label    0000000A 
	Call     RandInt     	( 00000050 *Var[0] )
	Add  *Var[0]  00000050 
	Loop     *Var[0] 
	   Label    00000000 
	   Call     GetStatusFlags ( .Actor:Self *Var[1] )
	   If  *Var[1]  &  0035D000 
	      Wait     00000001 
	      Goto     00000000 
	   EndIf
	   Wait     00000001 
	EndLoop
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  00000005 
	Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021D2A0 )
	Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	Call     8027A264 ( FFFFFF81 00000000 )
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021D254 )
	Loop     00000014 
	   Label    00000001 
	   Call     GetStatusFlags ( .Actor:Self *Var[1] )
	   If  *Var[1]  &  0035D000 
	      Wait     00000001 
	      Goto     00000001 
	   EndIf
	   Wait     00000001 
	EndLoop
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub  *Var[0]  00000005 
	Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021D2A0 )
	Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	Call     8027A264 ( FFFFFF81 00000000 )
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021D254 )
	Loop     00000050 
	   Label    00000002 
	   Call     GetStatusFlags ( .Actor:Self *Var[1] )
	   If  *Var[1]  &  0035D000 
	      Wait     00000001 
	      Goto     00000002 
	   EndIf
	   Wait     00000001 
	EndLoop
	Goto     0000000A 
	Return
	End

#new:Script $Script_HandleEvent_8021D614
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00260005 
	      ExecWait DoNormalHit 
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00260009 
	      SetConst  *Var[2]  0026000A 
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00260009 
	      SetConst  *Var[2]  0026000A 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0026000A 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00260005 
	      ExecWait 8029B998 
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00260005 
	      ExecWait 8029B998 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00260006 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:ShockHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0026000E 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00260005 
	      ExecWait 8029BD70 
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	      Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 00260007 )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
	      Wait     00000005 
	      Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	   Case  ==  .Event:ShockDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0026000E 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00260006 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:StarBeam
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	   CaseOR  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00260001 
	      ExecWait DoImmune 
	   EndCaseGroup
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00260005 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00260006 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:EndFirstStrike
	      Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 00260003 )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
	      Call     HPBarToHome 	( .Actor:Self )
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00260001 
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00260003 
	      SetConst  *Var[2]  00260005 
	      ExecWait DoScareAway 
	      Return
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00260003 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00260005 
	      ExecWait DoBlowAway 
	      Return
	   Default
	EndSwitch
	Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:FloatTable $FloatTable_8021DCD4
00000000 3C8EF77F 3D0EF241 3D565E46 3D8EDC3C 3DB27ED8 3DD612C7 3DF99674 
3E0E835E 3E20303C 3E31D0C8 3E43636F 3E54E6E2 3E66598E 3E77BA67 3E8483ED 
3E8D204B 3E95B1C8 3E9E377A 3EA6B0D9 3EAF1D3F 3EB77C03 3EBFCC7D 3EC80DE5 
3ED03FD5 3ED86163 3EE0722A 3EE87161 3EF05EA2 3EF83904 3F000000 3F03D988 
3F07A8C6 3F0B6D76 3F0F2746 3F12D5E0 3F167914 3F1A108C 3F1D9BF6 3F211B1E 
3F248DC1 3F27F37C 3F2B4C2B 3F2E976C 3F31D51B 3F3504F7 3F3826AB 3F3B3A04 
3F3E3EC0 3F4134AD 3F441B76 3F46F30A 3F49BB17 3F4C7369 3F4F1BBD 3F51B3F2 
3F543BD6 3F56B325 3F5919AC 3F5B6F4C 3F5DB3D0 3F5FE719 3F6208E1 3F641909 
3F66175D 3F6803CD 3F69DE16 3F6BA637 3F6D5BEE 3F6EFF19 3F708FB8 3F720D88 
3F737879 3F74D068 3F761544 3F7746ED 3F786552 3F797050 3F7A67E8 3F7B4BE8 
3F7C1C61 3F7CD91F 3F7D8234 3F7E177F 3F7E98FE 3F7F06A3 3F7F605B 3F7FA637 
3F7FD817 3F7FF60A 3F800000 

#new:Script $Script_TakeTurn_8021DE40
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 00260003 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     AddToGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
	Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFF 00000000 )
	Wait     00000001 
	Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFE 00000000 )
	Wait     00000005 
	Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  0000000A 
	      Set  *Var[1]  0000000A 
	      Add  *Var[2]  00000003 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
	      Thread
	         Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[0] )
	         Set  *Var[0]  00000000 
	         Loop     00000010 
	            Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
	            Call     $Function_8021887C ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
	            Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	            Set  *Var[1]  *Var[4] 
	            Set  *Var[2]  *Var[5] 
	            Set  *Var[3]  *Var[6] 
	            Wait     00000001 
	         EndLoop
	      EndThread
	      Thread
	         Wait     00000006 
	         Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
	      EndThread
	      Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00260008 )
	      Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
	      Call     8026BA04 ( FFFFFF81 00000000 00000005 00000000 )
	      Wait     00000001 
	      Call     SetActorScale 	( .Actor:Self *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
	      Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFE 00000000 )
	      Wait     00000001 
	      Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	      Call     8026BA04 ( FFFFFF81 00000000 00000007 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00260005 )
	      Wait     00000005 
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Wait     00000005 
	      Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[0]  00000014 
	      Set  *Var[1]  00000000 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
	      Thread
	         Wait     00000004 
	         Set  *Var[0]  000000B4 
	         Loop     00000004 
	            Sub  *Var[0]  0000002D 
	            Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	            Wait     00000001 
	         EndLoop
	         Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
	      EndThread
	      Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00260007 )
	      Wait     00000005 
	      Call     UseCamPreset 	( 00000002 )
	      Call     8027D7F0 ( )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Wait     00000005 
	      Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	   Default
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
	      Thread
	         Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[0] )
	         Set  *Var[0]  00000000 
	         Loop     00000010 
	            Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
	            Call     $Function_8021887C ( *Var[1] *Var[2] *Var[4] *Var[5] *Var[0] )
	            Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	            Set  *Var[1]  *Var[4] 
	            Set  *Var[2]  *Var[5] 
	            Set  *Var[3]  *Var[6] 
	            Wait     00000001 
	         EndLoop
	      EndThread
	      Thread
	         Wait     00000006 
	         Call     SetAnimation 	( .Actor:Self 00000001 00260004 )
	      EndThread
	      Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 0026000B )
	      Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
	      Wait     00000001 
	      Call     SetActorScale 	( .Actor:Self *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
	      Wait     00000001 
	EndSwitch
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000001 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
	      Wait     00000001 
	      Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	      Wait     00000001 
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[0]  00000028 
	      Set  *Var[1]  00000000 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	      Add  *Var[0]  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	      Add  *Var[0]  00000014 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00260001 )
	      Wait     00000003 
	      Call     8027D7F0 ( )
	      Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 00260003 )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

PADDING: 8021EB08 to 8021EB10 (0055DEE8 to 0055DEF0)
00000000 00000000 

#new:IdleAnimations $IdleAnimations_8021EB10
.Status:Normal    003A0001
.Status:Stone     003A0000
.Status:Sleep     003A0003
.Status:Poison    003A0001
.Status:Stop      003A0000
.Status:Static    003A0001
.Status:Paralyze  003A0000
.Status:Dizzy     003A0005
.Status:Fear      003A0005
.Status:End

#new:DefenseTable $DefenseTable_8021EB5C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021EB68
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      90`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear      100`
.Status:Static     50`
.Status:Paralyze   90`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:SpriteTable $SpriteTable_8021EC14
00800000 01000000 F42000FF $IdleAnimations_8021EB10 $DefenseTable_8021EB5C 00000000 00000000 08FD0000 00000000 

#new:Actor $Clubba
% stats
[Index]        1Eb 
[Level]        13`b 
[MaxHP]         8`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021EB68 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021EC14 
[Script]      $Script_Init_8021EC60 
% move effectiveness
[Escape]       60`b 
[Item]         70`b 
[AirLift]      60`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         42`b  42`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  35`b % dx dy

#new:Script $Script_Init_8021EC60
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021F1CC )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8021ECAC )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021ECBC )
	Return
	End

#new:Script $Script_Idle_8021ECAC
	Return
	End

#new:Script $Script_HandleEvent_8021ECBC
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003A0004 
	      ExecWait DoNormalHit 
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003A0006 
	      SetConst  *Var[2]  003A0007 
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003A0006 
	      SetConst  *Var[2]  003A0007 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003A0007 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003A0004 
	      ExecWait 8029B998 
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003A0004 
	      ExecWait 8029B998 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003A0004 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:ShockHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003A0004 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003A0004 
	      ExecWait 8029BD70 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003A0002 
	      ExecWait DoReturnHome 
	   Case  ==  .Event:ShockDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003A0004 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003A0004 
	      ExecWait DoDeath 
	      Return
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	   CaseOR  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003A0001 
	      ExecWait DoImmune 
	   EndCaseGroup
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003A0004 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003A0004 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003A0001 
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003A0002 
	      SetConst  *Var[2]  003A0004 
	      ExecWait DoScareAway 
	      Return
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003A0004 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003A0004 
	      ExecWait DoBlowAway 
	      Return
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_8021F1CC
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     SetGoalToTarget 	( .Actor:Self )
	   Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Add  *Var[0]  0000001B 
	   Set  *Var[1]  00000000 
	   Sub  *Var[2]  00000006 
	   Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Wait     0000000F 
	Else
	   Call     SetAnimation 	( .Actor:Self 00000001 003A0002 )
	   Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	   Call     SetGoalToTarget 	( .Actor:Self )
	   Call     GetStatusFlags ( .Actor:Self *Var[0] )
	   If  *Var[0]  !&  00080000 
	      Call     AddToGoalPos 	( .Actor:Self 0000001B 00000000 FFFFFFFA )
	   Else
	      Call     AddToGoalPos 	( .Actor:Self 0000000A 00000000 FFFFFFFA )
	   EndIf
	   Call     RunToGoal   	( .Actor:Self 00000000 .False )
	   Call     SetAnimation 	( .Actor:Self 00000001 003A0001 )
	   Wait     0000000A 
	EndIf
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     PlaySoundAtActor 	( .Actor:Self 000020C5 )
	      Call     SetAnimation 	( .Actor:Self 00000001 003A0008 )
	      Wait     0000000A 
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	         Wait     00000014 
	      EndIf
	      Call     8027D7F0 ( )
	      Call     UseCamPreset 	( 00000002 )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003A0002 
	      ExecWait DoReturnHome 
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetAnimation 	( .Actor:Self 00000001 003A0009 )
	Wait     0000000F 
	Call     PlaySoundAtActor 	( .Actor:Self 000020C5 )
	Call     SetAnimation 	( .Actor:Self 00000001 003A000A )
	Wait     00000002 
	Wait     00000002 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Thread
	         Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[1.5] )
	      EndThread
	      Call     UseCamPreset 	( 00000002 )
	      Wait     00000013 
	      Call     8027D7F0 ( )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003A0002 
	      ExecWait DoReturnHome 
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:DefenseTable $DefenseTable_8021F720
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021F72C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      95`
.Status:Poison     90`
.Status:Frozen    100`
.Status:Dizzy      90`
.Status:Fear        0`
.Status:Static     70`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021F7D8
00800000 01000000 001400FF $IdleAnimations_8021F824 $DefenseTable_8021F720 00000000 00000000 00F60000 00000000 

#new:Actor $Fuzzy
% stats
[Index]         Ab 
[Level]         6`b 
[MaxHP]         3`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021F72C 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021F7D8 
[Script]      $Script_Init_8021F870 
% move effectiveness
[Escape]       50`b 
[Item]         95`b 
[AirLift]      95`b 
[Hurricane]    95`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         33`b  28`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_8021F824
.Status:Normal    002B0001
.Status:Stone     002B0000
.Status:Sleep     002B000E
.Status:Poison    002B0001
.Status:Stop      002B0000
.Status:Static    002B0001
.Status:Paralyze  002B0000
.Status:Dizzy     002B000F
.Status:Fear      002B000F
.Status:End

#new:Script $Script_Init_8021F870
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021FF30 )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8021F8BC )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021F8CC )
	Return
	End

#new:Script $Script_Idle_8021F8BC
	Return
	End

#new:Script $Script_HandleEvent_8021F8CC
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      Call     GetLastElement ( *Var[0] )
	      If  *Var[0]  &  00000020 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  002B0013 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  002B0008 
	      EndIf
	      ExecWait DoNormalHit 
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0010 
	      SetConst  *Var[2]  002B0012 
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0010 
	      SetConst  *Var[2]  002B0012 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0012 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0008 
	      ExecWait 8029B998 
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0008 
	      ExecWait 8029B998 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0008 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:ShockHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0013 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0013 
	      ExecWait 8029BD70 
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0003 
	      ExecWait 8029C0A4 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	   Case  ==  .Event:ShockDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0013 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0008 
	      ExecWait DoDeath 
	      Return
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	   CaseOR  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0001 
	      ExecWait DoImmune 
	   EndCaseGroup
	   Case  ==  .Event:Death
	      Call     GetLastElement ( *Var[0] )
	      If  *Var[0]  &  00000020 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  002B0013 
	         ExecWait DoNormalHit 
	         Wait     0000000A 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  002B0013 
	         ExecWait DoDeath 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  002B0008 
	         ExecWait DoNormalHit 
	         Wait     0000000A 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  002B0008 
	         ExecWait DoDeath 
	      EndIf
	      Return
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0001 
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0003 
	      SetConst  *Var[2]  002B0009 
	      ExecWait DoScareAway 
	      Return
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0003 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0003 
	      ExecWait DoBlowAway 
	      Return
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_8021FF30
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     SetGoalToTarget 	( .Actor:Self )
	   Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Add  *Var[0]  00000032 
	   Set  *Var[1]  00000000 
	   Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Goto     00000064 
	EndIf
	Call     SetAnimation 	( .Actor:Self 00000001 002B0003 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  00000032 
	Set  *Var[1]  00000000 
	Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	ExecWait 8029C12C 
	Call     SetAnimation 	( .Actor:Self 00000001 002B0001 )
	Label    00000064 
	Call     8026BA04 ( FFFFFF81 00000000 0000000A 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 002B0004 )
	Call     8026BA04 ( FFFFFF81 00000000 00000009 00000000 )
	Wait     00000001 
	Call     8026BA04 ( FFFFFF81 00000000 00000008 00000000 )
	Wait     00000005 
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 08000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000005 
	      Set  *Var[1]  00000000 
	      Sub  *Var[2]  00000005 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 002B0005 )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000B 00000000 00000001 00000000 )
	      Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 002B0009 )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000014 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  0000000F 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Wait     00000004 
	      Wait     00000005 
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Wait     00000005 
	      Call     UseCamPreset 	( 00000002 )
	      Call     8027D7F0 ( )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     SetAnimation 	( .Actor:Self 00000001 002B0003 )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	      ExecWait 8029C12C 
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	   Case  ==  00000007 
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  &  00002000 
	         Set  *Flag[00]  00000000 
	      Else
	         Set  *Flag[00]  00000001 
	      EndIf
	EndSwitch
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     AddToGoalPos 	( .Actor:Self FFFFFFFD FFFFFFF4 FFFFFFF1 )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
	Call     SetAnimation 	( .Actor:Self 00000001 002B0005 )
	Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	If  *Flag[00]  ==  00000001 
	   Call     DamageTarget 	( .Actor:Self *Var[0] 08000000 00000000 00000000 00000000 00000020 )
	   Return
	EndIf
	Wait     0000000A 
	Call     UseIdleAnimation 	( .Actor:Player .False )
	Call     SetAnimation 	( .Actor:Player 00000000 0003000C )
	Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
	Call     SetAnimation 	( .Actor:Self 00000001 002B0007 )
	Wait     00000015 
	Call     SetAnimation 	( .Actor:Self 00000001 002B0000 )
	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000014A )
	Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
	Call     8026BA04 ( FFFFFF81 FFFFFFFD FFFFFFFE 00000000 )
	Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	Wait     00000001 
	Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
	Wait     00000001 
	Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
	Wait     00000001 
	Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
	Wait     00000001 
	Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
	Wait     00000002 
	Call     SetActorScale 	( .Actor:Self *Fixed[0.60058594] *Fixed[1.6005859] *Fixed[1.0] )
	Wait     0000000A 
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 08000000 00000000 00000000 00000001 00000020 )
	Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 002B0001 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Call     GetLastDamage 	( .Actor:Player *Var[3] )
	      If  *Var[3]  !=  00000000 
	         Call     PlaySoundAtActor 	( .Actor:Self 0000206D )
	         Call     PlaySoundAtActor 	( .Actor:Self 00000214 )
	         Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Add  *Var[1]  0000000A 
	         Call     $Function_80218970 ( *Var[0] *Var[1] *Var[2] *Var[3] )
	         Thread
	            Wait     0000000F 
	            Call     PlaySoundAtActor 	( .Actor:Self 0000025C )
	            Call     $Function_80218A24 ( *Var[0] *Var[1] *Var[2] *Var[3] )
	         EndThread
	         Add  *Var[0]  00000014 
	         Add  *Var[1]  00000014 
	         Call     PlayEffect  	( {FX:Recover:HP} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	         Call     GetActorHP  	( .Actor:Self *Var[0] )
	         Add  *Var[0]  *Var[3] 
	         Call     SetEnemyHP  	( .Actor:Self *Var[0] )
	      EndIf
	      Thread
	         Call     SetActorScale 	( .Actor:Self *Fixed[1.6005859] *Fixed[0.60058594] *Fixed[1.0] )
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000A 00000000 )
	         Wait     00000001 
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000014A )
	         Wait     00000001 
	         Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000012C )
	         Wait     00000001 
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000010E )
	         Wait     00000001 
	         Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[0.7001953] *Fixed[1.0] )
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 000000F0 )
	         Wait     00000001 
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 000000D2 )
	         Wait     00000001 
	         Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 000000B4 )
	         Wait     00000002 
	         Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[0.7001953] *Fixed[1.0] )
	         Wait     00000002 
	         Call     SetActorScale 	( .Actor:Self *Fixed[1.2001953] *Fixed[0.5] *Fixed[1.0] )
	      EndThread
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[0]  00000028 
	      Set  *Var[1]  00000000 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	      Call     SetActorScale 	( .Actor:Self *Fixed[1.4003906] *Fixed[0.20019531] *Fixed[1.0] )
	      Wait     00000001 
	      Thread
	         Wait     00000001 
	         Call     SetActorScale 	( .Actor:Self *Fixed[1.2001953] *Fixed[0.5] *Fixed[1.0] )
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000096 )
	         Wait     00000001 
	         Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000078 )
	         Wait     00000001 
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000005A )
	         Wait     00000001 
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000003C )
	         Wait     00000001 
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000001E )
	         Wait     00000001 
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	      EndThread
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[0]  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	      Wait     00000005 
	      Call     8027D7F0 ( )
	      Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 002B0003 )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	      ExecWait 8029C12C 
	      Call     SetAnimation 	( .Actor:Self 00000001 002B0001 )
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:IdleAnimations $IdleAnimations_80220FD0
.Status:Normal    005A0002
.Status:Stone     005A0000
.Status:Sleep     005A0011
.Status:Poison    005A0002
.Status:Stop      005A0000
.Status:Static    005A0002
.Status:Paralyze  005A0000
.Status:Dizzy     005A0012
.Status:Fear      005A0012
.Status:End

#new:IdleAnimations $IdleAnimations_8022101C
.Status:Normal    005A000D
.Status:End

#new:DefenseTable $DefenseTable_80221028
.Element:Normal 00000001
.Element:End

#new:StatusTable $StatusTable_80221034
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     60`
.Status:Frozen      0`
.Status:Dizzy      70`
.Status:Fear        0`
.Status:Static     80`
.Status:Paralyze   70`
.Status:Shrink     70`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -2`
.Status:End

#new:SpriteTable $SpriteTable_802210E0
00800000 01000000 FD2300FF $IdleAnimations_80220FD0 $DefenseTable_80221028 00000000 00000000 FDF60000 00000000 
00120001 02000000 000000FF $IdleAnimations_8022101C $DefenseTable_80221028 00000000 00000000 00000000 00000000 
00120001 03000000 000000FF $IdleAnimations_8022101C $DefenseTable_80221028 00000000 00000000 00000000 00000000 
00120001 04000000 000000FF $IdleAnimations_8022101C $DefenseTable_80221028 00000000 00000000 00000000 00000000 
00120001 05000000 000000FF $IdleAnimations_8022101C $DefenseTable_80221028 00000000 00000000 00000000 00000000 
00120001 06000000 000000FF $IdleAnimations_8022101C $DefenseTable_80221028 00000000 00000000 00000000 00000000 

#new:Actor $HammerBros
% stats
[Index]        4Bb 
[Level]        27`b 
[MaxHP]        12`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80221034 
% ai
[SpriteCount]   6`s 
[SpriteTable] $SpriteTable_802210E0 
[Script]      $Script_Init_802211E0 
% move effectiveness
[Escape]       30`b 
[Item]         40`b 
[AirLift]      75`b 
[Hurricane]    60`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         28`b  38`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  35`b % dx dy

#new:Script $Script_Init_802211E0
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80222DCC )
	Call     BindIdle    	( .Actor:Self $Script_Idle_80221244 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802213A0 )
	Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
	Return
	End

#new:Script $Script_Idle_80221244
	Label    00000000 
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   Case  &  00001000 
	      Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
	      Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
	   Default
	      Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	      Switch  *Var[0] 
	         Case  ==  00000000 
	            Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFD 00000023 )
	            Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFD FFFFFFF6 )
	         Case  ==  00000001 
	            Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
	            Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
	      EndSwitch
	EndSwitch
	Wait     00000001 
	Goto     00000000 
	Return
	End

#new:Script $Script_HandleEvent_802213A0
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A000E 
	      ExecWait DoNormalHit 
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A000F 
	      SetConst  *Var[2]  005A0010 
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A000F 
	      SetConst  *Var[2]  005A0010 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A0010 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A000E 
	      ExecWait 8029B998 
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A000E 
	      ExecWait 8029B998 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A000E 
	      ExecWait DoDeath 
	      Return
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A0015 
	      ExecWait DoImmune 
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  !&  0035D000 
	         Call     SetAnimation 	( .Actor:Self 00000001 005A0017 )
	         Wait     0000000A 
	      EndIf
	   EndCaseGroup
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A000E 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A000E 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A0002 
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A0007 
	      SetConst  *Var[2]  005A000E 
	      ExecWait DoScareAway 
	      Return
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A0007 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  !&  0035D000 
	         If  *Var[0]  &  00080000 
	            Call     8026BA04 ( FFFFFF81 FFFFFFFE 00000001 00000000 )
	         Else
	            Call     8026BA04 ( FFFFFF81 FFFFFFFB 00000003 00000000 )
	         EndIf
	      EndIf
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A000E 
	      ExecWait DoBlowAway 
	      Return
	   Case  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A0002 
	      ExecWait DoImmune 
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_802218B4
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     UseCamPreset 	( 00000002 )
	   Call     MoveCamOver 	( 00000001 )
	EndIf
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   ChildThread
	      Set  *Var[0]  00000000 
	      Label    00000000 
	      Add  *Var[0]  00000014 
	      Mod  *Var[0]  00000168 
	      Call     SetSpriteRotation 	( .Actor:Self 00000002 00000000 00000000 *Var[0] )
	      Wait     00000001 
	      Goto     00000000 
	   EndChildThread
	   Call     SetSpritePos 	( .Actor:Self 00000002 00000000 00000032 00000000 )
	   Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
	   Call     SetAnimation 	( .Actor:Self 00000001 005A000C )
	   Goto     00000064 
	EndIf
	ChildThread
	   Set  *Var[0]  00000000 
	   Label    00000000 
	   Add  *Var[0]  00000014 
	   Mod  *Var[0]  00000168 
	   Call     SetSpriteRotation 	( .Actor:Self 00000002 00000000 00000000 *Var[0] )
	   Wait     00000001 
	   Goto     00000000 
	EndChildThread
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub  *Var[0]  00000017 
	Add  *Var[1]  00000017 
	Sub  *Var[2]  00000002 
	Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
	Call     SetAnimation 	( .Actor:Self 00000001 005A000C )
	Wait     00000008 
	Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
	Label    00000064 
	Thread
	   Wait     0000000F 
	   Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
	EndThread
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  &  00080000 
	   Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	Else
	   Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	EndIf
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     8026FA00 ( FFFFFF81 00000002 00000002 00000000 00000000 )
	      Call     PlaySoundAtSprite 	( .Actor:Self 00000002 000002E9 )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000014 
	      Set  *Var[1]  0000000A 
	      Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[1.3007812] )
	      Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000F .True )
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Sub  *Var[0]  00000028 
	      Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000F .True )
	      Sub  *Var[0]  0000001E 
	      Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000A .True )
	      Sub  *Var[0]  00000014 
	      Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000005 .True )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
	      Wait     0000000F 
	      Call     8027D7F0 ( )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Wait     00000014 
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     8026FA00 ( FFFFFF81 00000002 00000002 00000000 00000000 )
	Call     PlaySoundAtSprite 	( .Actor:Self 00000002 000002E9 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[1.3007812] )
	Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000F .True )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80080332 00000005 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     GetSpriteOffset 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000032 
	      Set  *Var[1]  0000000A 
	      Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000014 .True )
	      Sub  *Var[0]  0000001E 
	      Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000A .True )
	      Sub  *Var[0]  00000014 
	      Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000005 .True )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
	      Wait     00000014 
	      Call     8027D7F0 ( )
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8022212C
	Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
	Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
	Call     SetAnimation 	( .Actor:Self 00000001 005A000C )
	Wait     00000004 
	Call     SetSpriteFlagBits 	( .Actor:Self *Var[0] 00000001 .False )
	Call     8026FA00 ( FFFFFF81 *Var[0] 00000002 00000000 00000000 )
	Call     PlaySoundAtSprite 	( .Actor:Self *Var[0] 000002E9 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[1] *Var[2] *Var[3] )
	Set  *Var[2]  0000000A 
	Call     RandInt     	( 0000003C *Var[4] )
	Set  *Var[5]  0000001E 
	Sub  *Var[5]  *Var[4] 
	Add  *Var[1]  *Var[5] 
	Call     SetSpriteJumpscale 	( .Actor:Self *Var[0] *Fixed[1.3007812] )
	Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000F .True )
	Sub  *Var[1]  00000032 
	Set  *Var[2]  0000000A 
	Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000014 .True )
	Sub  *Var[1]  0000001E 
	Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000A .True )
	Sub  *Var[1]  00000014 
	Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000005 .True )
	Call     SetSpriteFlagBits 	( .Actor:Self *Var[0] 00000001 .True )
	Return
	End

#new:Script $Script_80222378
	Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
	Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
	Call     SetAnimation 	( .Actor:Self 00000001 005A000C )
	Wait     00000004 
	Call     SetSpriteFlagBits 	( .Actor:Self *Var[0] 00000001 .False )
	Call     8026FA00 ( FFFFFF81 *Var[0] 00000002 00000000 00000000 )
	Call     PlaySoundAtSprite 	( .Actor:Self *Var[0] 000002E9 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[1] *Var[2] *Var[3] )
	Call     SetSpriteJumpscale 	( .Actor:Self *Var[0] *Fixed[1.3007812] )
	Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000F .True )
	Sub  *Var[1]  00000032 
	Set  *Var[2]  0000000A 
	Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000014 .True )
	Sub  *Var[1]  0000001E 
	Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000A .True )
	Sub  *Var[1]  00000014 
	Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000005 .True )
	Call     SetSpriteFlagBits 	( .Actor:Self *Var[0] 00000001 .True )
	Return
	End

#new:Script $Script_80222570
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Thread
	   Set  *Var[0]  00000000 
	   Loop     00000064 
	      Add  *Var[0]  00000014 
	      Mod  *Var[0]  00000168 
	      Call     SetSpriteRotation 	( .Actor:Self 00000002 00000000 00000000 *Var[0] )
	      Call     SetSpriteRotation 	( .Actor:Self 00000003 00000000 00000000 *Var[0] )
	      Call     SetSpriteRotation 	( .Actor:Self 00000004 00000000 00000000 *Var[0] )
	      Call     SetSpriteRotation 	( .Actor:Self 00000005 00000000 00000000 *Var[0] )
	      Call     SetSpriteRotation 	( .Actor:Self 00000006 00000000 00000000 *Var[0] )
	      Wait     00000001 
	   EndLoop
	EndThread
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub  *Var[0]  00000017 
	Add  *Var[1]  00000017 
	Sub  *Var[2]  00000002 
	Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
	Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
	Call     SetSpritePos 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
	Call     SetSpritePos 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
	Call     SetSpritePos 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  &  00080000 
	   Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	   Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	   Call     SetSpriteScale ( .Actor:Self 00000004 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	   Call     SetSpriteScale ( .Actor:Self 00000005 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	   Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	Else
	   Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	   Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	   Call     SetSpriteScale ( .Actor:Self 00000004 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	   Call     SetSpriteScale ( .Actor:Self 00000005 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	   Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	EndIf
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Set  *Var[0]  00000002 
	      Exec     $Script_8022212C 
	      Wait     00000005 
	      Set  *Var[0]  00000003 
	      Exec     $Script_8022212C 
	      Wait     00000005 
	      Set  *Var[0]  00000004 
	      Exec     $Script_8022212C 
	      Wait     00000005 
	      Set  *Var[0]  00000005 
	      Exec     $Script_8022212C 
	      Wait     00000005 
	      Set  *Var[0]  00000006 
	      Exec     $Script_8022212C 
	      Wait     00000005 
	      Wait     00000014 
	      Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Wait     0000000F 
	      Call     8027D7F0 ( )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Wait     00000014 
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Thread
	   Set  *Var[0]  00000002 
	   Exec     $Script_80222378 
	   Wait     00000005 
	   Set  *Var[0]  00000003 
	   Exec     $Script_80222378 
	   Wait     00000005 
	   Set  *Var[0]  00000004 
	   Exec     $Script_80222378 
	   Wait     00000005 
	   Set  *Var[0]  00000005 
	   Exec     $Script_80222378 
	   Wait     00000005 
	   Set  *Var[0]  00000006 
	   Exec     $Script_80222378 
	EndThread
	Wait     00000015 
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000010 )
	Wait     00000005 
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000040 )
	Wait     00000005 
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000040 )
	Wait     00000005 
	Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000040 )
	Wait     00000005 
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80080332 00000002 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Wait     00000014 
	      Call     8027D7F0 ( )
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_80222DCC
	Call     GetActorHP  	( .Actor:Self *Var[0] )
	Call     GetEnemyMaxHP 	( .Actor:Self *Var[1] )
	MulF  *Var[0]  *Fixed[100.0] 
	DivF  *Var[0]  *Var[1] 
	If  *Var[0]  >  00000022 
	   ExecWait $Script_802218B4 
	Else
	   ExecWait $Script_80222570 
	EndIf
	Return
	End

PADDING: 80222E5C to 80222E60 (0056223C to 00562240)
00000000 

#new:DefenseTable $DefenseTable_80222E60
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80222E6C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      90`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      90`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze  100`
.Status:Shrink     90`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_80222F18
00020000 01000000 001400FF $IdleAnimations_80223018 $DefenseTable_80222E60 00200010 00000000 00000000 00000000 
00800001 02000000 004800FF 00000000 $DefenseTable_80222E60 00200010 00000000 00F80000 00000000 
00020001 03000000 003600FF 00000000 $DefenseTable_80222E60 00200010 00000000 00F80000 00000000 
00020001 04000000 002400FF 00000000 $DefenseTable_80222E60 00200010 00000000 00F80000 00000000 
00020001 05000000 001000FF 00000000 $DefenseTable_80222E60 00200010 00000000 00F80000 00000000 
00120001 06000000 000000FF $IdleAnimations_80223108 $DefenseTable_80222E60 00200010 00000000 00000000 00000000 

#new:Actor $Pokey
% stats
[Index]        14b 
[Level]         9`b 
[MaxHP]         4`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80222E6C 
% ai
[SpriteCount]   6`s 
[SpriteTable] $SpriteTable_80222F18 
[Script]      $Script_Init_80223114 
% move effectiveness
[Escape]       70`b 
[Item]         70`b 
[AirLift]      90`b 
[Hurricane]    85`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  80`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -15`b  75`b % dx dy
[StatusIcon]   10`b  65`b % dx dy

#new:IdleAnimations $IdleAnimations_80223018
.Status:Normal    00310004
.Status:Stone     00310000
.Status:Sleep     00310025
.Status:Stop      00310000
.Status:Paralyze  00310000
.Status:Dizzy     00310021
.Status:Fear      00310021
.Status:End

#new:IdleAnimations $IdleAnimations_80223054
.Status:Normal    00310005
.Status:Stone     00310001
.Status:Sleep     00310026
.Status:Stop      00310001
.Status:Paralyze  00310001
.Status:Dizzy     00310022
.Status:Fear      00310022
.Status:End

#new:IdleAnimations $IdleAnimations_80223090
.Status:Normal    00310006
.Status:Stone     00310002
.Status:Sleep     00310027
.Status:Stop      00310002
.Status:Paralyze  00310002
.Status:Dizzy     00310023
.Status:Fear      00310023
.Status:End

#new:IdleAnimations $IdleAnimations_802230CC
.Status:Normal    00310007
.Status:Stone     00310003
.Status:Sleep     00310028
.Status:Stop      00310003
.Status:Paralyze  00310003
.Status:Dizzy     00310024
.Status:Fear      00310024
.Status:End

#new:IdleAnimations $IdleAnimations_80223108
.Status:Normal    00310016
.Status:End

#new:Script $Script_Init_80223114
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80224BF8 )
	Call     BindIdle    	( .Actor:Self $Script_Idle_80223290 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802232A0 )
	Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	Call     SetActorVar 	( .Actor:Self 00000009 *Var[0] )
	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000001 00310004 )
	Call     SetActorVar 	( .Actor:Self 00000002 00310008 )
	Call     SetActorVar 	( .Actor:Self 00000003 0031000C )
	Call     SetActorVar 	( .Actor:Self 00000004 00310010 )
	Call     SetActorVar 	( .Actor:Self 00000005 00310011 )
	Call     SetActorVar 	( .Actor:Self 00000006 00310018 )
	Call     SetActorVar 	( .Actor:Self 00000007 00310019 )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_Idle_80223290
	Return
	End

#new:Script $Script_HandleEvent_802232A0
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   Case  ==  .Event:HitCombo
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	      ExecWait DoNormalHit 
	   Case  ==  .Event:Hit
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  &  00080000 
	         SetConst  *Var[0]  00000001 
	         Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	         ExecWait DoNormalHit 
	      Else
	         Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
	         If  *Var[A]  ==  00000003 
	            SetConst  *Var[0]  00000001 
	            Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	            ExecWait DoNormalHit 
	         Else
	            Call     80269E80 ( *Var[0] )
	            Switch  *Var[0] 
	               CaseOR  ==  00000006 
	               CaseOR  ==  00000007 
	               CaseOR  ==  00000009 
	                  ExecWait $Script_8022788C 
	               EndCaseGroup
	               Default
	                  SetConst  *Var[0]  00000001 
	                  Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	                  ExecWait DoNormalHit 
	            EndSwitch
	         EndIf
	      EndIf
	   Case  ==  .Event:Death
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  &  00080000 
	         SetConst  *Var[0]  00000001 
	         Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	         ExecWait DoNormalHit 
	         Wait     0000000A 
	      Else
	         Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
	         If  *Var[A]  ==  00000003 
	            SetConst  *Var[0]  00000001 
	            Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	            ExecWait DoNormalHit 
	            Wait     0000000A 
	         Else
	            Call     80269E80 ( *Var[0] )
	            Switch  *Var[0] 
	               CaseOR  ==  00000006 
	               CaseOR  ==  00000007 
	               CaseOR  ==  00000009 
	                  ExecWait $Script_8022788C 
	               EndCaseGroup
	               Default
	                  SetConst  *Var[0]  00000001 
	                  Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	                  ExecWait DoNormalHit 
	                  Wait     0000000A 
	            EndSwitch
	         EndIf
	      EndIf
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:BurnHit
	      Call     GetActorVar 	( .Actor:Self 00000006 *Var[1] )
	      Call     GetActorVar 	( .Actor:Self 00000007 *Var[2] )
	      SetConst  *Var[0]  00000001 
	      Call     GetStatusFlags ( .Actor:Self *Var[3] )
	      If  *Var[3]  &  00080000 
	         ExecWait DoBurnHit 
	      Else
	         Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
	         If  *Var[A]  ==  00000003 
	            ExecWait DoBurnHit 
	         Else
	            Call     80269E80 ( *Var[A] )
	            Switch  *Var[A] 
	               CaseOR  ==  00000006 
	               CaseOR  ==  00000007 
	               CaseOR  ==  00000009 
	                  ExecWait $Script_8022788C 
	               EndCaseGroup
	               Default
	                  ExecWait DoBurnHit 
	            EndSwitch
	         EndIf
	      EndIf
	   CaseOR  ==  .Event:BurnDeath
	      Call     GetActorVar 	( .Actor:Self 00000006 *Var[1] )
	      Call     GetActorVar 	( .Actor:Self 00000007 *Var[2] )
	      SetConst  *Var[0]  00000001 
	      Call     GetStatusFlags ( .Actor:Self *Var[3] )
	      If  *Var[3]  &  00080000 
	         ExecWait DoBurnHit 
	      Else
	         Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
	         If  *Var[A]  ==  00000003 
	            ExecWait DoBurnHit 
	         Else
	            Call     80269E80 ( *Var[A] )
	            Switch  *Var[A] 
	               CaseOR  ==  00000006 
	               CaseOR  ==  00000007 
	               CaseOR  ==  00000009 
	                  ExecWait $Script_8022788C 
	               EndCaseGroup
	               Default
	                  ExecWait DoBurnHit 
	            EndSwitch
	         EndIf
	      EndIf
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000007 *Var[1] )
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      ExecWait $Script_80226B30 
	   Case  ==  .Event:MultibounceDeath
	      ExecWait $Script_80226B30 
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	      ExecWait DoDeath 
	      Return
	   Case  ==  00000011
	      Call     GetStatusFlags ( .Actor:Self *Var[3] )
	      If  *Var[3]  &  00080000 
	         SetConst  *Var[0]  00000001 
	         Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	         ExecWait DoNormalHit 
	      Else
	         ExecWait $Script_8022788C 
	      EndIf
	   Case  ==  00000025
	      Call     GetStatusFlags ( .Actor:Self *Var[3] )
	      If  *Var[3]  &  00080000 
	         SetConst  *Var[0]  00000001 
	         Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	         ExecWait DoNormalHit 
	      Else
	         ExecWait $Script_8022788C 
	      EndIf
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  FFFFFFFF 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:ShockHit
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	      ExecWait DoShockHit 
	      Call     GetActorVar 	( .Actor:Self 00000002 *Var[1] )
	      Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
	      ExecWait 8029C12C 
	   Case  ==  .Event:ShockDeath
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	      ExecWait DoDeath 
	      Return
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
	      ExecWait DoImmune 
	   EndCaseGroup
	   Case  ==  .Event:SpikeTaunt
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         Case  ==  00000000 
	            Set  *Var[0]  00000000 
	            Set  *Var[1]  0000004D 
	            SetConst  *Var[2]  00310021 
	         Case  ==  00000001 
	            Set  *Var[0]  00000000 
	            Set  *Var[1]  0000003B 
	            SetConst  *Var[2]  00310022 
	         Case  ==  00000002 
	            Set  *Var[0]  00000000 
	            Set  *Var[1]  00000029 
	            SetConst  *Var[2]  00310023 
	         Case  ==  00000003 
	            Set  *Var[0]  00000000 
	            Set  *Var[1]  00000017 
	            SetConst  *Var[2]  00310024 
	      EndSwitch
	      Call     GetStatusFlags ( .Actor:Self *Var[3] )
	      If  *Var[3]  !&  00001000 
	         Call     SetAnimation 	( .Actor:Self 00000001 *Var[2] )
	      EndIf
	      Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	      Call     GetStatusFlags ( .Actor:Self *Var[6] )
	      If  *Var[6]  &  00080000 
	         MulF  *Var[0]  *Fixed[0.40039062] 
	         MulF  *Var[1]  *Fixed[0.40039062] 
	      EndIf
	      AddF  *Var[3]  *Var[0] 
	      AddF  *Var[4]  *Var[1] 
	      Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[3] *Var[4] *Var[5] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	      Wait     0000001E 
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      ExecWait $Script_80227D64 
	      Return
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_80223F98
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  !&  00080000 
	         Call     AddToGoalPos 	( .Actor:Self 0000003C 00000000 00000000 )
	      Else
	         Call     AddToGoalPos 	( .Actor:Self 00000018 00000000 00000000 )
	      EndIf
	      Call     SetAnimation 	( .Actor:Self 00000001 00310008 )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Call     SetAnimation 	( .Actor:Self 00000001 00310004 )
	   Case  ==  00000001 
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  !&  00080000 
	         Call     AddToGoalPos 	( .Actor:Self 00000028 00000000 00000000 )
	      Else
	         Call     AddToGoalPos 	( .Actor:Self 00000010 00000000 00000000 )
	      EndIf
	      Call     SetAnimation 	( .Actor:Self 00000001 00310009 )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Call     SetAnimation 	( .Actor:Self 00000001 00310005 )
	   Case  ==  00000002 
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  !&  00080000 
	         Call     AddToGoalPos 	( .Actor:Self 00000014 00000000 00000000 )
	      Else
	         Call     AddToGoalPos 	( .Actor:Self 00000008 00000000 00000000 )
	      EndIf
	      Call     SetAnimation 	( .Actor:Self 00000001 0031000A )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Call     SetAnimation 	( .Actor:Self 00000001 00310006 )
	EndSwitch
	Call     PlaySoundAtActor 	( .Actor:Self 00000342 )
	Call     MakeLerp    	( 00000000 FFFFFFD8 00000014 0000000A )
	Label    00000000 
	Call     UpdateLerp  	( )
	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	Wait     00000001 
	If  *Var[1]  ==  00000001 
	   Goto     00000000 
	EndIf
	ChildThread
	   Wait     00000003 
	   Call     PlaySoundAtActor 	( .Actor:Self 000002ED )
	EndChildThread
	Call     MakeLerp    	( FFFFFFD8 0000005A 00000005 00000001 )
	Label    00000003 
	Call     UpdateLerp  	( )
	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	Wait     00000001 
	If  *Var[1]  ==  00000001 
	   Goto     00000003 
	EndIf
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000000 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     MakeLerp    	( 0000005A 00000000 00000005 00000000 )
	      Label    00000004 
	      Call     UpdateLerp  	( )
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	      Wait     00000001 
	      If  *Var[1]  ==  00000001 
	         Goto     00000004 
	      EndIf
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Call     8027D7F0 ( )
	      Call     UseCamPreset 	( 00000002 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         Case  ==  00000000 
	            Call     SetAnimation 	( .Actor:Self 00000001 00310008 )
	            Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	            Call     SetGoalToHome 	( .Actor:Self )
	            Call     RunToGoal   	( .Actor:Self 00000000 .False )
	            Call     SetAnimation 	( .Actor:Self 00000001 00310004 )
	         Case  ==  00000001 
	            Call     SetAnimation 	( .Actor:Self 00000001 00310009 )
	            Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	            Call     SetGoalToHome 	( .Actor:Self )
	            Call     RunToGoal   	( .Actor:Self 00000000 .False )
	            Call     SetAnimation 	( .Actor:Self 00000001 00310005 )
	         Case  ==  00000002 
	            Call     SetAnimation 	( .Actor:Self 00000001 0031000A )
	            Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	            Call     SetGoalToHome 	( .Actor:Self )
	            Call     RunToGoal   	( .Actor:Self 00000000 .False )
	            Call     SetAnimation 	( .Actor:Self 00000001 00310006 )
	      EndSwitch
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	EndSwitch
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      Set  *Var[1]  00000002 
	   Case  ==  00000001 
	      Set  *Var[1]  00000002 
	   Default
	      Set  *Var[1]  00000002 
	EndSwitch
	Call     SetGoalToTarget 	( .Actor:Self )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 80020300 *Var[1] 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Call     MakeLerp    	( 0000005A 00000000 0000000A 00000000 )
	      Label    00000005 
	      Call     UpdateLerp  	( )
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	      Wait     00000001 
	      If  *Var[1]  ==  00000001 
	         Goto     00000005 
	      EndIf
	      Call     8027D7F0 ( )
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         Case  ==  00000000 
	            Call     SetAnimation 	( .Actor:Self 00000001 00310008 )
	            Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	            Call     SetGoalToHome 	( .Actor:Self )
	            Call     RunToGoal   	( .Actor:Self 00000000 .False )
	            Call     SetAnimation 	( .Actor:Self 00000001 00310004 )
	         Case  ==  00000001 
	            Call     SetAnimation 	( .Actor:Self 00000001 00310009 )
	            Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	            Call     SetGoalToHome 	( .Actor:Self )
	            Call     RunToGoal   	( .Actor:Self 00000000 .False )
	            Call     SetAnimation 	( .Actor:Self 00000001 00310005 )
	         Case  ==  00000002 
	            Call     SetAnimation 	( .Actor:Self 00000001 0031000A )
	            Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	            Call     SetGoalToHome 	( .Actor:Self )
	            Call     RunToGoal   	( .Actor:Self 00000000 .False )
	            Call     SetAnimation 	( .Actor:Self 00000001 00310006 )
	      EndSwitch
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_80224A94
	Set  *Var[9]  00000000 
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetActorType 	( *Var[0] *Var[2] )
	Switch  *Var[2] 
	   Case  ==  00000014 
	      Call     GetStatusFlags ( *Var[0] *Var[3] )
	      If  *Var[3]  !&  003DD000 
	         Call     GetActorVar 	( .Actor:Self 00000000 *Var[3] )
	         If  *Var[3]  ==  00000000 
	            Call     GetActorVar 	( *Var[0] 0000000A *Var[3] )
	            If  *Var[3]  !=  00000002 
	               Add  *Var[9]  00000001 
	            EndIf
	         EndIf
	      EndIf
	EndSwitch
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	Return
	End

#new:Script $Script_TakeTurn_80224BF8
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
	If  *Var[A]  ==  00000003 
	   ExecWait $Script_80226170 
	   Return
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
	If  *Var[0]  ==  00000000 
	   Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
	   If  *Var[0]  ==  00000002 
	      Goto     0000007B 
	   EndIf
	   ExecWait $Script_80225724 
	   If  *Var[E]  ==  FFFFFFFF 
	      Goto     0000007B 
	   EndIf
	   ExecWait $Script_80224A94 
	   Switch  *Var[9] 
	      Case  ==  00000001 
	         Call     RandInt     	( 000003E8 *Var[0] )
	         If  *Var[0]  <  00000190 
	            ExecWait $Script_80225A0C 
	            Return
	         EndIf
	      Case  ==  00000002 
	         Call     RandInt     	( 000003E8 *Var[0] )
	         If  *Var[0]  <  000000C8 
	            ExecWait $Script_80225A0C 
	            Return
	         EndIf
	      Case  ==  00000003 
	         Call     RandInt     	( 000003E8 *Var[0] )
	         If  *Var[0]  <  00000064 
	            ExecWait $Script_80225A0C 
	            Return
	         EndIf
	   EndSwitch
	EndIf
	Label    0000007B 
	Call     RandInt     	( 000003E8 *Var[0] )
	If  *Var[0]  <  000001F4 
	   ExecWait $Script_80223F98 
	   Return
	EndIf
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     UseCamPreset 	( 00000002 )
	   Call     MoveCamOver 	( 00000001 )
	EndIf
	Call     8026FA00 ( FFFFFF81 00000006 00000002 00000000 00000000 )
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00080000 
	   Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	Else
	   Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[1.0] )
	EndIf
	ChildThread
	   Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .False )
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     SetSpritePos 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
	   Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[2.2001953] )
	   Call     SetAnimation 	( .Actor:Self 00000006 00310016 )
	   Call     GetStatusFlags ( .Actor:Self *Var[5] )
	   Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
	   Switch  *Var[A] 
	      Case  ==  00000000 
	         If  *Var[5]  !&  00080000 
	            Add  *Var[1]  00000026 
	         Else
	            Add  *Var[1]  0000000F 
	            Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[1.2001953] )
	         EndIf
	         Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 0000000F .True )
	      Case  ==  00000001 
	         If  *Var[5]  !&  00080000 
	            Add  *Var[1]  00000014 
	         Else
	            Add  *Var[1]  00000008 
	            Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[1.2001953] )
	         EndIf
	         Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 0000000F .True )
	      Case  ==  00000002 
	         If  *Var[5]  !&  00080000 
	            Add  *Var[1]  00000008 
	         Else
	            Add  *Var[1]  00000003 
	            Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[1.2001953] )
	         EndIf
	         Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 0000000F .True )
	      Case  ==  00000003 
	   EndSwitch
	EndChildThread
	Call     PlaySoundAtActor 	( .Actor:Self 00000342 )
	Call     GetActorVar 	( .Actor:Self 00000004 *Var[1] )
	Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
	Wait     0000000C 
	Call     GetActorVar 	( .Actor:Self 00000005 *Var[1] )
	Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
	Wait     00000001 
	Call     PlaySoundAtActor 	( .Actor:Self 000002CE )
	Wait     00000003 
	ExecWait $Script_80226C5C 
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 10000000 00000000 00000002 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      If  *Var[0]  ==  00000005 
	         ChildThread
	            Wait     00000005 
	            Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	         EndChildThread
	      EndIf
	      Call     SetTargetActor ( .Actor:Self .Actor:Player )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000050 
	      Sub  *Var[1]  00000005 
	      Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[20.0] )
	      Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[0.10058594] )
	      Call     SetAnimation 	( .Actor:Self 00000006 00310016 )
	      Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 .True )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
	      Call     GetActorVar 	( .Actor:Self 00000002 *Var[1] )
	      Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[20.0] )
	Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[0.10058594] )
	Call     SetAnimation 	( .Actor:Self 00000006 00310016 )
	Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 .True )
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80020300 00000002 00000020 )
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[1] )
	Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000037 
	      Set  *Var[1]  00000000 
	      Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[6.0] )
	      Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[0.10058594] )
	      Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 00000019 .Easing:Linear )
	      Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[4.0] )
	      Sub  *Var[0]  00000018 
	      Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 00000015 .Easing:Linear )
	      Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[3.0] )
	      Sub  *Var[0]  00000014 
	      Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 00000014 .Easing:Linear )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_80225724
	Set  *Var[E]  FFFFFFFF 
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  &  00080000 
	   Return
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	If  *Var[0]  !=  00000000 
	   Return
	EndIf
	Set  *Flag[01]  00000000 
	Set  *Flag[02]  00000000 
	Set  *Flag[03]  00000000 
	Set  *Flag[04]  00000000 
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[5] )
	Call     GetIndexFromHome 	( *Var[0] *Var[5] )
	Mod  *Var[5]  00000004 
	Switch  *Var[5] 
	   Case  ==  00000000 
	      Set  *Flag[01]  00000001 
	   Case  ==  00000001 
	      Set  *Flag[02]  00000001 
	   Case  ==  00000002 
	      Set  *Flag[03]  00000001 
	   Case  ==  00000003 
	      Set  *Flag[04]  00000001 
	EndSwitch
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	Call     GetIndexFromHome 	( .Actor:Self *Var[1] )
	Switch  *Var[1] 
	   Case  ==  00000000 
	      Return
	   Case  ==  00000001 
	      If  *Flag[01]  ==  00000000 
	         Set  *Var[E]  00000000 
	      EndIf
	   Case  ==  00000002 
	      If  *Flag[02]  ==  00000000 
	         Set  *Var[E]  00000001 
	      EndIf
	   Case  ==  00000003 
	      If  *Flag[03]  ==  00000000 
	         Set  *Var[E]  00000002 
	      EndIf
	EndSwitch
	Return
	End

#new:Vector3D $Vector3D_802259E4
400` -100` 0`

#new:SpecialFormation $SpecialFormation_802259F0
$Pokey $Vector3D_802259E4 00000064 00000000 00000000 00000000 00000000 

#new:Script $Script_80225A0C
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000000E )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 0000001E )
	Call     SetAnimation 	( .Actor:Self 00000001 00310004 )
	Call     MakeLerp    	( 00000000 FFFFFFEC 00000014 0000000A )
	Label    00000000 
	Call     UpdateLerp  	( )
	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	Wait     00000001 
	If  *Var[1]  ==  00000001 
	   Goto     00000000 
	EndIf
	ChildThread
	   Wait     00000008 
	   Call     PlaySoundAtActor 	( .Actor:Self 00000344 )
	EndChildThread
	Call     MakeLerp    	( FFFFFFEC 0000001E 00000014 0000000A )
	Label    00000001 
	Call     UpdateLerp  	( )
	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	Wait     00000001 
	If  *Var[1]  ==  00000001 
	   Goto     00000001 
	EndIf
	ChildThread
	   Wait     00000006 
	   Call     PlaySoundAtActor 	( .Actor:Self 00000345 )
	EndChildThread
	Call     MakeLerp    	( 0000001E FFFFFFD8 00000014 0000000A )
	Label    00000002 
	Call     UpdateLerp  	( )
	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	Wait     00000001 
	If  *Var[1]  ==  00000001 
	   Goto     00000002 
	EndIf
	ChildThread
	   Wait     00000004 
	   Call     PlaySoundAtActor 	( .Actor:Self 000002EE )
	EndChildThread
	Call     MakeLerp    	( FFFFFFD8 0000005A 0000000A 0000000A )
	Label    00000003 
	Call     UpdateLerp  	( )
	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	Wait     00000001 
	If  *Var[1]  ==  00000001 
	   Goto     00000003 
	EndIf
	Wait     00000014 
	Call     PlaySoundAtActor 	( .Actor:Self 00000346 )
	Call     80254218 ( 00000009 )
	Thread
	   Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[1.0] )
	EndThread
	Call     SummonEnemy 	( $SpecialFormation_802259F0 00000000 )
	Set  *Var[B]  *Var[0] 
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub  *Var[0]  00000028 
	Sub  *Var[1]  00000050 
	Call     SetActorPos 	( *Var[B] *Var[0] *Var[1] *Var[2] )
	ChildThread
	   Call     PlayEffect  	( {FX:ShockWave:Sand} *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Call     UseIdleAnimation 	( *Var[B] .False )
	   Call     SetAnimation 	( *Var[B] 00000001 0031000C )
	   Call     GetActorPos 	( *Var[B] *Var[0] *Var[1] *Var[2] )
	   Call     SetActorJumpscale 	( *Var[B] *Fixed[1.2001953] )
	   Call     SetGoalToPos 	( *Var[B] *Var[0] 00000000 *Var[2] )
	   Call     JumpToGoal  	( *Var[B] 00000014 00000000 00000001 00000000 )
	   Wait     00000014 
	   Call     GetActorPos 	( *Var[B] *Var[0] *Var[1] *Var[2] )
	   Call     SetAnimation 	( *Var[B] 00000001 00310004 )
	   Call     SetHomePos  	( *Var[B] *Var[0] *Var[1] *Var[2] )
	   Call     HPBarToHome 	( *Var[B] )
	   Call     UseIdleAnimation 	( *Var[B] .True )
	EndChildThread
	Call     GetActorVar 	( .Actor:Self 0000000A *Var[1] )
	Switch  *Var[1] 
	   Case  ==  00000000 
	      Call     SetActorVar 	( *Var[B] 0000000A 00000001 )
	   Case  ==  00000001 
	      Call     SetActorVar 	( *Var[B] 0000000A 00000002 )
	EndSwitch
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 00000014 )
	Set  *Var[A]  *Var[0] 
	Call     MakeLerp    	( 0000005A FFFFFFE2 00000007 00000004 )
	Label    00000004 
	Call     UpdateLerp  	( )
	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	Wait     00000001 
	If  *Var[1]  ==  00000001 
	   Goto     00000004 
	EndIf
	Wait     00000014 
	Call     MakeLerp    	( FFFFFFE2 00000000 0000000A 0000000A )
	Label    00000005 
	Call     UpdateLerp  	( )
	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	Wait     00000001 
	If  *Var[1]  ==  00000001 
	   Goto     00000005 
	EndIf
	Wait     00000014 
	Call     SetAnimation 	( .Actor:Self 00000001 00310004 )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_80226170
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     8026F740 ( FFFFFF81 00000000 000002EC 000002EC )
	Call     8026F740 ( FFFFFF81 00000002 000002EC 00000000 )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  00000032 
	Set  *Var[1]  00000000 
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	Call     SetAnimation 	( .Actor:Self 00000001 0031000B )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
	ExecWait 8029C12C 
	Call     SetAnimation 	( .Actor:Self 00000001 00310007 )
	Wait     00000004 
	Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFF 00000000 )
	Wait     00000001 
	Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFE 00000000 )
	Wait     00000004 
	Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 0031000B )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000002 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000005 
	      Set  *Var[1]  0000000A 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.1005859] )
	      ChildThread
	         Wait     00000002 
	         Set  *Var[0]  00000000 
	         Loop     00000005 
	            Add  *Var[0]  0000001E 
	            Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	            Wait     00000001 
	         EndLoop
	      EndChildThread
	      Call     JumpToGoal  	( .Actor:Self 00000016 00000000 00000001 00000000 )
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000A 00000000 )
	      ChildThread
	         Wait     00000002 
	         Set  *Var[0]  000000B4 
	         Loop     00000006 
	            Add  *Var[0]  0000001E 
	            If  *Var[0]  ==  00000168 
	               Set  *Var[0]  00000000 
	            EndIf
	            Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	            Wait     00000001 
	         EndLoop
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	      EndChildThread
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  0000001E 
	      Set  *Var[1]  00000000 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
	      Wait     0000000F 
	      Call     UseCamPreset 	( 00000002 )
	      Call     8027D7F0 ( )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 0031000B )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
	      ExecWait 8029C12C 
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00310007 )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.1005859] )
	ChildThread
	   Wait     00000002 
	   Set  *Var[0]  00000000 
	   Loop     00000005 
	      Add  *Var[0]  0000001E 
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	      Wait     00000001 
	   EndLoop
	EndChildThread
	Call     JumpToGoal  	( .Actor:Self 00000012 00000000 00000001 00000000 )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 80020300 00000002 00000020 )
	Call     SetAnimation 	( .Actor:Self 00000001 00310007 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[0]  00000028 
	      Set  *Var[1]  00000000 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	      Add  *Var[0]  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	      Add  *Var[0]  00000014 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
	      Sub  *Var[0]  0000000A 
	      Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00310007 )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 0031000B )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
	      ExecWait 8029C12C 
	      Call     SetAnimation 	( .Actor:Self 00000001 00310007 )
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_80226B30
	Call     GetStatusFlags ( .Actor:Self *Var[A] )
	If  *Var[A]  &  00080000 
	   SetConst  *Var[0]  00000001 
	   Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	   ExecWait 8029B998 
	   Return
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
	Switch  *Var[A] 
	   Case  ==  00000000 
	      ExecWait $Script_80227440 
	   Case  ==  00000001 
	      ExecWait $Script_80227440 
	   Case  ==  00000002 
	      ExecWait $Script_80227440 
	   Case  ==  00000003 
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	      ExecWait 8029B998 
	EndSwitch
	Return
	End

#new:Script $Script_80226C5C
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
	Switch  *Var[A] 
	   Case  ==  00000000 
	      Call     SetActorVar 	( .Actor:Self 00000001 00310005 )
	      Call     SetActorVar 	( .Actor:Self 00000002 00310009 )
	      Call     SetActorVar 	( .Actor:Self 00000003 0031000D )
	      Call     SetActorVar 	( .Actor:Self 00000004 00310012 )
	      Call     SetActorVar 	( .Actor:Self 00000005 00310013 )
	      Call     SetActorVar 	( .Actor:Self 00000006 0031001A )
	      Call     SetActorVar 	( .Actor:Self 00000007 0031001B )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80223054 )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .False )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020000 .True )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00020000 .False )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00800000 .True )
	      Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
	      Call     8027D810 ( FFFFFF81 0000003E *Unknown[0] )
	      Call     8027D970 ( FFFFFF81 00000001 0000003E *Unknown[0] )
	      Call     $Function_80218AE0 ( FFFFFFF1 00000037 0000000A 0000002D )
	   Case  ==  00000001 
	      Call     SetActorVar 	( .Actor:Self 00000001 00310006 )
	      Call     SetActorVar 	( .Actor:Self 00000002 0031000A )
	      Call     SetActorVar 	( .Actor:Self 00000003 0031000E )
	      Call     SetActorVar 	( .Actor:Self 00000004 00310014 )
	      Call     SetActorVar 	( .Actor:Self 00000005 00310015 )
	      Call     SetActorVar 	( .Actor:Self 00000006 0031001C )
	      Call     SetActorVar 	( .Actor:Self 00000007 0031001D )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80223090 )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00800000 .False )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00020000 .True )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00020000 .False )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00800000 .True )
	      Call     SetActorVar 	( .Actor:Self 00000000 00000002 )
	      Call     8027D810 ( FFFFFF81 0000002C *Unknown[0] )
	      Call     8027D970 ( FFFFFF81 00000001 0000002C *Unknown[0] )
	      Call     $Function_80218AE0 ( FFFFFFF1 00000023 0000000A 00000019 )
	   Case  ==  00000002 
	      Call     SetActorVar 	( .Actor:Self 00000001 00310007 )
	      Call     SetActorVar 	( .Actor:Self 00000002 0031000B )
	      Call     SetActorVar 	( .Actor:Self 00000003 0031000F )
	      Call     SetActorVar 	( .Actor:Self 00000006 0031001E )
	      Call     SetActorVar 	( .Actor:Self 00000007 0031001F )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802230CC )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00800000 .False )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00020000 .True )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000005 00020000 .False )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000005 00800000 .True )
	      Call     SetActorVar 	( .Actor:Self 00000000 00000003 )
	      Call     8027D810 ( FFFFFF81 0000001A *Unknown[0] )
	      Call     8027D970 ( FFFFFF81 00000001 0000001A *Unknown[0] )
	      Call     $Function_80218AE0 ( FFFFFFF1 0000000F 0000000A 00000005 )
	EndSwitch
	Return
	End

#new:Script $Script_80227154
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[1]  00000012 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Set  *Var[3]  *Var[1] 
	Wait     00000002 
	Sub  *Var[3]  00000001 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
	Wait     00000003 
	Sub  *Var[3]  00000002 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
	Wait     00000002 
	Sub  *Var[3]  00000003 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
	Wait     00000001 
	Sub  *Var[3]  00000005 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
	Wait     00000001 
	Sub  *Var[3]  00000007 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
	Wait     00000001 
	Add  *Var[3]  00000002 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
	Wait     00000001 
	Add  *Var[3]  00000003 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
	Wait     00000001 
	Add  *Var[3]  00000003 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
	Wait     00000001 
	Sub  *Var[3]  00000003 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
	Wait     00000001 
	Sub  *Var[3]  00000003 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
	Wait     00000001 
	Sub  *Var[3]  00000002 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
	Return
	End

#new:Script $Script_80227440
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetSpritePos 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .False )
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00080000 
	   Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	Else
	   Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[1.0] )
	EndIf
	ExecWait $Script_80226C5C 
	SetConst  *Var[0]  00000001 
	Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
	ChildThread
	   Wait     00000004 
	   ExecWait $Script_80227154 
	EndChildThread
	Call     CreateTargetList 	( 00018004 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Call     GetOwnerID  	( *Var[1] )
	Call     GetOwnerTarget ( *Var[0] *Var[9] )
	If  *Var[1]  !=  *Var[0] 
	   Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	   Goto     00000000 
	EndIf
	Label    00000001 
	Add  *Var[F]  00000001 
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  ==  FFFFFFFF 
	   Goto     0000000A 
	EndIf
	Call     GetOwnerTarget ( *Var[0] *Var[9] )
	Call     GetActorFlags 	( *Var[0] *Var[1] )
	If  *Var[1]  &  00004000 
	   Goto     00000001 
	EndIf
	Call     GetOwnerID  	( *Var[0] )
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Set  *Var[1]  00000000 
	Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[0.10058594] )
	Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[7.0] )
	Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 .True )
	ChildThread
	   Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
	EndChildThread
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     8027D1BC ( *Var[0] 00000001 00000011 )
	Goto     00000001 
	Label    0000000A 
	Call     UseCamPreset 	( 00000003 )
	Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[0.10058594] )
	Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[6.0] )
	Call     JumpSpriteA 	( .Actor:Self 00000006 00000128 00000000 00000000 00000000 .True )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00020000 .True )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
	Return
	End

#new:Script $Script_8022788C
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00080000 
	   Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	Else
	   Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[1.0] )
	EndIf
	ExecWait $Script_80226C5C 
	SetConst  *Var[0]  00000001 
	Call     GetEventType 	( .Actor:Self *Var[1] )
	Switch  *Var[1] 
	   CaseOR  ==  .Event:BurnHit
	   CaseOR  ==  .Event:BurnDeath
	      Call     SetAnimation 	( .Actor:Self 00000006 00310020 )
	      Call     GetActorVar 	( .Actor:Self 00000006 *Var[1] )
	   EndCaseGroup
	   Default
	      Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	EndSwitch
	Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
	ChildThread
	   Wait     00000004 
	   ExecWait $Script_80227154 
	EndChildThread
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
	If  *Var[A]  !=  00000003 
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     SetSpritePos 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
	   Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .False )
	   Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[6.0] )
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Add  *Var[0]  0000001E 
	   Set  *Var[1]  00000000 
	   Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 0000000A 00000012 .Easing:Linear )
	   Add  *Var[0]  00000014 
	   Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000008 0000000A .Easing:Linear )
	   Loop     00000014 
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
	      Wait     00000001 
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .False )
	      Wait     00000001 
	   EndLoop
	   Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00020000 .True )
	   Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
	Else
	   Wait     0000001E 
	EndIf
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   Case  ==  .Event:BurnHit
	      Call     GetActorVar 	( .Actor:Self 00000007 *Var[1] )
	      Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     8027D8E0 ( FFFFFF81 *Var[3] *Var[4] )
	      Div  *Var[3]  00000002 
	      Add  *Var[1]  *Var[3] 
	      Add  *Var[2]  00000005 
	      DivF  *Var[3]  *Fixed[10.0] 
	      Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Case  ==  .Event:BurnDeath
	      Call     GetActorVar 	( .Actor:Self 00000007 *Var[1] )
	      Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
	      Wait     0000000A 
	   Default
	EndSwitch
	Return
	End

#new:Script $Script_80227D64
	SetConst  *Var[0]  00000001 
	Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	Call     UseCamPreset 	( 00000002 )
	Call     GetActorFlags 	( .Actor:Self *Var[9] )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.05078125] )
	Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Set  *Var[D]  *Var[B] 
	Add  *Var[D]  00000028 
	Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[D] *Var[C] )
	Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
	Wait     00000014 
	Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Call     80279BEC ( FFFFFF81 0000000A )
	Wait     00000014 
	Call     SetActorAngle 	( .Actor:Self 000000B4 )
	Wait     00000005 
	Call     SetActorVar 	( .Actor:Self 00000000 *Var[2] )
	Switch  *Var[2] 
	   Case  ==  00000000 
	      Set  *Var[2]  00000060 
	      Set  *Var[6]  00000004 
	   Case  ==  00000001 
	      Set  *Var[2]  00000048 
	      Set  *Var[6]  00000003 
	   Case  ==  00000002 
	      Set  *Var[2]  00000030 
	      Set  *Var[6]  00000002 
	   Default
	      Set  *Var[2]  00000018 
	      Set  *Var[6]  00000001 
	EndSwitch
	ChildThread
	   Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	   Loop     *Var[6] 
	      Call     PlayEffect  	( {FX:ShockWave:Sand} *Var[A] 00000000 *Var[C] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	      Wait     0000000A 
	   EndLoop
	EndChildThread
	Call     SetActorSpeed 	( .Actor:Self *Fixed[2.0] )
	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Sub  *Var[4]  *Var[2] 
	Call     SetGoalToPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     MoveToGoal  	( .Actor:Self 00000000 00000000 .Easing:Linear )
	Wait     00000008 
	Call     8027D32C ( FFFFFF81 )
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     RemoveActor 	( .Actor:Self )
	Return
	End

PADDING: 802280EC to 802280F0 (005674CC to 005674D0)
00000000 

#new:IdleAnimations $IdleAnimations_802280F0
.Status:Normal    00590001
.Status:Stone     00590000
.Status:Sleep     00590011
.Status:Poison    00590001
.Status:Stop      00590000
.Status:Static    00590001
.Status:Paralyze  00590000
.Status:Dizzy     00590013
.Status:Fear      00590013
.Status:End

#new:IdleAnimations $IdleAnimations_8022813C
.Status:Normal    00590003
.Status:Stone     00590000
.Status:Sleep     00590011
.Status:Poison    00590003
.Status:Stop      00590000
.Status:Static    00590003
.Status:Paralyze  00590000
.Status:Dizzy     00590013
.Status:Fear      00590013
.Status:End

#new:IdleAnimations $IdleAnimations_80228188
.Status:Normal    0059000F
.Status:Stone     00590010
.Status:Sleep     00590012
.Status:Poison    0059000F
.Status:Stop      00590010
.Status:Static    0059000F
.Status:Paralyze  00590010
.Status:Dizzy     00590014
.Status:Fear      00590014
.Status:End

#new:IdleAnimations $IdleAnimations_802281D4
.Status:Normal    00590006
.Status:Stone     00590006
.Status:Sleep     00590006
.Status:Poison    00590006
.Status:Stop      00590006
.Status:Static    00590006
.Status:Paralyze  00590006
.Status:Dizzy     00590006
.Status:Fear      00590006
.Status:End

#new:DefenseTable $DefenseTable_80228220
.Element:Normal 00000003
.Element:Shock  00000003
.Element:End

#new:DefenseTable $DefenseTable_80228234
.Element:Normal 00000000
.Element:End

#new:DefenseTable $DefenseTable_80228240
.Element:Normal 00000003
.Element:Fire   00000003
.Element:End

#new:StatusTable $StatusTable_80228254
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     60`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     80`
.Status:Paralyze   75`
.Status:Shrink     70`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:StatusTable $StatusTable_80228300
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8022839C
00800000 01000000 002000FF $IdleAnimations_802280F0 $DefenseTable_80228220 00001010 00000000 00F40000 00000000 

#new:Actor $Koopatrol
% stats
[Index]        4Cb 
[Level]        25`b 
[MaxHP]         8`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80228254 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8022839C 
[Script]      $Script_Init_802283E8 
% move effectiveness
[Escape]       50`b 
[Item]         60`b 
[AirLift]      75`b 
[Hurricane]    65`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  85`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         32`b  42`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -15`b  32`b % dx dy
[StatusIcon]    5`b  32`b % dx dy

#new:Script $Script_Init_802283E8
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022C454 )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8022875C )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80228C44 )
	Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_80228538 )
	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
	Call     GetIndexFromHome 	( .Actor:Self *Var[0] )
	Call     SetActorVar 	( .Actor:Self 00000002 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      Call     SetBattleVar 	( 00000004 00000000 )
	   Case  ==  00000001 
	      Call     SetBattleVar 	( 00000005 00000000 )
	   Case  ==  00000002 
	      Call     SetBattleVar 	( 00000006 00000000 )
	   Case  ==  00000003 
	      Call     SetBattleVar 	( 00000007 00000000 )
	EndSwitch
	Return
	End

#new:Script $Script_NextTurn_80228538
	Call     GetBattlePhase ( *Var[0] )
	Switch  *Var[0] 
	   Case  ==  .Phase:PlayerBegin
	   Case  ==  .Phase:EnemyBegin
	   Case  ==  .Phase:EnemyEnd
	      Call     SetBattleVar 	( 00000001 00000000 )
	EndSwitch
	Return
	End

#new:Script $Script_802285A4
	Switch  *Var[0] 
	   Case  ==  00000000 
	      If  *Var[1]  &  00041000 
	         Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
	         Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
	         Call     $Function_80218BB0 ( FFFFFFF6 00000014 0000000A 00000014 )
	      Else
	         Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 00000020 )
	         Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
	         Call     $Function_80218BB0 ( FFFFFFF1 00000020 00000005 00000020 )
	      EndIf
	   Case  ==  00000001 
	      Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
	      Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
	      Call     $Function_80218BB0 ( FFFFFFF6 00000014 0000000A 00000014 )
	   Case  ==  00000002 
	      Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 00000014 )
	      Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFFA )
	      Call     $Function_80218BB0 ( FFFFFFF1 00000016 00000005 00000016 )
	EndSwitch
	Return
	End

#new:Script $Script_Idle_8022875C
	Label    00000000 
	Call     RandInt     	( 00000050 *Var[A] )
	Add  *Var[A]  00000050 
	Loop     *Var[A] 
	   Label    00000001 
	   Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	   Call     GetStatusFlags ( .Actor:Self *Var[1] )
	   ExecWait $Script_802285A4 
	   If  *Var[0]  ==  00000001 
	      Wait     00000001 
	      Goto     00000001 
	   EndIf
	   If  *Var[1]  &  0235D000 
	      Wait     00000001 
	      Goto     00000001 
	   EndIf
	   Wait     00000001 
	EndLoop
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  00000005 
	Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022813C )
	Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	Call     8027A264 ( FFFFFF81 00000000 )
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802280F0 )
	   Case  ==  00000001 
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80228188 )
	EndSwitch
	Loop     00000014 
	   Label    00000002 
	   Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	   Call     GetStatusFlags ( .Actor:Self *Var[1] )
	   ExecWait $Script_802285A4 
	   If  *Var[0]  ==  00000001 
	      Wait     00000001 
	      Goto     00000002 
	   EndIf
	   If  *Var[1]  &  0235D000 
	      Wait     00000001 
	      Goto     00000002 
	   EndIf
	   Wait     00000001 
	EndLoop
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub  *Var[0]  00000005 
	Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022813C )
	Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	Call     8027A264 ( FFFFFF81 00000000 )
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802280F0 )
	   Case  ==  00000001 
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80228188 )
	EndSwitch
	Loop     00000050 
	   Label    00000003 
	   Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	   Call     GetStatusFlags ( .Actor:Self *Var[1] )
	   ExecWait $Script_802285A4 
	   If  *Var[0]  ==  00000001 
	      Wait     00000001 
	      Goto     00000003 
	   EndIf
	   If  *Var[1]  &  0235D000 
	      Wait     00000001 
	      Goto     00000003 
	   EndIf
	   Wait     00000001 
	EndLoop
	Goto     00000000 
	Return
	End

#new:IntTable $IntTable_80228BEC
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 

#new:Script $Script_HandleEvent_80228C44
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetActorAngle 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         CaseOR  ==  00000000 
	         CaseOR  ==  00000001 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000B 
	            ExecWait DoNormalHit 
	         EndCaseGroup
	         Case  ==  00000002 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  00590006 
	            ExecWait DoNormalHit 
	      EndSwitch
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0059000C 
	      SetConst  *Var[2]  0059000D 
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0059000C 
	      SetConst  *Var[2]  0059000D 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0059000D 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         CaseOR  ==  00000000 
	         CaseOR  ==  00000001 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000B 
	            ExecWait 8029B998 
	         EndCaseGroup
	         Case  ==  00000002 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  00590006 
	            ExecWait 8029B998 
	      EndSwitch
	   Case  ==  .Event:MultibounceDeath
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         CaseOR  ==  00000000 
	         CaseOR  ==  00000001 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000B 
	            ExecWait 8029B998 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000B 
	            ExecWait DoDeath 
	         EndCaseGroup
	         Case  ==  00000002 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  00590006 
	            ExecWait 8029B998 
	            Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
	            Wait     00000005 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000B 
	            ExecWait DoDeath 
	      EndSwitch
	   Case  ==  .Event:FlipTrigger
	      Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
	      Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
	      Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80228234 )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80228188 )
	      Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
	      Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
	      Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .False )
	      Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
	      Call     SetAnimation 	( .Actor:Self 00000001 0059000B )
	      Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
	      Thread
	         Wait     00000004 
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000001E )
	         Wait     00000001 
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	         Wait     00000001 
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFE2 )
	         Wait     00000001 
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFC4 )
	         Wait     00000001 
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFB5 )
	         Wait     00000001 
	      EndThread
	      UseIntBuffer $IntTable_80228BEC 
	      Loop     00000016 
	         Get1Int  *Var[0] 
	         Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
	         Wait     00000001 
	      EndLoop
	      Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 0059000F )
	   Case  ==  .Event:ShockHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0059000B 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0059000B 
	      ExecWait 8029BD70 
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00590004 
	      ExecWait DoReturnHome 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	   Case  ==  .Event:ShockDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0059000B 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0059000B 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:StarBeam
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      If  *Var[0]  ==  00000002 
	         Call     SetStatusTable ( .Actor:Self $StatusTable_80228254 )
	         Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80228220 )
	         Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .True )
	         Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	         Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802280F0 )
	         Call     GetStatusFlags ( .Actor:Self *Var[A] )
	         If  *Var[A]  !&  18000000 
	            Call     EnableActorGlow 	( .Actor:Self .False )
	         EndIf
	         Call     SetSpriteEventBits 	( .Actor:Self 00000001 00400000 .False )
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00590008 
	         ExecWait DoImmune 
	      EndIf
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         Case  ==  00000000 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  00590007 
	            ExecWait DoImmune 
	            Call     GetStatusFlags ( .Actor:Self *Var[0] )
	            If  *Var[0]  !&  0035D000 
	               Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
	               Wait     0000000A 
	            EndIf
	         Case  ==  00000001 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000F 
	            ExecWait DoImmune 
	         Case  ==  00000002 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  00590006 
	            ExecWait DoImmune 
	      EndSwitch
	   EndCaseGroup
	   Case  ==  .Event:SpikeTaunt
	      Wait     0000000A 
	      Set  *Flag[00]  00000000 
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     GetStatusFlags ( .Actor:Self *Var[3] )
	      If  *Var[3]  &  00080000 
	         Add  *Var[1]  00000010 
	         Set  *Flag[00]  00000001 
	      EndIf
	      If  *Var[3]  &  00040000 
	         Add  *Var[0]  FFFFFFF2 
	         Add  *Var[1]  00000014 
	         Set  *Flag[00]  00000001 
	      EndIf
	      If  *Var[3]  &  00001000 
	         Add  *Var[0]  FFFFFFF2 
	         Add  *Var[1]  00000014 
	         Set  *Flag[00]  00000001 
	      EndIf
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
	      If  *Var[A]  ==  00000002 
	         Add  *Var[1]  00000017 
	         Set  *Flag[00]  00000001 
	      EndIf
	      If  *Flag[00]  ==  00000000 
	         Add  *Var[1]  0000002A 
	      EndIf
	      Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	      Wait     00000014 
	   Case  ==  .Event:Death
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         CaseOR  ==  00000000 
	         CaseOR  ==  00000001 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000B 
	            ExecWait DoNormalHit 
	            Wait     0000000A 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000B 
	            ExecWait DoDeath 
	            Return
	         EndCaseGroup
	         Case  ==  00000002 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  00590006 
	            ExecWait DoNormalHit 
	            Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
	            Wait     00000005 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000B 
	            ExecWait DoDeath 
	            Return
	      EndSwitch
	   Case  ==  .Event:RecoverStatus
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         Case  ==  00000000 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  00590001 
	            ExecWait DoRecover 
	         Case  ==  00000001 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000F 
	            ExecWait DoImmune 
	         Case  ==  00000002 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  00590006 
	            ExecWait DoRecover 
	      EndSwitch
	   Case  ==  .Event:ScareAway
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         CaseOR  ==  00000000 
	         CaseOR  ==  00000002 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  00590004 
	            SetConst  *Var[2]  0059000B 
	            ExecWait DoScareAway 
	            Return
	         EndCaseGroup
	         Case  ==  00000001 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000F 
	            ExecWait DoImmune 
	      EndSwitch
	   Case  ==  .Event:BeginAirLift
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         Case  ==  00000000 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  00590016 
	            ExecWait DoAirLift 
	         Case  ==  00000001 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000F 
	            ExecWait DoAirLift 
	         Case  ==  00000002 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000F 
	            ExecWait DoAirLift 
	      EndSwitch
	   Case  ==  .Event:BlowAway
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         Case  ==  00000000 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  00590016 
	         Case  ==  00000001 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000F 
	         Case  ==  00000002 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000F 
	      EndSwitch
	      ExecWait DoBlowAway 
	      Return
	   Case  ==  .Event:AirLiftFailed
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         Case  ==  00000000 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  00590001 
	         Case  ==  00000001 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000F 
	         Case  ==  00000002 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000F 
	      EndSwitch
	      ExecWait DoImmune 
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_80229E34
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     SetAnimation 	( .Actor:Self 00000001 00590006 )
	Else
	   Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	   If  *Var[0]  ==  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
	      Sub  *Var[0]  00000001 
	      If  *Var[0]  >  00000000 
	         Call     SetActorVar 	( .Actor:Self 00000009 *Var[0] )
	         Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	         Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[3.0] )
	         Wait     0000000F 
	         Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
	         Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Else
	         Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	         Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[3.0] )
	         Wait     0000000A 
	         Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
	         Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	         Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
	         Call     PlaySoundAtActor 	( .Actor:Self .Sound:Jump )
	         Call     SetAnimation 	( .Actor:Self 00000001 0059000F )
	         Set  *Var[0]  00000000 
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
	         Thread
	            Loop     00000005 
	               Add  *Var[0]  0000000F 
	               Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	               Wait     00000001 
	            EndLoop
	         EndThread
	         Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
	         Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	         Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	         Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	         Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
	         Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	         Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802280F0 )
	         Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80228220 )
	         Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 00000020 )
	         Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
	         Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .True )
	         Call     SetActorFlagBits 	( .Actor:Self 00000400 .False )
	      EndIf
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndIf
	   Call     UseCamPreset 	( 0000003F )
	   Call     CamTargetActor ( .Actor:Self )
	   Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	   Wait     0000000A 
	   Call     SetAnimation 	( .Actor:Self 00000001 00590007 )
	   Wait     0000000A 
	   Thread
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[1]  00000004 
	      Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
	      Wait     00000003 
	      Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
	      Wait     00000002 
	      Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
	   EndThread
	   Call     PlaySoundAtActor 	( .Actor:Self 00002021 )
	   Call     SetAnimation 	( .Actor:Self 00000001 00590006 )
	   Wait     0000000A 
	   Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	EndIf
	Call     PlaySoundAtActor 	( .Actor:Self 000020D3 )
	Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000004 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     AddToGoalPos 	( .Actor:Self FFFFFFD8 00000000 00000000 )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Call     GetBattlePhase ( *Var[0] )
	      If  *Var[0]  ==  .Phase:FirstStrike
	         Call     UseCamPreset 	( 00000005 )
	         Call     SetCamZoom  	( 0000012C )
	         Call     SetCamOffsetZ 	( 00000014 )
	         Call     MoveCamOver 	( 0000000A )
	         Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	      EndIf
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
	      Wait     00000008 
	      Call     8026F6EC ( FFFFFF81 )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      Wait     00000004 
	      Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
	      Wait     00000001 
	      Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[1]  00000014 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
	      Wait     00000006 
	      Sub  *Var[1]  00000014 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	      Call     UseCamPreset 	( 00000002 )
	      Call     8027D7F0 ( )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     8026B438 ( FFFFFF81 00000001 00000000 )
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Call     8026F6EC ( FFFFFF81 )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000004 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[0]  00000028 
	      Set  *Var[1]  00000000 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	      Add  *Var[0]  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	      Add  *Var[0]  00000014 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
	      Wait     00000008 
	      Call     8027D7F0 ( )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00590004 
	      ExecWait DoReturnHome 
	      Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8022AB88
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	If  *Var[0]  ==  00000000 
	   Call     UseCamPreset 	( 0000000E )
	   Call     CamTargetActor ( .Actor:Self )
	   Call     MoveCamOver 	( 00000014 )
	   Call     PlaySoundAtActor 	( .Actor:Self .Sound:PowerUp )
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Add  *Var[1]  0000000A 
	   Call     PlayEffect  	( {FX:EnergyIn:LongStreaks1} *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Call     SetAnimation 	( .Actor:Self 00000001 00590015 )
	   Wait     0000001E 
	   Call     UseCamPreset 	( 00000002 )
	   Call     MoveCamOver 	( 00000014 )
	   Thread
	      Wait     00000008 
	      Call     SetAnimation 	( .Actor:Self 00000001 00590007 )
	   EndThread
	   Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
	   Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
	   Call     $Function_80218C7C ( 00000080 0000000A )
	   Thread
	      Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.5] )
	   EndThread
	   Call     SetAnimation 	( .Actor:Self 00000001 00590006 )
	   Call     SetStatusTable ( .Actor:Self $StatusTable_80228300 )
	   Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80228240 )
	   Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .False )
	   Call     SetActorVar 	( .Actor:Self 00000000 00000002 )
	   Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802281D4 )
	   Call     EnableActorGlow 	( .Actor:Self .True )
	   Call     SetSpriteEventBits 	( .Actor:Self 00000001 00400000 .True )
	   Wait     0000000A 
	   Call     UseIdleAnimation 	( .Actor:Self .True )
	   Call     EnableIdleScript 	( .Actor:Self 00000001 )
	   Return
	EndIf
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Loop     00000014 
	   Call     8026BA04 ( FFFFFF81 00000001 00000000 00000000 )
	   Wait     00000001 
	   Call     8026BA04 ( FFFFFF81 FFFFFFFF 00000000 00000000 )
	   Wait     00000001 
	EndLoop
	Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	Call     PlaySoundAtActor 	( .Actor:Self 0000037C )
	Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000004 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Thread
	         Loop     
	            Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Add  *Var[0]  0000001E 
	            Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	            If  *Var[0]  >  *Var[3] 
	               BreakLoop
	            EndIf
	            Wait     00000001 
	         EndLoop
	         Call     UseCamPreset 	( 00000001 )
	         If  *Var[A]  ==  00000005 
	            Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	         EndIf
	         Wait     0000000F 
	         Call     UseCamPreset 	( 00000002 )
	      EndThread
	      Thread
	         Loop     0000001E 
	            Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	            Call     PlayEffect  	( {FX:Steam:Ring} *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	            Wait     00000001 
	         EndLoop
	      EndThread
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     AddToGoalPos 	( .Actor:Self FFFFFF38 00000000 00000000 )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Wait     0000000F 
	      Call     GetStatusFlags ( .Actor:Self *Var[A] )
	      If  *Var[A]  !&  18000000 
	         Call     EnableActorGlow 	( .Actor:Self .False )
	      EndIf
	      Call     SetSpriteEventBits 	( .Actor:Self 00000001 00400000 .False )
	      Call     8027D7F0 ( )
	      Call     8026F6EC ( FFFFFF81 )
	      Call     SetActorPos 	( .Actor:Self 0000012C 00000000 00000000 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     SetStatusTable ( .Actor:Self $StatusTable_80228254 )
	      Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80228220 )
	      Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .True )
	      Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802280F0 )
	      Wait     0000000A 
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Thread
	   Loop     0000001E 
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     PlayEffect  	( {FX:Steam:Ring} *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	      Wait     00000001 
	   EndLoop
	EndThread
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[A] 00000000 0000FFFF 00000000 0000000A 00000020 )
	Switch  *Var[A] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Thread
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
	         Set  *Var[0]  00000000 
	         Loop     0000003C 
	            Add  *Var[0]  00000012 
	            Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	            Wait     00000001 
	         EndLoop
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      EndThread
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000032 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000001E 00000000 00000001 00000000 )
	      Sub  *Var[0]  00000028 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
	      Sub  *Var[0]  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	      Wait     00000014 
	      Call     8027D7F0 ( )
	      Call     GetStatusFlags ( .Actor:Self *Var[A] )
	      If  *Var[A]  !&  18000000 
	         Call     EnableActorGlow 	( .Actor:Self .False )
	      EndIf
	      Call     SetSpriteEventBits 	( .Actor:Self 00000001 00400000 .False )
	      Call     8026F6EC ( FFFFFF81 )
	      Call     SetActorPos 	( .Actor:Self 0000012C 00000000 00000000 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00590004 
	      ExecWait DoReturnHome 
	      Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
	      Call     SetStatusTable ( .Actor:Self $StatusTable_80228254 )
	      Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80228220 )
	      Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .True )
	      Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802280F0 )
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8022B8AC
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000001 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetActorType 	( *Var[0] *Var[2] )
	Switch  *Var[2] 
	   CaseOR  ==  00000010 
	   CaseOR  ==  00000049 
	      Set  *Var[A]  FFFFFFFF 
	      Return
	   EndCaseGroup
	EndSwitch
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000001 
	EndIf
	Set  *Flag[01]  00000000 
	Set  *Flag[02]  00000000 
	Set  *Flag[03]  00000000 
	Set  *Flag[04]  00000000 
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetIndexFromHome 	( *Var[0] *Var[1] )
	Mod  *Var[1]  00000004 
	Switch  *Var[1] 
	   Case  ==  00000000 
	      Set  *Flag[01]  00000001 
	   Case  ==  00000001 
	      Set  *Flag[02]  00000001 
	   Case  ==  00000002 
	      Set  *Flag[03]  00000001 
	   Case  ==  00000003 
	      Set  *Flag[04]  00000001 
	EndSwitch
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	If  *Flag[01]  ==  00000000 
	   Set  *Var[A]  00000000 
	   Return
	EndIf
	If  *Flag[02]  ==  00000000 
	   Set  *Var[A]  00000001 
	   Return
	EndIf
	If  *Flag[03]  ==  00000000 
	   Set  *Var[A]  00000002 
	   Return
	EndIf
	If  *Flag[04]  ==  00000000 
	   Set  *Var[A]  00000003 
	   Return
	EndIf
	Set  *Var[A]  FFFFFFFF 
	Return
	End

#new:Vector3D $Vector3D_8022BBBC
0` -1000` 0`

#new:SpecialFormation $SpecialFormation_8022BBC8
$Koopatrol $Vector3D_8022BBBC 00000064 00000000 00000000 00000000 00000000 

#new:Script $Script_8022BBE4
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     UseCamPreset 	( 0000000E )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 00000014 )
	Call     PlaySoundAtActor 	( .Actor:Self 000002E5 )
	Call     SetAnimation 	( .Actor:Self 00000001 00590002 )
	Wait     00000014 
	Loop     00000002 
	   Call     SetAnimation 	( .Actor:Self 00000001 00590002 )
	   Wait     00000008 
	   Call     PlaySoundAtActor 	( .Actor:Self 000002E5 )
	   Call     SetActorAngle 	( .Actor:Self 000000B4 )
	   Call     SetAnimation 	( .Actor:Self 00000001 00590009 )
	   Wait     00000008 
	   Call     SetAnimation 	( .Actor:Self 00000001 00590002 )
	   Wait     00000008 
	   Call     PlaySoundAtActor 	( .Actor:Self 000002E5 )
	   Call     SetActorAngle 	( .Actor:Self 00000000 )
	   Call     SetAnimation 	( .Actor:Self 00000001 00590009 )
	   Wait     00000008 
	EndLoop
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 0000000F )
	Thread
	   Wait     00000008 
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     PlayEffect  	( {FX:Sparkles:Star} *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Call     PlaySoundAtActor 	( .Actor:Self 0000206D )
	EndThread
	Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
	Call     SummonEnemy 	( $SpecialFormation_8022BBC8 00000000 )
	Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
	Add  *Var[1]  000000C8 
	Call     SetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
	Call     SetGoalToIndex ( *Var[0] *Var[A] )
	Call     PlaySoundAtActor 	( *Var[0] 000020D3 )
	Call     8026F740 ( *Var[0] 00000000 00000000 00000000 )
	Call     SetAnimation 	( *Var[0] 00000001 00590006 )
	Call     SetActorSpeed 	( *Var[0] *Fixed[6.0] )
	Call     RunToGoal   	( *Var[0] 00000000 .False )
	Call     SetAnimation 	( *Var[0] 00000001 00590008 )
	Wait     0000000A 
	Call     SetAnimation 	( *Var[0] 00000001 00590001 )
	Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
	Call     ForceHomePos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
	Call     HPBarToHome 	( *Var[0] )
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
	Switch  *Var[1] 
	   Case  ==  00000000 
	      Call     SetActorVar 	( *Var[0] 00000001 00000001 )
	   Case  ==  00000001 
	      Call     SetActorVar 	( *Var[0] 00000001 00000002 )
	EndSwitch
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[1] )
	Call     SetActorVar 	( *Var[0] 00000002 *Var[1] )
	Switch  *Var[1] 
	   Case  ==  00000000 
	      Call     GetBattleVar 	( 00000004 *Var[0] )
	      Add  *Var[0]  00000001 
	      Call     SetBattleVar 	( 00000004 *Var[0] )
	   Case  ==  00000001 
	      Call     GetBattleVar 	( 00000005 *Var[0] )
	      Add  *Var[0]  00000001 
	      Call     SetBattleVar 	( 00000005 *Var[0] )
	   Case  ==  00000002 
	      Call     GetBattleVar 	( 00000006 *Var[0] )
	      Add  *Var[0]  00000001 
	      Call     SetBattleVar 	( 00000006 *Var[0] )
	   Case  ==  00000003 
	      Call     GetBattleVar 	( 00000007 *Var[0] )
	      Add  *Var[0]  00000001 
	      Call     SetBattleVar 	( 00000007 *Var[0] )
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8022C204
	Set  *Var[9]  00000000 
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetActorType 	( *Var[0] *Var[2] )
	Switch  *Var[2] 
	   Case  ==  0000004C 
	      Call     GetStatusFlags ( *Var[0] *Var[3] )
	      If  *Var[3]  !&  0035D000 
	         Call     GetActorVar 	( *Var[0] 00000000 *Var[3] )
	         If  *Var[3]  ==  00000000 
	            Call     GetActorVar 	( *Var[0] 00000001 *Var[3] )
	            Switch  *Var[3] 
	               CaseOR  ==  00000000 
	               CaseOR  ==  00000001 
	                  Call     GetActorVar 	( .Actor:Self 00000002 *Var[3] )
	                  Switch  *Var[3] 
	                     Case  ==  00000000 
	                        Call     GetBattleVar 	( 00000004 *Var[4] )
	                     Case  ==  00000001 
	                        Call     GetBattleVar 	( 00000005 *Var[4] )
	                     Case  ==  00000002 
	                        Call     GetBattleVar 	( 00000006 *Var[4] )
	                     Case  ==  00000003 
	                        Call     GetBattleVar 	( 00000007 *Var[4] )
	                  EndSwitch
	                  If  *Var[4]  <  00000002 
	                     Add  *Var[9]  00000001 
	                  EndIf
	               EndCaseGroup
	               Case  ==  00000002 
	            EndSwitch
	         EndIf
	      EndIf
	EndSwitch
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	Return
	End

#new:Script $Script_TakeTurn_8022C454
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     SetBattleVar 	( 00000001 00000001 )
	   ExecWait $Script_80229E34 
	   Return
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      Call     GetBattleVar 	( 00000001 *Var[0] )
	      Switch  *Var[0] 
	         Case  ==  00000000 
	            Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	            Switch  *Var[0] 
	               CaseOR  ==  00000000 
	               CaseOR  ==  00000001 
	                  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	                  Switch  *Var[0] 
	                     Case  ==  00000000 
	                        Call     GetBattleVar 	( 00000004 *Var[1] )
	                     Case  ==  00000001 
	                        Call     GetBattleVar 	( 00000005 *Var[1] )
	                     Case  ==  00000002 
	                        Call     GetBattleVar 	( 00000006 *Var[1] )
	                     Case  ==  00000003 
	                        Call     GetBattleVar 	( 00000007 *Var[1] )
	                  EndSwitch
	                  If  *Var[1]  >=  00000002 
	                     Call     RandInt     	( 000003E8 *Var[0] )
	                     If  *Var[0]  <  0000012C 
	                        Call     SetBattleVar 	( 00000001 00000002 )
	                        ExecWait $Script_8022AB88 
	                     Else
	                        Call     SetBattleVar 	( 00000001 00000001 )
	                        ExecWait $Script_80229E34 
	                     EndIf
	                     Return
	                  EndIf
	               EndCaseGroup
	               Case  ==  00000002 
	                  Call     RandInt     	( 000003E8 *Var[0] )
	                  If  *Var[0]  <  0000012C 
	                     Call     SetBattleVar 	( 00000001 00000002 )
	                     ExecWait $Script_8022AB88 
	                  Else
	                     Call     SetBattleVar 	( 00000001 00000001 )
	                     ExecWait $Script_80229E34 
	                  EndIf
	                  Return
	            EndSwitch
	            ExecWait $Script_8022B8AC 
	            If  *Var[A]  ==  FFFFFFFF 
	               Call     RandInt     	( 000003E8 *Var[0] )
	               If  *Var[0]  <  0000012C 
	                  Call     SetBattleVar 	( 00000001 00000002 )
	                  ExecWait $Script_8022AB88 
	               Else
	                  Call     SetBattleVar 	( 00000001 00000001 )
	                  ExecWait $Script_80229E34 
	               EndIf
	               Return
	            EndIf
	            ExecWait $Script_8022C204 
	            Switch  *Var[9] 
	               Case  ==  00000001 
	                  Call     RandInt     	( 000003E8 *Var[0] )
	                  If  *Var[0]  <  00000190 
	                     Call     SetBattleVar 	( 00000001 00000001 )
	                     ExecWait $Script_8022BBE4 
	                     Return
	                  EndIf
	               Case  ==  00000002 
	                  Call     RandInt     	( 000003E8 *Var[0] )
	                  If  *Var[0]  <  000000C8 
	                     Call     SetBattleVar 	( 00000001 00000001 )
	                     ExecWait $Script_8022BBE4 
	                     Return
	                  EndIf
	               Case  ==  00000003 
	                  Call     RandInt     	( 000003E8 *Var[0] )
	                  If  *Var[0]  <  00000064 
	                     Call     SetBattleVar 	( 00000001 00000001 )
	                     ExecWait $Script_8022BBE4 
	                     Return
	                  EndIf
	            EndSwitch
	            Call     RandInt     	( 000003E8 *Var[0] )
	            If  *Var[0]  <  0000012C 
	               Call     SetBattleVar 	( 00000001 00000002 )
	               ExecWait $Script_8022AB88 
	            Else
	               Call     SetBattleVar 	( 00000001 00000001 )
	               ExecWait $Script_80229E34 
	            EndIf
	         Case  ==  00000001 
	            Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	            Switch  *Var[0] 
	               CaseOR  ==  00000000 
	               CaseOR  ==  00000001 
	                  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	                  Switch  *Var[0] 
	                     Case  ==  00000000 
	                        Call     GetBattleVar 	( 00000004 *Var[1] )
	                     Case  ==  00000001 
	                        Call     GetBattleVar 	( 00000005 *Var[1] )
	                     Case  ==  00000002 
	                        Call     GetBattleVar 	( 00000006 *Var[1] )
	                     Case  ==  00000003 
	                        Call     GetBattleVar 	( 00000007 *Var[1] )
	                  EndSwitch
	                  If  *Var[1]  >=  00000002 
	                     Call     RandInt     	( 000003E8 *Var[0] )
	                     If  *Var[0]  <  0000012C 
	                        Call     SetBattleVar 	( 00000001 00000002 )
	                        ExecWait $Script_8022AB88 
	                     Else
	                        Call     SetBattleVar 	( 00000001 00000001 )
	                        ExecWait $Script_80229E34 
	                     EndIf
	                     Return
	                  EndIf
	               EndCaseGroup
	               Case  ==  00000002 
	                  ExecWait $Script_80229E34 
	                  Return
	            EndSwitch
	            ExecWait $Script_8022B8AC 
	            If  *Var[A]  ==  FFFFFFFF 
	               ExecWait $Script_80229E34 
	               Return
	            EndIf
	            ExecWait $Script_8022C204 
	            Switch  *Var[9] 
	               Case  ==  00000001 
	                  Call     RandInt     	( 000003E8 *Var[0] )
	                  If  *Var[0]  <  00000190 
	                     ExecWait $Script_8022BBE4 
	                     Return
	                  EndIf
	               Case  ==  00000002 
	                  Call     RandInt     	( 000003E8 *Var[0] )
	                  If  *Var[0]  <  000000C8 
	                     ExecWait $Script_8022BBE4 
	                     Return
	                  EndIf
	               Case  ==  00000003 
	                  Call     RandInt     	( 000003E8 *Var[0] )
	                  If  *Var[0]  <  00000064 
	                     ExecWait $Script_8022BBE4 
	                     Return
	                  EndIf
	            EndSwitch
	            ExecWait $Script_80229E34 
	         Case  ==  00000002 
	            ExecWait $Script_8022AB88 
	      EndSwitch
	   Case  ==  00000001 
	      Call     SetBattleVar 	( 00000001 00000001 )
	      ExecWait $Script_80229E34 
	   Case  ==  00000002 
	      ExecWait $Script_8022AB88 
	EndSwitch
	Return
	End

PADDING: 8022CCE4 to 8022CCF0 (0056C0C4 to 0056C0D0)
00000000 00000000 00000000 

#new:DefenseTable $DefenseTable_8022CCF0
.Element:Normal 00000000
.Element:Shock  00000000
.Element:End

#new:StatusTable $StatusTable_8022CD04
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      70`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      90`
.Status:Fear      100`
.Status:Static     50`
.Status:Paralyze   90`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8022CDB0
00800000 01000000 001800FF $IdleAnimations_8022CDFC $DefenseTable_8022CCF0 00000000 00000000 FFF60000 00000000 

#new:Actor $ShyGuy
% stats
[Index]        1Fb 
[Level]        14`b 
[MaxHP]         7`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8022CD04 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8022CDB0 
[Script]      $Script_Init_8022CE48 
% move effectiveness
[Escape]       60`b 
[Item]         80`b 
[AirLift]      85`b 
[Hurricane]    80`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         28`b  24`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_8022CDFC
.Status:Normal    003B0001
.Status:Stone     003B0000
.Status:Sleep     003B0012
.Status:Poison    003B0001
.Status:Stop      003B0000
.Status:Static    003B0001
.Status:Paralyze  003B0000
.Status:Dizzy     003B0013
.Status:Fear      003B0013
.Status:End

#new:Script $Script_Init_8022CE48
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022E794 )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8022CE94 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022D008 )
	Return
	End

#new:Script $Script_Idle_8022CE94
	Label    00000000 
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  &  00001000 
	   Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 0000000E )
	   Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
	   Call     $Function_80218CE0 ( FFFFFFF6 0000000D 0000000A 0000000D )
	Else
	   Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000018 )
	   Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
	   Call     $Function_80218CE0 ( FFFFFFF6 00000014 0000000A 00000014 )
	EndIf
	Wait     00000001 
	Goto     00000000 
	Return
	End

#new:Script $Script_8022CFA4
	Call     8026F6EC ( FFFFFF81 )
	SetConst  *Var[0]  00000001 
	SetConst  *Var[1]  003B0003 
	ExecWait DoReturnHome 
	Call     SetAnimation 	( .Actor:Self 00000001 003B0001 )
	Return
	End

#new:Script $Script_HandleEvent_8022D008
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003B000C 
	      ExecWait DoNormalHit 
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003B000D 
	      SetConst  *Var[2]  003B000E 
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003B000D 
	      SetConst  *Var[2]  003B000E 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003B000E 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003B000C 
	      ExecWait 8029B998 
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003B000C 
	      ExecWait 8029B998 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003B000C 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:ShockHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003B000C 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003B000C 
	      ExecWait 8029BD70 
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	      ExecWait $Script_8022CFA4 
	   Case  ==  .Event:ShockDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003B000C 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003B000C 
	      ExecWait DoDeath 
	      Return
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	   CaseOR  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003B0001 
	      ExecWait DoImmune 
	   EndCaseGroup
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003B000C 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003B000C 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003B0001 
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003B0003 
	      SetConst  *Var[2]  003B0014 
	      ExecWait DoScareAway 
	      Return
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003B000C 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003B000C 
	      ExecWait DoBlowAway 
	      Return
	   Default
	EndSwitch
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8022D4E4
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 00000014 )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 003B0003 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  00000032 
	Set  *Var[1]  00000000 
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     8026F740 ( FFFFFF81 00000002 000002EF 00000000 )
	      Call     8026F740 ( FFFFFF81 00000000 000020BA 000003B4 )
	      Call     8026F740 ( FFFFFF81 00000004 0000000A 00000000 )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 003B0004 )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Call     SetAnimation 	( .Actor:Self 00000001 003B0005 )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Call     8026F6EC ( FFFFFF81 )
	      Sub  *Var[0]  00000014 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	      Wait     0000000F 
	      Call     UseCamPreset 	( 00000002 )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003B0004 
	      ExecWait DoReturnHome 
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 003B0001 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Thread
	   Wait     00000003 
	   Call     PlaySoundAtActor 	( .Actor:Self 000002EF )
	EndThread
	Call     8026F740 ( FFFFFF81 00000000 000020BA 000003B4 )
	Call     8026F740 ( FFFFFF81 00000004 0000000A 00000000 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	Call     SetAnimation 	( .Actor:Self 00000001 003B0004 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  0000000A 
	Set  *Var[1]  00000000 
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Call     SetAnimation 	( .Actor:Self 00000001 003B0005 )
	Wait     00000002 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000002 00000020 )
	Call     8026F6EC ( FFFFFF81 )
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 0000000F )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  0000001E 
	Set  *Var[1]  00000000 
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 003B0001 )
	Wait     00000008 
	Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	ExecWait $Script_8022CFA4 
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8022DC0C
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 00000014 )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     PlaySoundAtActor 	( .Actor:Self 00000234 )
	Call     SetAnimation 	( .Actor:Self 00000001 003B0009 )
	Wait     00000014 
	Call     SetAnimation 	( .Actor:Self 00000001 003B0003 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[3.0] )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  00000050 
	Set  *Var[1]  00000000 
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Call     8026F740 ( FFFFFF81 00000000 000020BA 000003B4 )
	Call     8026F740 ( FFFFFF81 00000004 0000000A 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 003B0004 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
	Sub  *Var[0]  00000028 
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 003B0009 )
	      Thread
	         Wait     0000000C 
	         Call     SetAnimation 	( .Actor:Self 00000001 003B000A )
	      EndThread
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  0000000A 
	      Set  *Var[1]  00000000 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000018 00000000 00000001 00000000 )
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Call     SetAnimation 	( .Actor:Self 00000001 003B0005 )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	      Sub  *Var[0]  00000014 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	      Wait     0000000F 
	      Call     UseCamPreset 	( 00000002 )
	      Call     MoveCamOver 	( 0000000F )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003B0004 
	      ExecWait DoReturnHome 
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 003B0001 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	Call     SetAnimation 	( .Actor:Self 00000001 003B0009 )
	Thread
	   Wait     00000009 
	   Call     SetAnimation 	( .Actor:Self 00000001 003B000A )
	EndThread
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     JumpToGoal  	( .Actor:Self 00000012 00000000 00000001 00000000 )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000003 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Call     MoveCamOver 	( 0000000F )
	      Thread
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000E 00000000 )
	         Set  *Var[3]  00000000 
	         Loop     00000014 
	            Sub  *Var[3]  0000001E 
	            If  *Var[3]  <  00000000 
	               Add  *Var[3]  00000168 
	            EndIf
	            Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[3] )
	            Wait     00000001 
	         EndLoop
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	      EndThread
	      Call     GetBattleFlags ( *Var[0] )
	      If  *Var[0]  &  80000000 
	         Goto     00000001 
	      EndIf
	      Call     GetLastDamage 	( .Actor:Player *Var[0] )
	      If  *Var[0]  ==  00000000 
	         Goto     00000001 
	      EndIf
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[0]  00000028 
	      Set  *Var[1]  00000000 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 00000349 )
	      Call     PlaySoundAtActor 	( .Actor:Self 00000749 )
	      Call     SetAnimation 	( .Actor:Self 00000001 003B0009 )
	      Wait     0000000A 
	      Call     SetAnimation 	( .Actor:Self 00000001 003B0007 )
	      Wait     0000000F 
	      Goto     00000002 
	      Label    00000001 
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[0]  00000028 
	      Set  *Var[1]  00000000 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 000020E4 )
	      Call     SetAnimation 	( .Actor:Self 00000001 003B0010 )
	      Wait     0000000A 
	      Call     PlaySoundAtActor 	( .Actor:Self 000020C3 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     RandInt     	( 00000064 *Var[0] )
	      If  *Var[0]  <  00000032 
	         Call     SetAnimation 	( .Actor:Self 00000001 003B0011 )
	      Else
	         Call     SetAnimation 	( .Actor:Self 00000001 003B0013 )
	      EndIf
	      Wait     00000019 
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      Label    00000002 
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  003B0004 
	      ExecWait DoReturnHome 
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 003B0001 )
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_8022E794
	Call     RandInt     	( 00000001 *Var[0] )
	If  *Var[0]  ==  00000000 
	   ExecWait $Script_8022D4E4 
	Else
	   ExecWait $Script_8022DC0C 
	EndIf
	Return
	End

#new:Vector3D $Vector3D_8022E7F0
30` 0` 10`

#new:Formation $Formation_00
$BigLanternGhost $Vector3D_8022E7F0 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_01
$Goomba 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_02
$Goomba 00000001 0000000A 00000000 00000000 00000000 00000000 
$Goomba 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_03
$Clubba 00000001 0000000A 00000000 00000000 00000000 00000000 
$Clubba 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_04
$Fuzzy 00000001 0000000A 00000000 00000000 00000000 00000000 
$Fuzzy 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_05
$Fuzzy 00000000 0000000A 00000000 00000000 00000000 00000000 
$Fuzzy 00000001 00000009 00000000 00000000 00000000 00000000 
$Fuzzy 00000002 00000008 00000000 00000000 00000000 00000000 
$Fuzzy 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_06
$HammerBros 00000001 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_07
$HammerBros 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_08
$Pokey 00000001 0000000A 00000000 00000001 00000000 00000000 
$Pokey 00000002 00000009 00000000 00000001 00000000 00000000 

#new:Formation $Formation_09
$Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0A
$ShyGuy 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:FormationTable $FormationTable
$SJIS_8022EE60 00000001 $Formation_00 $Stage_8021B4A0 00000000 
$SJIS_8022EE48 00000001 $Formation_01 $Stage_8021B62C 00000000 
$SJIS_8022EE2C 00000002 $Formation_02 $Stage_8021B62C 00000000 % unused
$SJIS_8022EE10 00000002 $Formation_03 $Stage_8021B62C 00000000 
$SJIS_8022EDF4 00000002 $Formation_04 $Stage_8021B62C 00000000 % unused
$SJIS_8022EDD8 00000004 $Formation_05 $Stage_8021B62C 00000000 
$SJIS_8022EDB8 00000002 $Formation_06 $Stage_8021B62C 00000000 % unused
$SJIS_8022ED98 00000001 $Formation_07 $Stage_8021B62C 00000000 
$SJIS_8022ED80 00000002 $Formation_08 $Stage_8021B62C 00000000 
$SJIS_8022ED64 00000002 $Formation_09 $Stage_8021B62C 00000000 
$SJIS_8022ED58 00000001 $Formation_0A $Stage_8021B398 00000000 
00000000 00000000 00000000 00000000 00000000 % unused

#new:StageTable $StageTable
$ASCII_8022EEB4 $Stage_8021B398 
$ASCII_8022EEAC $Stage_8021B40C 
$ASCII_8022EEA4 $Stage_8021B4A0 
$ASCII_8022EE9C $Stage_8021B51C 
$ASCII_8022EE94 $Stage_8021B62C 
$ASCII_8022EE8C $Stage_8021CD70 
$ASCII_8022EE84 $Stage_8021CE1C 
$ASCII_8022EE7C $Stage_8021D09C 
$ASCII_8022EE74 $Stage_8021D11C 
00000000 00000000 

PADDING: 8022EB6C to 8022EB70 (0056DF4C to 0056DF50)
00000000 

#new:ConstDouble $ConstDouble_8022EB70
0.714286d

#new:ConstDouble $ConstDouble_8022EB78
90.000000d

#new:JumpTable $JumpTable_8022EB80
$Function_80218070[1E0] $Function_80218070[1F4] $Function_80218070[200] $Function_80218070[20C] 
$Function_80218070[218] $Function_80218070[224] $Function_80218070[230] $Function_80218070[23C] 
$Function_80218070[248] $Function_80218070[254] $Function_80218070[260] $Function_80218070[2AC] 

#new:ASCII $ASCII_8022EBB0
omo_bg

#new:ASCII $ASCII_8022EBB8
omo_bt01_hit

#new:ASCII $ASCII_8022EBC8
omo_bt01_shape

#new:ASCII $ASCII_8022EBD8
omo_tex

#new:ASCII $ASCII_8022EBE0
omo_bg

#new:ASCII $ASCII_8022EBE8
omo_bt02_hit

#new:ASCII $ASCII_8022EBF8
omo_bt02_shape

#new:ASCII $ASCII_8022EC08
omo_tex

#new:ASCII $ASCII_8022EC10
omo_bg

#new:ASCII $ASCII_8022EC18
omo_bt03_hit

#new:ASCII $ASCII_8022EC28
omo_bt03_shape

#new:ASCII $ASCII_8022EC38
omo_tex

#new:ASCII $ASCII_8022EC40
omo_bg

#new:ASCII $ASCII_8022EC48
omo_bt03_hit

#new:ASCII $ASCII_8022EC58
omo_bt03_shape

#new:ASCII $ASCII_8022EC68
omo_tex

#new:ASCII $ASCII_8022EC70
omo_bg

#new:ASCII $ASCII_8022EC78
omo_bt04_hit

#new:ASCII $ASCII_8022EC88
omo_bt04_shape

#new:ASCII $ASCII_8022EC98
omo_tex

#new:ASCII $ASCII_8022ECA0
omo_bg

#new:ASCII $ASCII_8022ECA8
omo_bt05_hit

#new:ASCII $ASCII_8022ECB8
omo_bt05_shape

#new:ASCII $ASCII_8022ECC8
omo_tex

#new:ASCII $ASCII_8022ECD0
omo_bg

#new:ASCII $ASCII_8022ECD8
omo_bt05_hit

#new:ASCII $ASCII_8022ECE8
omo_bt05_shape

#new:ASCII $ASCII_8022ECF8
omo_tex

#new:ASCII $ASCII_8022ED00
omo_bg

#new:ASCII $ASCII_8022ED08
omo_bt06_hit

#new:ASCII $ASCII_8022ED18
omo_bt06_shape

#new:ASCII $ASCII_8022ED28
omo_tex

#new:ASCII $ASCII_8022ED30
omo_bt07_hit

#new:ASCII $ASCII_8022ED40
omo_bt07_shape

#new:ASCII $ASCII_8022ED50
omo_tex

#new:SJIS $SJIS_8022ED58
% heiho-
83778343 837A815B 00000000 

#new:SJIS $SJIS_8022ED64
% togenokox2?pi-chihen?
83678351 836D8352 78825181 69837381 5B836082 D682F181 6A000000 

#new:SJIS $SJIS_8022ED80
% sanbox2?pi-chihen?
83548393 837B7882 51816983 73815B83 6082D682 F1816A00 

#new:SJIS $SJIS_8022ED98
% hanma-burosu?pi-chihen?
836E8393 837D815B 8375838D 83588169 8373815B 836082D6 82F1816A 00000000 

#new:SJIS $SJIS_8022EDB8
% hanma-burosux2?pi-chihen?
836E8393 837D815B 8375838D 83587882 51816983 73815B83 6082D682 F1816A00 

#new:SJIS $SJIS_8022EDD8
% chorobonx4?pi-chihen?
83608387 838D837B 83937882 53816983 73815B83 6082D682 F1816A00 

#new:SJIS $SJIS_8022EDF4
% chorobonx2?pi-chihen?
83608387 838D837B 83937882 51816983 73815B83 6082D682 F1816A00 

#new:SJIS $SJIS_8022EE10
% gabonheix2?pi-chihen?
834B837B 839382D6 82A27882 51816983 73815B83 6082D682 F1816A00 

#new:SJIS $SJIS_8022EE2C
% kuribo-x2?pi-chihen?
834E838A 837B815B 78825181 69837381 5B836082 D682F181 6A000000 

#new:SJIS $SJIS_8022EE48
% kuribo-?pi-chihen?
834E838A 837B815B 81698373 815B8360 82D682F1 816A0000 

#new:SJIS $SJIS_8022EE60
% bigukanterakun
83728362 834F834A 83938365 838982AD 82F10000 

#new:ASCII $ASCII_8022EE74
omo_07

#new:ASCII $ASCII_8022EE7C
omo_06

#new:ASCII $ASCII_8022EE84
omo_05b

#new:ASCII $ASCII_8022EE8C
omo_05

#new:ASCII $ASCII_8022EE94
omo_04

#new:ASCII $ASCII_8022EE9C
omo_03b

#new:ASCII $ASCII_8022EEA4
omo_03

#new:ASCII $ASCII_8022EEAC
omo_02

#new:ASCII $ASCII_8022EEB4
omo_01

PADDING: 8022EEBC to 8022EEC0 (0056E29C to 0056E2A0)
00000000 

