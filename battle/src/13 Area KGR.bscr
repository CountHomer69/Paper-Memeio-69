% Script File: 13 Area KGR.bscr
% Decoded from: 56E2A0 to 573920 (13 Area KGR)

#new:Function $Function_80218000
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S3, V0, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S2, V0, R0
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	LW        A0, 148 (S1)
	JAL       {Func:GetActor}
	DADDU     S1, V0, R0
	DADDU     V1, V0, R0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28

#new:Function $Function_802180CC
	ADDIU     SP, SP, FFD8
	SW        S2, 18 (SP)
	DADDU     S2, A0, R0
	SW        RA, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F20, 20 (SP)
	BEQ       A1, R0, .o130
	LW        S0, C (S2)
	JAL       8002ACE4
	ADDIU     A0, R0, 24
	DADDU     S1, V0, R0
	SW        S1, 70 (S2)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       {Func:GetVariable}
	DADDU     A0, S2, R0
	SW        V0, 20 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       {Func:GetFloatVariable}
	DADDU     A0, S2, R0
	SWC1      F0, 0 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       {Func:GetFloatVariable}
	DADDU     A0, S2, R0
	SWC1      F0, 4 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       {Func:GetFloatVariable}
	DADDU     A0, S2, R0
	SWC1      F0, 8 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       {Func:GetVariable}
	DADDU     A0, S2, R0
	SW        V0, 1C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetFloatVariable}
	DADDU     A0, S2, R0
	LW        A0, 20 (S1)
	JAL       80130F58
	SWC1      F0, 10 (S1)
	DADDU     S0, V0, R0
	LWC1      F12, 8 (S0)
	LWC1      F14, 10 (S0)
	LW        A2, 0 (S1)
	JAL       {Func:Dist2D}
	LW        A3, 8 (S1)
	LWC1      F12, 8 (S0)
	LWC1      F14, 10 (S0)
	LW        A2, 0 (S1)
	LW        A3, 8 (S1)
	JAL       80029C80
	MOV.S     F20, F0
	LWC1      F4, 10 (S1)
	LWC1      F6, 1C (S1)
	CVT.S.W   F6, F6
	MUL.S     F4, F4, F6
	NOP
	LIF       F2, 0.5
	NOP
	MUL.S     F4, F4, F2
	NOP
	SWC1      F0, C (S1)
	LWC1      F0, 4 (S1)
	LWC1      F2, C (S0)
	SUB.S     F0, F0, F2
	MOV.S     F2, F6
	DIV.S     F0, F0, F6
	ADD.S     F4, F4, F0
	DIV.S     F20, F20, F2
	SWC1      F20, 14 (S1)
	SWC1      F4, 18 (S1)
	.o130
	LW        S1, 70 (S2)
	JAL       80130F58
	LW        A0, 20 (S1)
	DADDU     S0, V0, R0
	BNE       S0, R0, .o158
	NOP
	JAL       8002AD2C
	LW        A0, 70 (S2)
	BEQ       R0, R0, .o1FC
	ADDIU     V0, R0, 2
	.o158
	LWC1      F12, C (S1)
	JAL       {Func:SinDeg}
	NOP
	LWC1      F2, 14 (S1)
	MUL.S     F2, F2, F0
	NOP
	LWC1      F0, 8 (S0)
	ADD.S     F0, F0, F2
	SWC1      F0, 8 (S0)
	JAL       {Func:CosDeg}
	LWC1      F12, C (S1)
	LWC1      F2, 14 (S1)
	MUL.S     F2, F2, F0
	NOP
	LWC1      F0, 10 (S0)
	SUB.S     F0, F0, F2
	SWC1      F0, 10 (S0)
	LWC1      F0, C (S0)
	LWC1      F2, 18 (S1)
	ADD.S     F0, F0, F2
	SWC1      F0, C (S0)
	LWC1      F0, 18 (S1)
	LWC1      F2, 10 (S1)
	LW        V0, 1C (S1)
	SUB.S     F0, F0, F2
	ADDIU     V0, V0, FFFF
	SW        V0, 1C (S1)
	BLTZ      V0, .o1D4
	SWC1      F0, 18 (S1)
	BEQ       R0, R0, .o1FC
	DADDU     V0, R0, R0
	.o1D4
	LWC1      F0, 0 (S1)
	SWC1      F0, 8 (S0)
	LWC1      F0, 4 (S1)
	SWC1      F0, C (S0)
	LWC1      F0, 8 (S1)
	SWC1      F0, 10 (S0)
	SW        R0, 18 (S1)
	JAL       8002AD2C
	LW        A0, 70 (S2)
	ADDIU     V0, R0, 1
	.o1FC
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F20, 20 (SP)
	JR        RA
	ADDIU     SP, SP, 28

#new:Function $Function_802182E4
	ADDIU     SP, SP, FFC0
	SW        S3, 2C (SP)
	DADDU     S3, A0, R0
	SW        S0, 20 (SP)
	DADDU     S0, R0, R0
	SW        S2, 28 (SP)
	LIA       S2, 800DC070
	SW        S4, 30 (SP)
	LIA       S4, 8010F290
	SW        S5, 34 (SP)
	ADDIU     A0, R0, FFFF
	SW        RA, 38 (SP)
	SW        S1, 24 (SP)
	LB        V0, AE (S2)
	LW        S1, C (S3)
	BNE       V0, A0, .o54
	DADDU     S5, S4, R0
	SW        R0, 10 (SP)
	ADDIU     S0, R0, 1
	.o54
	LB        V0, AF (S2)
	BNE       V0, A0, .o70
	SLL       V0, S0, 2
	ADDU      V1, SP, V0
	ADDIU     V0, R0, 1
	SW        V0, 10 (V1)
	ADDU      S0, S0, V0
	.o70
	LB        V0, B0 (S2)
	BNE       V0, A0, .o8C
	SLL       V0, S0, 2
	ADDU      V1, SP, V0
	ADDIU     V0, R0, 2
	SW        V0, 10 (V1)
	ADDIU     S0, S0, 1
	.o8C
	JAL       {Func:GetRandom}
	ADDIU     A0, R0, 2
	ADDIU     A0, S0, FFFF
	JAL       {Func:GetRandom}
	ADDIU     S0, V0, 2
	SLL       V0, V0, 2
	ADDU      V0, SP, V0
	LW        V1, 10 (V0)
	ADDIU     V0, R0, 1
	BEQ       V1, V0, .o124
	SLTI      V0, V1, 2
	BEQ       V0, R0, .oD0
	ADDIU     V0, R0, 2
	BEQL      V1, R0, .oE0
	SB        S0, AE (S2)
	BEQ       R0, R0, .o194
	NOP
	.oD0
	BEQL      V1, V0, .o16C
	SB        S0, B0 (S2)
	BEQ       R0, R0, .o194
	NOP
	.oE0
	LW        A1, 0 (S1)
	LB        V0, 1 (S4)
	ADDIU     S1, S1, 4
	SLL       V0, V0, 2
	LTW       A2, V0 ($IntTable_8021AFD8)
	JAL       {Func:SetVariable}
	DADDU     A0, S3, R0
	LB        V0, 1 (S4)
	LW        A1, 0 (S1)
	SLL       V0, V0, 2
	LTW       A2, V0 ($IntTable_8021AFE4)
	BEQ       R0, R0, .o18C
	DADDU     A0, S3, R0
	.o124
	SB        S0, AF (S2)
	LW        A1, 0 (S1)
	LB        V0, 0 (S5)
	ADDIU     S1, S1, 4
	SLL       V0, V0, 2
	LTW       A2, V0 ($IntTable_8021AFF0)
	JAL       {Func:SetVariable}
	DADDU     A0, S3, R0
	LB        V0, 0 (S5)
	LW        A1, 0 (S1)
	SLL       V0, V0, 2
	LTW       A2, V0 ($IntTable_8021AFFC)
	BEQ       R0, R0, .o18C
	DADDU     A0, S3, R0
	.o16C
	LW        A1, 0 (S1)
	ADDIU     S1, S1, 4
	DADDU     A0, S3, R0
	JAL       {Func:SetVariable}
	ADDIU     A2, R0, 16C
	DADDU     A0, S3, R0
	LW        A1, 0 (S1)
	ADDIU     A2, R0, 4F
	.o18C
	JAL       {Func:SetVariable}
	NOP
	.o194
	LW        RA, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 40

#new:Function $Function_802184A0
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	DADDU     A0, S0, R0
	JAL       80028F08
	DADDU     A1, V0, R0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20

#new:Function $Function_802184F8
	ADDIU     SP, SP, FFE8
	LIA       V1, 800DC070
	ADDIU     A2, R0, FFFF
	SW        RA, 10 (SP)
	LB        V0, AE (V1)
	BEQ       V0, A2, .o38
	LW        A1, C (A0)
	LB        V0, AF (V1)
	BEQ       V0, A2, .o38
	NOP
	LB        V0, B0 (V1)
	BNE       V0, A2, .o44
	NOP
	.o38
	LW        A1, 0 (A1)
	BEQ       R0, R0, .o48
	DADDU     A2, R0, R0
	.o44
	LW        A1, 0 (A1)
	.o48
	JAL       {Func:SetVariable}
	NOP
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18

PADDING: 80218558 to 80218560 (0056E7F8 to 0056E800)
00000000 00000000 

% Origin: HEURISTIC
#new:Function $Function_80218560
	ADDIU     SP, SP, FFA0
	SW        S0, 20 (SP)
	DADDU     S0, A0, R0
	SW        RA, 28 (SP)
	SW        S1, 24 (SP)
	SDC1      F30, 58 (SP)
	SDC1      F28, 50 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        V0, C (S0)
	JAL       {Func:GetVariable}
	LW        A1, 0 (V0)
	DADDU     S1, V0, R0
	ADDIU     A0, R0, 1
	BEQ       S1, A0, .o100
	SW        S1, 70 (S0)
	SLTI      V0, S1, 2
	BEQ       V0, R0, .o64
	ADDIU     V0, R0, 2
	BEQ       S1, R0, .o7C
	ADDIU     V0, R0, 8E
	BEQ       R0, R0, .o400
	NOP
	.o64
	BEQ       S1, V0, .o27C
	ADDIU     V0, R0, 3
	BEQ       S1, V0, .oBC
	ADDIU     V1, R0, 5B
	BEQ       R0, R0, .o400
	NOP
	.o7C
	LIF       F4, 142.0
	LIF       F30, -118.0
	ADDIU     V1, R0, FF8A
	SW        R0, 14 (SP)
	SWC1      F4, 10 (SP)
	SW        V0, 90 (S0)
	ADDIU     V0, R0, 2C
	SW        V0, 9C (S0)
	ADDIU     V0, R0, 3
	SW        R0, 94 (S0)
	SW        V1, 98 (S0)
	SW        V1, A0 (S0)
	BEQ       R0, R0, .oF0
	SW        V0, A4 (S0)
	.oBC
	LIF       F4, 91.0
	LIF       F30, -118.0
	ADDIU     V0, R0, FF8A
	SW        R0, 14 (SP)
	SWC1      F4, 10 (SP)
	SW        V1, 90 (S0)
	SW        R0, 94 (S0)
	SW        V0, 98 (S0)
	SW        V1, 9C (S0)
	SW        V0, A0 (S0)
	SW        S1, A4 (S0)
	.oF0
	SW        R0, A8 (S0)
	SW        R0, B0 (S0)
	BEQ       R0, R0, .o400
	SW        A0, 70 (S0)
	.o100
	LW        V0, A8 (S0)
	LW        V1, A4 (S0)
	ADDU      V0, V0, V1
	SW        V0, A8 (S0)
	SLTI      V0, V0, 2E
	BNE       V0, R0, .o124
	NOP
	ADDIU     V0, R0, 2D
	SW        V0, A8 (S0)
	.o124
	LWC1      F4, 90 (S0)
	CVT.S.W   F4, F4
	SWC1      F4, 10 (SP)
	LWC1      F4, 94 (S0)
	CVT.S.W   F4, F4
	SWC1      F4, 14 (SP)
	LWC1      F12, A8 (S0)
	CVT.S.W   F12, F12
	LIO       AT, 40C90FD0
	MTC1      AT, F26
	LWC1      F30, 98 (S0)
	CVT.S.W   F30, F30
	MUL.S     F12, F12, F26
	NOP
	LWC1      F28, 9C (S0)
	CVT.S.W   F28, F28
	LIF       F24, 360.0
	LWC1      F4, A0 (S0)
	CVT.S.W   F4, F4
	SWC1      F4, 18 (SP)
	JAL       {Func:SinRad}
	DIV.S     F12, F12, F24
	CVT.D.S   F0, F0
	LIF       F23, 1.875
	MTC1      R0, F22
	LWC1      F4, 10 (SP)
	SUB.D     F0, F22, F0
	CVT.D.S   F20, F4
	MUL.D     F20, F20, F0
	NOP
	LWC1      F12, A8 (S0)
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F26
	NOP
	JAL       {Func:SinRad}
	DIV.S     F12, F12, F24
	MUL.S     F0, F28, F0
	NOP
	LW        V0, A8 (S0)
	SLL       V0, V0, 1
	MTC1      V0, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F26
	NOP
	CVT.D.S   F0, F0
	ADD.D     F20, F20, F0
	DIV.S     F12, F12, F24
	CVT.S.D   F20, F20
	JAL       {Func:SinRad}
	SWC1      F20, 10 (SP)
	LWC1      F12, A8 (S0)
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F26
	NOP
	LIF       F2, 90.0
	NOP
	MUL.S     F0, F0, F2
	NOP
	LWC1      F4, 14 (SP)
	ADD.S     F4, F4, F0
	DIV.S     F12, F12, F24
	JAL       {Func:SinRad}
	SWC1      F4, 14 (SP)
	LWC1      F12, A8 (S0)
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F26
	NOP
	CVT.D.S   F0, F0
	SUB.D     F22, F22, F0
	CVT.D.S   F20, F30
	MUL.D     F20, F20, F22
	NOP
	JAL       {Func:SinRad}
	DIV.S     F12, F12, F24
	LWC1      F4, 18 (SP)
	MUL.S     F0, F4, F0
	NOP
	CVT.D.S   F0, F0
	ADD.D     F20, F20, F0
	BEQ       R0, R0, .o3F0
	ADDIU     V0, R0, 2D
	.o27C
	LW        V0, A8 (S0)
	LW        V1, A4 (S0)
	ADDU      V0, V0, V1
	SW        V0, A8 (S0)
	SLTI      V0, V0, 5B
	BNE       V0, R0, .o29C
	ADDIU     V0, R0, 5A
	SW        V0, A8 (S0)
	.o29C
	LWC1      F4, 90 (S0)
	CVT.S.W   F4, F4
	SWC1      F4, 10 (SP)
	LWC1      F4, 94 (S0)
	CVT.S.W   F4, F4
	SWC1      F4, 14 (SP)
	LWC1      F12, A8 (S0)
	CVT.S.W   F12, F12
	LIO       AT, 40C90FD0
	MTC1      AT, F26
	LWC1      F30, 98 (S0)
	CVT.S.W   F30, F30
	MUL.S     F12, F12, F26
	NOP
	LWC1      F28, 9C (S0)
	CVT.S.W   F28, F28
	LIF       F24, 360.0
	LWC1      F4, A0 (S0)
	CVT.S.W   F4, F4
	SWC1      F4, 18 (SP)
	JAL       {Func:SinRad}
	DIV.S     F12, F12, F24
	CVT.D.S   F0, F0
	LIF       F23, 1.875
	MTC1      R0, F22
	LWC1      F4, 10 (SP)
	SUB.D     F0, F22, F0
	CVT.D.S   F20, F4
	MUL.D     F20, F20, F0
	NOP
	LWC1      F12, A8 (S0)
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F26
	NOP
	JAL       {Func:SinRad}
	DIV.S     F12, F12, F24
	MUL.S     F0, F28, F0
	NOP
	LW        V0, A8 (S0)
	SLL       V0, V0, 1
	MTC1      V0, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F26
	NOP
	CVT.D.S   F0, F0
	ADD.D     F20, F20, F0
	DIV.S     F12, F12, F24
	CVT.S.D   F20, F20
	JAL       {Func:SinRad}
	SWC1      F20, 10 (SP)
	LWC1      F12, A8 (S0)
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F26
	NOP
	LIF       F2, 90.0
	NOP
	MUL.S     F0, F0, F2
	NOP
	LWC1      F4, 14 (SP)
	ADD.S     F4, F4, F0
	DIV.S     F12, F12, F24
	JAL       {Func:SinRad}
	SWC1      F4, 14 (SP)
	LWC1      F12, A8 (S0)
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F26
	NOP
	CVT.D.S   F0, F0
	SUB.D     F22, F22, F0
	CVT.D.S   F20, F30
	MUL.D     F20, F20, F22
	NOP
	JAL       {Func:SinRad}
	DIV.S     F12, F12, F24
	LWC1      F4, 18 (SP)
	MUL.S     F0, F4, F0
	NOP
	CVT.D.S   F0, F0
	ADD.D     F20, F20, F0
	ADDIU     V0, R0, 5A
	.o3F0
	LW        V1, A8 (S0)
	BNE       V1, V0, .o400
	CVT.S.D   F30, F20
	SW        S1, B0 (S0)
	.o400
	LWC1      F4, 10 (SP)
	TRUNC.W.S F4, F4
	SWC1      F4, 84 (S0)
	LWC1      F4, 14 (SP)
	TRUNC.W.S F4, F4
	SWC1      F4, 88 (S0)
	TRUNC.W.S F4, F30
	SWC1      F4, 8C (S0)
	LW        RA, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F30, 58 (SP)
	LDC1      F28, 50 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60

#new:IdleAnimations $IdleAnimations_802189B0
.Status:Normal    00410004
.Status:Stone     00410000
.Status:Sleep     00410029
.Status:Poison    00410004
.Status:Stop      00410000
.Status:Static    00410004
.Status:Paralyze  00410000
.Status:Dizzy     00410026
.Status:Fear      00410026
.Status:End

#new:IdleAnimations $IdleAnimations_802189FC
.Status:Normal    00410006
.Status:Stone     00410002
.Status:Sleep     0041002A
.Status:Poison    00410006
.Status:Stop      00410002
.Status:Static    00410006
.Status:Paralyze  00410002
.Status:Dizzy     00410027
.Status:Fear      00410027
.Status:End

#new:DefenseTable $DefenseTable_80218A48
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80218A54
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink     50`
.Status:Stop       75`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -2`
.Status:End

#new:SpriteTable $SpriteTable_80218B00
00020000 01000000 021800FF $IdleAnimations_802189B0 $DefenseTable_80218A48 00000000 00000000 FEF60000 00000000 
80800001 02002800 02F000FF 00000000 $DefenseTable_80218A48 00000000 00000000 FEF60000 00000000 

#new:Actor $Fuzzipede
% stats
[Index]        25b 
[Level]        43`b 
[MaxHP]        20`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80218A54 
% ai
[SpriteCount]   2`s 
[SpriteTable] $SpriteTable_80218B00 
[Script]      $Script_Init_80218B70 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  75`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         26`b  38`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Script $Script_Init_80218B70
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021C1A4 )
	Call     BindIdle    	( .Actor:Self $Script_Idle_80218D58 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802197FC )
	Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_80218C58 )
	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
	Call     SetActorPos 	( .Actor:Self 0000007D 00000021 FFFFFFF1 )
	Call     SetHomePos  	( .Actor:Self 0000007D 00000021 FFFFFFF1 )
	Call     HPBarToHome 	( .Actor:Self )
	Call     80253734 ( 00000001 )
	Return
	End

#new:Script $Script_NextTurn_80218C58
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	If  *Var[0]  ==  00000000 
	   Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
	   Call     UseCamPreset 	( 00000008 )
	   Call     CamTargetActor ( .Actor:Self )
	   Call     SetCamZoom  	( 000000C8 )
	   Call     SetCamOffsetZ 	( 0000000A )
	   Call     MoveCamOver 	( 0000001E )
	   Wait     0000001E 
	   Call     SayMessage  	( 0007009C .Actor:Self 00000001 00410024 00410004 ) % Hey, fella! You wanna piece o' this? You got it! I ...
	   Call     UseCamPreset 	( 00000002 )
	   Call     MoveCamOver 	( 0000001E )
	   Wait     0000001E 
	EndIf
	Return
	End

#new:Script $Script_Idle_80218D58
	Return
	End

#new:Script $Script_80218D68
	Call     SetHomePos  	( .Actor:Self 0000007D 00000021 FFFFFFF1 )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[7.0] )
	Call     SetActorAngle 	( .Actor:Self 000000B4 )
	Call     SetAnimation 	( .Actor:Self 00000001 0041000A )
	Call     SetGoalToHome 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub  *Var[0]  0000003C 
	Set  *Var[1]  00000000 
	ExecWait 8029C12C 
	Call     SetGoalToHome 	( .Actor:Self )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 00410004 )
	Call     SetActorAngle 	( .Actor:Self 00000000 )
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802189B0 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802197FC )
	Call     SetActorFlagBits 	( .Actor:Self 00000A00 .False )
	Call     SetTargetOffset 	( .Actor:Self 00000001 00000002 00000018 )
	Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFE FFFFFFF6 )
	Call     $Function_80218000 ( FFFFFFF6 00000014 0000000A 00000014 )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00800000 .False )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .True )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .True )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020000 .False )
	Call     HPBarToHome 	( .Actor:Self )
	Return
	End

#new:Script $Script_80218FC8
	Call     SetHomePos  	( .Actor:Self 0000003C 00000000 0000000F )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[7.0] )
	Call     SetActorAngle 	( .Actor:Self 000000B4 )
	Call     SetAnimation 	( .Actor:Self 00000001 0041000A )
	Call     SetGoalToHome 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	ExecWait 8029C12C 
	Call     SetActorAngle 	( .Actor:Self 00000000 )
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802189B0 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802197FC )
	Call     SetActorFlagBits 	( .Actor:Self 00000A00 .False )
	Call     SetTargetOffset 	( .Actor:Self 00000001 00000002 00000018 )
	Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFE FFFFFFF6 )
	Call     $Function_80218000 ( FFFFFFF6 00000014 0000000A 00000014 )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00800000 .True )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .False )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .False )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020000 .True )
	Call     HPBarToHome 	( .Actor:Self )
	Return
	End

#new:Script $Script_802191AC
	Call     SetHomePos  	( .Actor:Self 0000001E 00000073 FFFFFFE4 )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[7.0] )
	Call     SetActorAngle 	( .Actor:Self 000000B4 )
	Call     SetAnimation 	( .Actor:Self 00000001 0041000A )
	Set  *Var[0]  00000041 
	Set  *Var[1]  00000000 
	Set  *Var[2]  FFFFFFF1 
	ExecWait 8029C12C 
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
	Call     SetGoalToPos 	( .Actor:Self 0000007D 00000021 FFFFFFF1 )
	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
	Call     SetActorAngle 	( .Actor:Self 00000000 )
	Call     SetGoalToPos 	( .Actor:Self 00000082 00000064 FFFFFFE4 )
	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
	Call     SetGoalToPos 	( .Actor:Self 0000006E 0000006D FFFFFFE4 )
	Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	Call     SetGoalToPos 	( .Actor:Self 0000005A 00000075 FFFFFFE4 )
	Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	Call     SetGoalToPos 	( .Actor:Self 00000046 00000078 FFFFFFE4 )
	Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	Call     SetGoalToPos 	( .Actor:Self 00000032 0000007D FFFFFFE4 )
	Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	Call     SetGoalToPos 	( .Actor:Self 0000001E 00000082 FFFFFFE4 )
	Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	Thread
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Loop     0000000A 
	      AddF  *Var[1]  *Fixed[-1.5] 
	      Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Wait     00000001 
	   EndLoop
	EndThread
	Set  *Var[0]  00000000 
	Loop     0000000A 
	   Add  *Var[0]  00000012 
	   Call     SetActorRotation 	( .Actor:Self *Var[0] 00000000 00000000 )
	   Wait     00000001 
	EndLoop
	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802189FC )
	Call     SetAnimation 	( .Actor:Self 00000001 00410006 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80219ED4 )
	Call     SetActorFlagBits 	( .Actor:Self 00000800 .True )
	Call     SetTargetOffset 	( .Actor:Self 00000001 00000002 00000018 )
	Call     8027D4C8 ( FFFFFF81 00000001 00000002 00000008 )
	Call     $Function_80218000 ( FFFFFFF6 FFFFFFE7 0000000A FFFFFFE2 )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00800000 .True )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .False )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .False )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020000 .True )
	Call     HPBarToHome 	( .Actor:Self )
	Return
	End

#new:Script $Script_80219668
	Call     8027D32C ( FFFFFF81 )
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
	   Case  ==  00000001 
	      Call     SetActorVar 	( .Actor:Self 00000000 00000002 )
	   Case  ==  00000002 
	      Call     SetActorVar 	( .Actor:Self 00000000 00000003 )
	   Case  ==  00000003 
	      Call     SetActorVar 	( .Actor:Self 00000000 00000004 )
	   Case  ==  00000004 
	      Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	EndSwitch
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      ExecWait $Script_80218D68 
	   CaseOR  ==  00000001 
	   CaseOR  ==  00000002 
	   CaseOR  ==  00000004 
	      ExecWait $Script_802191AC 
	   EndCaseGroup
	   Case  ==  00000003 
	      ExecWait $Script_80218FC8 
	EndSwitch
	Return
	End

#new:Script $Script_HandleEvent_802197FC
	Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0041001B 
	      ExecWait DoNormalHit 
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0041001E 
	      SetConst  *Var[2]  0041001F 
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0041001E 
	      SetConst  *Var[2]  0041001F 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0041001F 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0041001B 
	      ExecWait 8029B998 
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0041001B 
	      ExecWait 8029B998 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0041001B 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:ShockHit
	      Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0041001B 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00410008 
	      ExecWait 8029BD70 
	      ExecWait $Script_80219668 
	   Case  ==  .Event:ShockDeath
	      Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0041001B 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0041001B 
	      ExecWait DoDeath 
	      Return
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00410004 
	      ExecWait DoImmune 
	   EndCaseGroup
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0041001B 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0041001B 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:RecoverStatus
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00410004 
	      ExecWait DoRecover 
	   Case  ==  .Event:SwapPartner
	      Call     SetAnimation 	( .Actor:Self 00000001 00410019 )
	      Call     UseCamPreset 	( 00000001 )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	      Call     UseCamPreset 	( 00000002 )
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_80219D68
	Call     GetLastDamage 	( .Actor:Self *Var[0] )
	If  *Var[0]  <=  00000000 
	   Return
	EndIf
	Call     8027D32C ( FFFFFF81 )
	ExecWait $Script_8021A2E8 
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802189B0 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802197FC )
	Call     SetActorFlagBits 	( .Actor:Self 00000A00 .False )
	Call     SetTargetOffset 	( .Actor:Self 00000001 00000002 00000018 )
	Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFE FFFFFFF6 )
	Call     $Function_80218000 ( FFFFFFF6 00000014 0000000A 00000014 )
	Call     GetStatusFlags ( .Actor:Self *Var[A] )
	If  *Var[A]  &  0035D000 
	   Call     SetActorVar 	( .Actor:Self 00000000 00000003 )
	   Call     HPBarToCurrent ( .Actor:Self )
	Else
	   ExecWait $Script_802191AC 
	   Wait     00000014 
	EndIf
	Return
	End

#new:Script $Script_HandleEvent_80219ED4
	Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   Case  ==  .Event:HitCombo
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0041001C 
	      ExecWait DoNormalHit 
	   Case  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0041001C 
	      ExecWait DoNormalHit 
	      ExecWait $Script_80219D68 
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00410020 
	      SetConst  *Var[2]  00410021 
	      ExecWait DoBurnHit 
	      ExecWait $Script_80219D68 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00410020 
	      SetConst  *Var[2]  00410021 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00410021 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:ShockHit
	      Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0041001B 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00410008 
	      ExecWait 8029BD70 
	      ExecWait $Script_80219668 
	   Case  ==  .Event:ShockDeath
	      Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0041001B 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0041001B 
	      ExecWait DoDeath 
	      Return
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	   CaseOR  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00410006 
	      ExecWait DoImmune 
	   EndCaseGroup
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0041001C 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0041001C 
	      ExecWait DoDeath 
	      Return
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021A2E8
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  0000003C 
	      Set  *Var[1]  00000000 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
	   Case  ==  00000003 
	   CaseOR  ==  00000001 
	   CaseOR  ==  00000002 
	   CaseOR  ==  00000004 
	      Call     SetActorFlagBits 	( .Actor:Self 00000A00 .False )
	      Call     SetAnimation 	( .Actor:Self 00000001 00410004 )
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 000000B4 )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.001953125] )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     GetStatusFlags ( .Actor:Self *Var[A] )
	      If  *Var[A]  &  00080000 
	         Set  *Var[1]  0000000B 
	      Else
	         Set  *Var[1]  0000001C 
	      EndIf
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	      Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
	      Wait     00000001 
	      Call     SetActorScale 	( .Actor:Self *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
	      Wait     00000001 
	      Thread
	         Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
	         Wait     00000001 
	         Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	      EndThread
	      Thread
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000E 00000000 )
	         Set  *Var[0]  000000B4 
	         Loop     00000008 
	            Sub  *Var[0]  00000016 
	            Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	            Wait     00000001 
	         EndLoop
	      EndThread
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.2001953] )
	      Add  *Var[0]  00000014 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	      Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	   EndCaseGroup
	EndSwitch
	Return
	End

#new:Script $Script_8021A6D8
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	ExecWait $Script_8021A2E8 
	Call     SetActorAngle 	( .Actor:Self 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 0041000A )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  00000032 
	Set  *Var[1]  00000000 
	ExecWait 8029C12C 
	Call     SetAnimation 	( .Actor:Self 00000001 00410012 )
	Wait     0000000A 
	Call     PlaySoundAtActor 	( .Actor:Self 000020DA )
	Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
	Call     CheckPlayerHit ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch  *Var[F] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     SetAnimation 	( .Actor:Self 00000001 00410005 )
	      Thread
	         Set  *Var[0]  00000000 
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000E 00000000 )
	         Loop     00000014 
	            Add  *Var[0]  00000009 
	            Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	            Wait     00000001 
	         EndLoop
	      EndThread
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     AddToGoalPos 	( .Actor:Self FFFFFFEC 00000000 00000005 )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] FFFFFFFB *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
	      If  *Var[F]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[F] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Wait     0000001E 
	      Call     8026F6EC ( FFFFFF81 )
	      Thread
	         Wait     00000005 
	         Call     SetAnimation 	( .Actor:Self 00000001 00410004 )
	      EndThread
	      Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	      Wait     00000014 
	      Call     UseCamPreset 	( 00000002 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      ExecWait $Script_80219668 
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	EndSwitch
	Call     SetAnimation 	( .Actor:Self 00000001 00410005 )
	Thread
	   Set  *Var[0]  00000000 
	   Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000E 00000000 )
	   Loop     00000014 
	      Add  *Var[0]  00000009 
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	      Wait     00000001 
	   EndLoop
	EndThread
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.4003906] )
	Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
	Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
	Wait     00000001 
	Call     SetActorScale 	( .Actor:Self *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
	Wait     00000001 
	Call     8026F6EC ( FFFFFF81 )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[F] 00000000 00000000 00000000 00000003 00000020 )
	Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
	Wait     00000001 
	Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	Switch  *Var[F] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00410004 )
	      Thread
	         Set  *Var[0]  000000B4 
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000E 00000000 )
	         Loop     0000000A 
	            Sub  *Var[0]  00000012 
	            Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	            Wait     00000001 
	         EndLoop
	      EndThread
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[0]  0000001E 
	      Set  *Var[1]  00000000 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	      Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      Add  *Var[0]  00000014 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	      Add  *Var[0]  0000000A 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
	      Wait     00000008 
	      ExecWait $Script_80219668 
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:IntTable $IntTable_8021AFD8
00000166 00000167 00000168 

#new:IntTable $IntTable_8021AFE4
00000049 0000004A 0000004B 

#new:IntTable $IntTable_8021AFF0
00000169 0000016A 0000016B 

#new:IntTable $IntTable_8021AFFC
0000004C 0000004D 0000004E 

#new:Script $Script_8021B008
	Label    00000000 
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[A] )
	Switch  *Var[A] 
	   Case  ==  00000000 
	   Case  ==  00000001 
	      Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
	      Set  *Var[2]  00000000 
	      Sub  *Var[3]  00000001 
	      Call     $Function_802182E4 ( *Var[4] *Var[5] )
	      Call     MakeItemEntity ( *Var[4] *Var[1] *Var[2] *Var[3] 00000001 00000000 )
	      Add  *Var[1]  0000001E 
	      Call     $Function_802180CC ( *Var[0] *Var[1] *Var[2] *Var[3] 00000014 *Fixed[1.0] )
	      Add  *Var[1]  00000014 
	      Call     $Function_802180CC ( *Var[0] *Var[1] *Var[2] *Var[3] 0000000A *Fixed[1.0] )
	      Add  *Var[1]  0000000A 
	      Call     $Function_802180CC ( *Var[0] *Var[1] *Var[2] *Var[3] 00000005 *Fixed[1.0] )
	      Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
	   Case  ==  00000002 
	      Call     ShowMessageBox ( *Var[5] 0000003C )
	      Sub  *Var[1]  00000096 
	      Call     $Function_802180CC ( *Var[0] *Var[1] *Var[2] *Var[3] 0000001E *Fixed[1.0] )
	      Call     RemoveItemEntity 	( *Var[0] )
	      Call     SetActorVar 	( .Actor:Self 00000001 00000003 )
	      Return
	EndSwitch
	Wait     00000001 
	Goto     00000000 
	Return
	End

#new:Script $Script_8021B22C
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	ExecWait $Script_8021A2E8 
	Call     SetActorAngle 	( .Actor:Self 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 0041000A )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  00000050 
	Set  *Var[1]  00000000 
	ExecWait 8029C12C 
	Call     SetAnimation 	( .Actor:Self 00000001 00410012 )
	Wait     0000001E 
	Call     PlaySoundAtActor 	( .Actor:Self 000020DB )
	Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
	Call     CheckPlayerHit ( .Actor:Self *Var[F] 00000000 00000000 00000001 00000010 )
	Switch  *Var[F] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Call     SetAnimation 	( .Actor:Self 00000001 00410011 )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.001953125] )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  0000001E 
	      Set  *Var[1]  00000000 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	      If  *Var[F]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[F] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Call     8026F6EC ( FFFFFF81 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00410004 )
	      Thread
	         Set  *Var[0]  0000005A 
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000E 00000000 )
	         Loop     00000006 
	            Add  *Var[0]  0000000F 
	            Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	            Wait     00000001 
	         EndLoop
	      EndThread
	      Sub  *Var[0]  0000001E 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.3007812] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
	      Thread
	         Set  *Var[0]  000000B4 
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000E 00000000 )
	         Loop     00000007 
	            Add  *Var[0]  00000019 
	            Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	            Wait     00000001 
	         EndLoop
	      EndThread
	      Sub  *Var[0]  00000014 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000007 00000000 00000001 00000000 )
	      Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      Wait     00000014 
	      Call     UseCamPreset 	( 00000002 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      ExecWait $Script_80219668 
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetAnimation 	( .Actor:Self 00000001 00410011 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.001953125] )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[2]  00000001 
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
	Wait     00000001 
	Call     SetActorScale 	( .Actor:Self *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
	Wait     00000001 
	Call     8026F6EC ( FFFFFF81 )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[F] 00000000 00000000 00000000 00000003 00000020 )
	Thread
	   Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
	   Wait     00000001 
	   Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	EndThread
	Switch  *Var[F] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Set  *Flag[00]  00000000 
	      Call     GetBattleFlags ( *Var[0] )
	      If  *Var[0]  !&  80000000 
	         Set  *Flag[00]  00000001 
	      EndIf
	      Call     GetLastDamage 	( .Actor:Player *Var[0] )
	      If  *Var[0]  <=  00000000 
	         Set  *Flag[00]  00000000 
	      EndIf
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  &  00080000 
	         Set  *Flag[00]  00000000 
	      EndIf
	      Call     GetStatusFlags ( .Actor:Player *Var[0] )
	      If  *Var[0]  &  40100000 
	         Set  *Flag[00]  00000000 
	      EndIf
	      If  *Flag[00]  ==  00000001 
	         Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
	         Exec     $Script_8021B008 
	         Call     SetAnimation 	( .Actor:Self 00000001 00410004 )
	         Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Add  *Var[0]  00000028 
	         Set  *Var[1]  00000000 
	         Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	         Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	         Add  *Var[0]  0000001E 
	         Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	         Add  *Var[0]  00000014 
	         Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
	         Add  *Var[0]  0000000A 
	         Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
	         Call     SetAnimation 	( .Actor:Self 00000001 00410004 )
	         Wait     00000008 
	         Label    00000000 
	         Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	         If  *Var[0]  !=  00000000 
	            Wait     00000001 
	            Goto     00000000 
	         EndIf
	         Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Loop     00000003 
	            Sub  *Var[0]  0000000A 
	            Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	            Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
	         EndLoop
	         Wait     0000000A 
	         Call     SetActorVar 	( .Actor:Self 00000001 00000002 )
	         Call     PlayEffect  	( {FX:Firework:White} *Var[0] *Var[1] *Var[2] *Fixed[1.0] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	         Call     $Function_802184A0 ( 000000C8 0000000A )
	         Call     PlaySoundAtActor 	( .Actor:Self 000020DC )
	         Call     SetAnimation 	( .Actor:Self 00000001 00410013 )
	         Wait     00000014 
	         Call     SetAnimation 	( .Actor:Self 00000001 00410004 )
	      Else
	         Call     SetAnimation 	( .Actor:Self 00000001 00410004 )
	         Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Add  *Var[0]  00000028 
	         Set  *Var[1]  00000000 
	         Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	         Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	         Add  *Var[0]  0000001E 
	         Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	         Add  *Var[0]  00000014 
	         Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
	         Add  *Var[0]  0000000A 
	         Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
	         Call     SetAnimation 	( .Actor:Self 00000001 00410004 )
	         Wait     00000008 
	         Wait     0000000A 
	      EndIf
	      Call     UseCamPreset 	( 00000002 )
	      ExecWait $Script_80219668 
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021C004
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     UseCamPreset 	( 0000000E )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 00000014 )
	Wait     00000014 
	Call     SetAnimation 	( .Actor:Self 00000001 00410012 )
	Wait     0000001E 
	Call     SetAnimation 	( .Actor:Self 00000001 00410004 )
	Thread
	   Wait     00000005 
	   Call     PlaySoundAtActor 	( .Actor:Self 0000206D )
	   Call     PlaySoundAtActor 	( .Actor:Self 00000214 )
	   Wait     0000001E 
	   Call     PlaySoundAtActor 	( .Actor:Self 0000025C )
	EndThread
	Thread
	   Call     8026BF48 ( 00000001 )
	   Call     HealActor   	( .Actor:Self 00000004 00000000 )
	   Call     8026BF48 ( 00000000 )
	EndThread
	Call     8027114C ( )
	Call     UseCamPreset 	( 00000002 )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_8021C1A4
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000003 
	      Call     GetActorHP  	( .Actor:Self *Var[0] )
	      Call     GetEnemyMaxHP 	( .Actor:Self *Var[1] )
	      Mul  *Var[0]  00000064 
	      Div  *Var[0]  *Var[1] 
	      If  *Var[0]  <=  00000023 
	         Call     RandInt     	( 000003E8 *Var[0] )
	         If  *Var[0]  <  000001F4 
	            ExecWait $Script_8021C004 
	            Return
	         EndIf
	      EndIf
	   EndCaseGroup
	EndSwitch
	Call     RandInt     	( 000003E8 *Var[0] )
	If  *Var[0]  <  000001F4 
	   ExecWait $Script_8021A6D8 
	Else
	   Call     $Function_802184F8 ( *Var[0] )
	   If  *Var[0]  ==  00000000 
	      ExecWait $Script_8021B22C 
	   Else
	      ExecWait $Script_8021A6D8 
	   EndIf
	EndIf
	Return
	End

PADDING: 8021C328 to 8021C330 (005725C8 to 005725D0)
00000000 00000000 

% Origin: HEURISTIC
#new:Script $Script_8021C330
	Set  *Var[A]  *Var[0] 
	Label    00000000 
	Call     $Function_80218560 ( 00000000 )
	Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
	Call     RotateModel 	( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
	Wait     00000001 
	Loop     
	   Call     $Function_80218560 ( 00000001 )
	   Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
	   Call     RotateModel 	( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
	   Wait     00000001 
	   If  *Var[B]  ==  00000001 
	      BreakLoop
	   EndIf
	EndLoop
	Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
	Call     RotateModel 	( *Var[A] FFFFFFF9 00000000 00000000 00000001 )
	Wait     00000005 
	Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
	Call     RotateModel 	( *Var[A] FFFFFFE5 00000000 00000000 00000001 )
	Wait     00000002 
	Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
	Call     RotateModel 	( *Var[A] FFFFFFFB 00000000 00000000 00000001 )
	Wait     00000003 
	Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
	Call     RotateModel 	( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
	Wait     00000005 
	Loop     
	   Call     $Function_80218560 ( 00000002 )
	   Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
	   Call     RotateModel 	( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
	   Wait     00000001 
	   If  *Var[B]  ==  00000002 
	      BreakLoop
	   EndIf
	EndLoop
	Call     RandInt     	( 00000050 *Var[B] )
	Add  *Var[B]  0000001E 
	Loop     *Var[B] 
	   Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
	   Call     RotateModel 	( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
	   Wait     00000001 
	EndLoop
	Call     RandInt     	( 00000005 *Var[0] )
	If  *Var[0]  !=  00000000 
	   Goto     00000000 
	EndIf
	Call     $Function_80218560 ( 00000003 )
	Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
	Call     RotateModel 	( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
	Wait     00000001 
	Loop     
	   Call     $Function_80218560 ( 00000001 )
	   Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
	   Call     RotateModel 	( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
	   Wait     00000001 
	   If  *Var[B]  ==  00000001 
	      BreakLoop
	   EndIf
	EndLoop
	Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
	Call     RotateModel 	( *Var[A] FFFFFFF9 00000000 00000000 00000001 )
	Wait     00000005 
	Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
	Call     RotateModel 	( *Var[A] FFFFFFE5 00000000 00000000 00000001 )
	Wait     00000002 
	Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
	Call     RotateModel 	( *Var[A] FFFFFFFB 00000000 00000000 00000001 )
	Wait     00000003 
	Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
	Call     RotateModel 	( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
	Wait     00000005 
	Loop     
	   Call     $Function_80218560 ( 00000002 )
	   Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
	   Call     RotateModel 	( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
	   Wait     00000001 
	   If  *Var[B]  ==  00000002 
	      BreakLoop
	   EndIf
	EndLoop
	Call     RandInt     	( 00000050 *Var[B] )
	Add  *Var[B]  0000001E 
	Loop     *Var[B] 
	   Call     TranslateModel ( *Var[A] *Var[0] *Var[1] *Var[2] )
	   Call     RotateModel 	( *Var[A] FFFFFFEC 00000000 00000000 00000001 )
	   Wait     00000001 
	EndLoop
	Goto     00000000 
	Return
	End

% Origin: HEURISTIC
#new:Script $Script_8021C9C0
	Set  *Var[A]  *Var[0] 
	Loop     
	   Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000001 FFFFFFFF 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000003 FFFFFFFD 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000003 FFFFFFFE 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000002 FFFFFFFE 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000002 FFFFFFFF 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000001 00000000 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000001 00000001 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000000 00000001 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] FFFFFFFF 00000001 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] FFFFFFFF 00000000 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
	   Wait     00000002 
	EndLoop
	Return
	End

% Origin: HEURISTIC
#new:IntTable $IntTable_8021CD64
00000000 FFFFFFFF FFFFFFFF FFFFFFFE FFFFFFFE FFFFFFFD FFFFFFFB FFFFFFF8 
FFFFFFF8 FFFFFFF9 FFFFFFFA FFFFFFFC FFFFFFFE FFFFFFFF 00000000 000000FF 

% Origin: HEURISTIC
#new:Script $Script_8021CDA4
	Set  *Var[A]  *Var[0] 
	Set  *Var[B]  *Var[1] 
	Set  *Var[5]  00000005 
	UseIntBuffer $IntTable_8021CD64 
	Label    00000000 
	Get1Int  *Var[1] 
	If  *Var[1]  ==  000000FF 
	   UseIntBuffer $IntTable_8021CD64 
	   Get1Int  *Var[1] 
	EndIf
	Set  *Var[0]  *Var[5] 
	Call     TranslateModel ( *Var[A] *Var[0] *Var[1] 00000000 )
	Wait     00000001 
	Add  *Var[5]  00000001 
	Set  *Var[C]  *Var[B] 
	Sub  *Var[C]  00000014 
	If  *Var[5]  >  *Var[C] 
	   Goto     00000001 
	EndIf
	Set  *Var[0]  *Var[5] 
	Call     TranslateModel ( *Var[A] *Var[0] *Var[1] 00000000 )
	Wait     00000001 
	Add  *Var[5]  00000001 
	Set  *Var[C]  *Var[B] 
	Sub  *Var[C]  00000014 
	If  *Var[5]  >  *Var[C] 
	   Goto     00000001 
	EndIf
	Goto     00000000 
	Label    00000001 
	Set  *Var[2]  00000000 
	Loop     00000014 
	   Add  *Var[5]  00000001 
	   Sub  *Var[1]  00000002 
	   Set  *Var[0]  *Var[5] 
	   Call     TranslateModel ( *Var[A] *Var[0] *Var[1] 00000000 )
	   Wait     00000001 
	EndLoop
	Sub  *Var[5]  00000118 
	Set  *Var[1]  00000000 
	Goto     00000000 
	Return
	End

#new:Script $Script_8021D010
	Set  *Var[A]  *Var[0] 
	Loop     
	   Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000000 FFFFFFFF 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000000 FFFFFFFF 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000000 FFFFFFFF 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000000 FFFFFFFF 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000000 FFFFFFFE 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000000 FFFFFFFE 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000000 FFFFFFFD 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000000 FFFFFFFD 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000000 FFFFFFFD 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000000 FFFFFFFE 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000000 FFFFFFFE 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000000 FFFFFFFF 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000000 00000001 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000000 00000001 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000000 00000001 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000000 00000001 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
	   Wait     00000002 
	   Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
	   Wait     00000002 
	EndLoop
	Return
	End

#new:Script $Script_BeforeBattle_8021D3B4
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Thread
	   Set  *Var[0]  00000013 
	   Exec     $Script_8021D010 
	   Wait     00000004 
	   Set  *Var[0]  00000014 
	   Exec     $Script_8021D010 
	   Wait     00000004 
	   Set  *Var[0]  00000015 
	   Exec     $Script_8021D010 
	   Wait     00000004 
	   Set  *Var[0]  00000016 
	   Exec     $Script_8021D010 
	EndThread
	Thread
	   Set  *Var[0]  0000000E 
	   Exec     $Script_8021D010 
	   Wait     00000004 
	   Set  *Var[0]  0000000F 
	   Exec     $Script_8021D010 
	   Wait     00000004 
	   Set  *Var[0]  00000010 
	   Exec     $Script_8021D010 
	   Wait     00000004 
	   Set  *Var[0]  00000011 
	   Exec     $Script_8021D010 
	   Wait     00000004 
	   Set  *Var[0]  00000012 
	   Exec     $Script_8021D010 
	EndThread
	Set  *Var[0]  0000000B 
	Exec     $Script_8021D010 
	Set  *Var[0]  0000000C 
	Exec     $Script_8021D010 
	Return
	End

#new:Script $Script_AfterBattle_8021D598
	Return
	End

#new:ForegroundModelList $ForegroundModelList_8021D5A8
00000009 00000010 00000000 

#new:Stage $Stage_8021D5B4
$ASCII_8021D660  % kgr_tex
$ASCII_8021D650  % kgr_bt01_shape
$ASCII_8021D640  % kgr_bt01_hit
$Script_BeforeBattle_8021D3B4 
$Script_AfterBattle_8021D598 
00000000 
$ForegroundModelList_8021D5A8 
00000000 
00000000 
00000000 

PADDING: 8021D5DC to 8021D5E0 (0057387C to 00573880)
00000000 

#new:Formation $Formation_00
$Fuzzipede 00000002 0000000A 00000000 00000000 00000000 00000000 

#new:FormationTable $FormationTable
$SJIS_8021D668 00000001 $Formation_00 $Stage_8021D5B4 00000000 
00000000 00000000 00000000 00000000 00000000 % unused

#new:StageTable $StageTable
$ASCII_8021D670 $Stage_8021D5B4 
00000000 00000000 

PADDING: 8021D634 to 8021D640 (005738D4 to 005738E0)
00000000 00000000 00000000 

#new:ASCII $ASCII_8021D640
kgr_bt01_hit

#new:ASCII $ASCII_8021D650
kgr_bt01_shape

#new:ASCII $ASCII_8021D660
kgr_tex

#new:SJIS $SJIS_8021D668
% kemushi
83508380 83560000 

#new:ASCII $ASCII_8021D670
kgr_01

PADDING: 8021D678 to 8021D680 (00573918 to 00573920)
00000000 00000000 

