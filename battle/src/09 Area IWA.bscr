% Script File: 09 Area IWA.bscr
% Decoded from: 4D01F0 to 4DA5E0 (09 Area IWA)

#new:Function $Function_80218000
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	DADDU     S0, A0, R0
	SW        RA, 14 (SP)
	LW        V0, C (S0)
	JAL       {Func:GetVariable}
	LW        A1, 0 (V0)
	LW        A0, 148 (S0)
	JAL       {Func:GetActor}
	DADDU     S0, V0, R0
	BNE       S0, R0, .o40
	NOP
	LW        V1, 8 (V0)
	ADDIU     V0, R0, 4
	BEQ       R0, R0, .o48
	SB        V0, 1D (V1)
	.o40
	LW        V0, 8 (V0)
	SB        R0, 1D (V0)
	.o48
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18

#new:Function $Function_8021805C
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	DADDU     A0, S0, R0
	JAL       80028F08
	DADDU     A1, V0, R0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20

PADDING: 802180B4 to 802180C0 (004D02A4 to 004D02B0)
00000000 00000000 00000000 

#new:Function $Function_802180C0
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	DADDU     A0, S0, R0
	JAL       80028F08
	DADDU     A1, V0, R0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20

PADDING: 80218118 to 80218120 (004D0308 to 004D0310)
00000000 00000000 

#new:Function $Function_80218120
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	DADDU     S0, A0, R0
	LIO       A1, *WhackaHitCount
	DADDU     A0, R0, R0
	SW        RA, 14 (SP)
	JAL       {Func:GetVariable}
	SW        R0, 84 (S0)
	SLTI      V0, V0, 8
	BNE       V0, R0, .o34
	ADDIU     V0, R0, 1
	SW        V0, 84 (S0)
	.o34
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18

PADDING: 80218168 to 80218170 (004D0358 to 004D0360)
00000000 00000000 

#new:Function $Function_80218170
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	DADDU     S0, A0, R0
	LIO       A1, *WhackaHitCount
	DADDU     A0, R0, R0
	SW        RA, 14 (SP)
	JAL       {Func:GetVariable}
	SW        R0, 84 (S0)
	SLTI      V0, V0, 8
	BNE       V0, R0, .o34
	ADDIU     V0, R0, 1
	SW        V0, 84 (S0)
	.o34
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18

PADDING: 802181B8 to 802181C0 (004D03A8 to 004D03B0)
00000000 00000000 

% Origin: HINT
#new:Function $Function_802181C0
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	DADDU     S0, A0, R0
	LIO       A1, *WhackaHitCount
	DADDU     A0, R0, R0
	SW        RA, 14 (SP)
	JAL       {Func:GetVariable}
	SW        R0, 84 (S0)
	SLTI      V0, V0, 8
	BNE       V0, R0, .o34
	ADDIU     V0, R0, 1
	SW        V0, 84 (S0)
	.o34
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18

PADDING: 80218208 to 80218210 (004D03F8 to 004D0400)
00000000 00000000 

#new:Formation $Formation_00
$Cleft 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_01
$Cleft 00000001 0000000A 00000000 00000000 00000000 00000000 
$Cleft 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_02
$Cleft 00000000 0000000A 00000000 00000000 00000000 00000000 
$Cleft 00000001 00000009 00000000 00000000 00000000 00000000 
$Cleft 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_03
$Cleft 00000001 0000000A 00000000 00000000 00000000 00000000 
$MontyMole 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_04
$Cleft 00000000 0000000A 00000000 00000000 00000000 00000000 
$MontyMole 00000001 00000009 00000000 00000000 00000000 00000000 
$MontyMole 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_05
$MontyMole 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_06
$MontyMole 00000001 0000000A 00000000 00000000 00000000 00000000 
$MontyMole 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_07
$MontyMole 00000000 0000000A 00000000 00000000 00000000 00000000 
$MontyMole 00000001 00000009 00000000 00000000 00000000 00000000 
$MontyMole 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_08
$MontyMole 00000000 0000000A 00000000 00000000 00000000 00000000 
$MontyMole 00000001 00000009 00000000 00000000 00000000 00000000 
$MontyMole 00000002 00000008 00000000 00000000 00000000 00000000 
$MontyMole 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_09
$MontyMole 00000001 0000000A 00000000 00000000 00000000 00000000 
$Cleft 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0A
$MontyMole 00000000 0000000A 00000000 00000000 00000000 00000000 
$MontyMole 00000001 00000009 00000000 00000000 00000000 00000000 
$Cleft 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0B
$MontyMole 00000000 0000000A 00000000 00000000 00000000 00000000 
$Cleft 00000001 00000009 00000000 00000000 00000000 00000000 
$MontyMole 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Vector3D $Vector3D_8021853C
90` 70` 0`

#new:Formation $Formation_0C
$Buzzar $Vector3D_8021853C 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0D
$Cleft 00000000 0000000A 00000000 00000000 00000000 00000000 
$MontyMole 00000001 00000009 00000000 00000000 00000000 00000000 
$WhackaA 00000002 00000008 00000000 00000000 00000000 00000000 

#new:FormationTable $FormationTable
$SJIS_80222330 00000001 $Formation_00 $Stage_802208B0 00000000 
$SJIS_80222320 00000002 $Formation_01 $Stage_802208B0 00000000 
$SJIS_80222310 00000003 $Formation_02 $Stage_802208B0 00000000 % unused
$SJIS_802222F8 00000002 $Formation_03 $Stage_802208B0 00000000 
$SJIS_802222DC 00000003 $Formation_04 $Stage_802208B0 00000000 
$SJIS_802222D0 00000001 $Formation_05 $Stage_802208B0 00000000 
$SJIS_802222C0 00000002 $Formation_06 $Stage_802208B0 00000000 
$SJIS_802222B0 00000003 $Formation_07 $Stage_802208B0 00000000 
$SJIS_802222A0 00000004 $Formation_08 $Stage_802208B0 00000000 % unused
$SJIS_80222288 00000002 $Formation_09 $Stage_802208B0 00000000 
$SJIS_8022226C 00000003 $Formation_0A $Stage_802208B0 00000000 % unused
$SJIS_80222248 00000003 $Formation_0B $Stage_802208B0 00000000 % unused
$SJIS_8022223C 00000001 $Formation_0C $Stage_802215CC 00000000 
$SJIS_80222230 00000003 $Formation_0D $Stage_802215CC 00000000 % unused
00000000 00000000 00000000 00000000 00000000 % unused

#new:StageTable $StageTable
$ASCII_8022234C $Stage_802208B0 
$ASCII_80222344 $Stage_80221560 
$ASCII_8022233C $Stage_802215CC 
00000000 00000000 

PADDING: 80218704 to 80218710 (004D08F4 to 004D0900)
00000000 00000000 00000000 

#new:DefenseTable $DefenseTable_80218710
.Element:Normal 00000002
.Element:Fire   00000063
.Element:Magic  00000000
.Element:End

#new:DefenseTable $DefenseTable_8021872C
.Element:Normal 00000000
.Element:Fire   00000063
.Element:End

#new:StatusTable $StatusTable_80218740
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      40`
.Status:Poison     50`
.Status:Frozen    100`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   50`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_802187EC
00800000 01000000 001600FF $IdleAnimations_80218838 $DefenseTable_80218710 00000010 00000000 00F60000 00000000 

#new:Actor $Cleft
% stats
[Index]        11b 
[Level]        10`b 
[MaxHP]         2`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80218740 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_802187EC 
[Script]      $Script_Init_802188D0 
% move effectiveness
[Escape]       80`b 
[Item]         40`b 
[AirLift]      40`b 
[Hurricane]    40`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  95`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         44`b  36`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_80218838
.Status:Normal    00300002
.Status:Stone     00300000
.Status:Sleep     0030000C
.Status:Poison    00300002
.Status:Stop      00300000
.Status:Static    00300002
.Status:Paralyze  00300000
.Status:Dizzy     0030000E
.Status:Fear      0030000E
.Status:End

#new:IdleAnimations $IdleAnimations_80218884
.Status:Normal    00300005
.Status:Stone     00300001
.Status:Sleep     0030000D
.Status:Poison    00300005
.Status:Stop      00300001
.Status:Static    00300005
.Status:Paralyze  00300001
.Status:Dizzy     0030000F
.Status:Fear      0030000F
.Status:End

#new:Script $Script_Init_802188D0
	Call     BindIdle    	( .Actor:Self $Script_Idle_80218934 )
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021A3EC )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80218C3C )
	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	Return
	End

#new:Script $Script_Idle_80218934
	Return
	End

#new:Script $Script_80218944
	Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
	Call     SetActorVar 	( .Actor:Self 00000001 00000002 )
	Call     SetAnimation 	( .Actor:Self 00000001 00300007 )
	Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
	Thread
	   Set  *Var[0]  00000000 
	   Loop     00000005 
	      Add  *Var[0]  FFFFFFDC 
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	      Wait     00000001 
	   EndLoop
	EndThread
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.3007812] )
	Sub  *Var[1]  00000006 
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
	Call     $Function_8021805C ( 000000C8 0000000A )
	Thread
	   Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[1.0] )
	EndThread
	Call     PlayEffect  	( {FX:SmokeImpact:Large} *Var[0] *Var[1] *Var[2] 00000028 00000008 *Fixed[0.0] 00000014 00000000 00000000 00000000 00000000 00000000 )
	Call     SetActorPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
	Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 00300003 )
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80218884 )
	Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021872C )
	Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 0000000F )
	Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFF9 )
	Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .False )
	Call     $Function_80218000 ( 00000000 )
	Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
	Return
	End

#new:Script $Script_HandleEvent_80218C3C
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      Call     GetLastElement ( *Var[0] )
	      Switch  *Var[0] 
	         Case  &  00000200 
	            ExecWait $Script_80218944 
	         Default
	            Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	            If  *Var[0]  ==  00000001 
	               SetConst  *Var[1]  00300009 
	            Else
	               SetConst  *Var[1]  00300008 
	            EndIf
	            SetConst  *Var[0]  00000001 
	            ExecWait DoNormalHit 
	      EndSwitch
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      Call     GetLastElement ( *Var[0] )
	      Switch  *Var[0] 
	         Case  &  00000200 
	            ExecWait $Script_80218944 
	         Default
	            Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000200 .True )
	            Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	            If  *Var[0]  ==  00000001 
	               SetConst  *Var[0]  00000001 
	               SetConst  *Var[1]  00300009 
	               SetConst  *Var[2]  FFFFFFFF 
	               ExecWait DoBurnHit 
	            Else
	               SetConst  *Var[0]  00000001 
	               SetConst  *Var[1]  00300008 
	               SetConst  *Var[2]  FFFFFFFF 
	               ExecWait DoBurnHit 
	            EndIf
	            Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000200 .False )
	      EndSwitch
	   Case  ==  .Event:BurnDeath
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      If  *Var[0]  ==  00000001 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00300009 
	         SetConst  *Var[2]  FFFFFFFF 
	         ExecWait DoBurnHit 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00300009 
	         ExecWait DoDeath 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00300008 
	         SetConst  *Var[2]  FFFFFFFF 
	         ExecWait DoBurnHit 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00300008 
	         ExecWait DoDeath 
	      EndIf
	      Return
	   Case  ==  .Event:MultibounceHit
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      If  *Var[0]  ==  00000001 
	         SetConst  *Var[1]  00300009 
	      Else
	         SetConst  *Var[1]  00300008 
	      EndIf
	      SetConst  *Var[0]  00000001 
	      ExecWait 8029B998 
	   Case  ==  .Event:MultibounceDeath
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      If  *Var[0]  ==  00000001 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00300009 
	         ExecWait 8029B998 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00300009 
	         ExecWait DoDeath 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00300008 
	         ExecWait 8029B998 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00300008 
	         ExecWait DoDeath 
	      EndIf
	      Return
	   Case  ==  .Event:ShockHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00300008 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00300008 
	      ExecWait 8029BD70 
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00300007 
	      ExecWait DoReturnHome 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	   Case  ==  .Event:ShockDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00300008 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00300008 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:StarBeam
	   Case  ==  .Event:SpikeTaunt
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  !&  0035D000 
	         Call     SetAnimation 	( .Actor:Self 00000001 00300018 )
	      EndIf
	      Wait     0000000A 
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     GetStatusFlags ( .Actor:Self *Var[3] )
	      If  *Var[3]  &  00080000 
	         Add  *Var[0]  FFFFFFFD 
	         Add  *Var[1]  0000000A 
	      Else
	         Add  *Var[0]  FFFFFFF8 
	         Add  *Var[1]  0000001B 
	      EndIf
	      Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	      Wait     00000014 
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	   CaseOR  ==  .Event:AirLiftFailed
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      If  *Var[0]  ==  00000001 
	         SetConst  *Var[1]  00300003 
	      Else
	         SetConst  *Var[1]  00300002 
	      EndIf
	      SetConst  *Var[0]  00000001 
	      ExecWait DoImmune 
	   EndCaseGroup
	   Case  ==  .Event:Death
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      If  *Var[0]  ==  00000001 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00300009 
	         ExecWait DoNormalHit 
	         Wait     0000000A 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00300009 
	         ExecWait DoDeath 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00300008 
	         ExecWait DoNormalHit 
	         Wait     0000000A 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00300008 
	         ExecWait DoDeath 
	      EndIf
	      Return
	   Case  ==  .Event:RecoverStatus
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      If  *Var[0]  ==  00000000 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00300002 
	         ExecWait DoRecover 
	      EndIf
	   Case  ==  .Event:ScareAway
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      If  *Var[0]  ==  00000001 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00300003 
	         ExecWait DoImmune 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00300007 
	         SetConst  *Var[2]  00300008 
	         ExecWait DoScareAway 
	         Return
	      EndIf
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0030000F 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      If  *Var[0]  ==  00000001 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  0030000F 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00300008 
	      EndIf
	      ExecWait DoBlowAway 
	      Return
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_802197AC
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[3.0] )
	Call     SetAnimation 	( .Actor:Self 00000001 00300003 )
	Wait     00000014 
	Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
	Call     SetAnimation 	( .Actor:Self 00000001 00300005 )
	Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	If  *Var[0]  >  00000000 
	   Sub  *Var[0]  00000001 
	   Call     SetActorVar 	( .Actor:Self 00000001 *Var[0] )
	Else
	   Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
	   Call     SetAnimation 	( .Actor:Self 00000001 00300003 )
	   Thread
	      Wait     00000003 
	      Loop     00000005 
	         Add  *Var[0]  00000024 
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	         Wait     00000001 
	      EndLoop
	   EndThread
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Sub  *Var[1]  00000006 
	   Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.3007812] )
	   Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	   Call     $Function_8021805C ( 000000C8 0000000A )
	   Thread
	      Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[1.0] )
	   EndThread
	   Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	   Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	   Call     SetActorPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
	   Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	   Call     SetAnimation 	( .Actor:Self 00000001 00300002 )
	   Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80218838 )
	   Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80218710 )
	   Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000016 )
	   Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFF6 )
	   Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .True )
	   Wait     00000001 
	   Call     $Function_80218000 ( 00000001 )
	   Call     SetActorFlagBits 	( .Actor:Self 00000400 .False )
	EndIf
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_80219BA0
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     MoveCamOver 	( 0000001E )
	Thread
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
	   Wait     0000000A 
	   Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
	   Wait     00000005 
	   Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
	EndThread
	Call     SetAnimation 	( .Actor:Self 00000001 00300010 )
	Wait     0000000A 
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetAnimation 	( .Actor:Self 00000001 00300011 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     AddToGoalPos 	( .Actor:Self 00000032 00000000 FFFFFFFB )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Call     SetAnimation 	( .Actor:Self 00000001 00300000 )
	Wait     00000008 
	Call     PlaySoundAtActor 	( .Actor:Self 000020D1 )
	Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000002 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      If  *Var[A]  ==  00000005 
	         Thread
	            Wait     0000000A 
	            Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	         EndThread
	      EndIf
	      Call     SetAnimation 	( .Actor:Self 00000001 00300011 )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000064 
	      Set  *Var[1]  00000000 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 0000002D )
	      Call     SetAnimation 	( .Actor:Self 00000001 00300008 )
	      Wait     0000000F 
	      Wait     00000008 
	      Call     8026F6EC ( FFFFFF81 )
	      Call     UseCamPreset 	( 00000002 )
	      Call     8027D7F0 ( )
	      Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 00000000 )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     SetAnimation 	( .Actor:Self 00000001 00300007 )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Call     SetAnimation 	( .Actor:Self 00000001 00300002 )
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetAnimation 	( .Actor:Self 00000001 00300011 )
	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  00000014 
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Call     8026F6EC ( FFFFFF81 )
	Wait     00000002 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000002 00000020 )
	Call     SetAnimation 	( .Actor:Self 00000001 00300002 )
	Call     UseCamPreset 	( 00000002 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[0]  0000000F 
	      Set  *Var[1]  00000000 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.4003906] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00300002 )
	      Wait     00000005 
	      Call     8027D7F0 ( )
	      Call     SetAnimation 	( .Actor:Self 00000001 00300007 )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Call     SetAnimation 	( .Actor:Self 00000001 00300002 )
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_8021A3EC
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	If  *Var[0]  ==  00000001 
	   ExecWait $Script_802197AC 
	Else
	   ExecWait $Script_80219BA0 
	EndIf
	Return
	End

PADDING: 8021A44C to 8021A450 (004D263C to 004D2640)
00000000 

#new:DefenseTable $DefenseTable_8021A450
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021A45C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      90`
.Status:Poison     80`
.Status:Frozen    100`
.Status:Dizzy      90`
.Status:Fear        0`
.Status:Static     10`
.Status:Paralyze  100`
.Status:Shrink     90`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021A508
00020000 01000000 FE1000FF $IdleAnimations_8021A59C $DefenseTable_8021A450 00000000 00000000 00F90000 00000000 
80800001 020000F1 FE0C00FF $IdleAnimations_8021A59C $DefenseTable_8021A450 00000000 00000000 00F90000 00000000 
00120001 03000000 000000FF $IdleAnimations_8021A5E8 $DefenseTable_8021A450 00000000 00000000 00000000 00000000 

#new:Actor $MontyMole
% stats
[Index]        12b 
[Level]         8`b 
[MaxHP]         3`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021A45C 
% ai
[SpriteCount]   3`s 
[SpriteTable] $SpriteTable_8021A508 
[Script]      $Script_Init_8021A7B0 
% move effectiveness
[Escape]       80`b 
[Item]         85`b 
[AirLift]      70`b 
[Hurricane]    50`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         34`b  18`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_8021A59C
.Status:Normal    002F0001
.Status:Stone     002F0000
.Status:Sleep     002F0014
.Status:Poison    002F0001
.Status:Stop      002F0000
.Status:Static    002F0001
.Status:Paralyze  002F0000
.Status:Dizzy     002F0014
.Status:Fear      002F0014
.Status:End

#new:IdleAnimations $IdleAnimations_8021A5E8
.Status:Normal    002F000F
.Status:End

#new:IdleAnimations $IdleAnimations_8021A5F4
.Status:Normal    002F0012
.Status:End

MISSING: 8021A600 to 8021A60C (004D27F0 to 004D27FC)
00000001 002F0006 00000000 

#new:SpriteTable $SpriteTable_8021A60C
00022000 01000000 000000FF $IdleAnimations_8021A5F4 00000000 00000000 00000000 00000000 00000000 

#new:Script $Script_Init_8021A630
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	If  *Var[0]  ==  00000001 
	   Call     SetSpriteScale ( .Actor:Self 00000001 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	EndIf
	Return
	End

#new:Actor $EmptyMoleHole
% stats
[Index]        6Bb 
[Level]         9`b 
[MaxHP]         5`b 
[Coins]         2`b 
[Flags]       00640004 
[StatusTable] 00000000 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021A60C 
[Script]      $Script_Init_8021A630 
% move effectiveness
[Escape]       80`b 
[Item]         80`b 
[AirLift]       0`b 
[Hurricane]    80`b % Bow's "Spook" as well
[UpAndAway]    90`b 
[PowerBounce]  90`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         32`b  18`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Vector3D $Vector3D_8021A6B8
0` -1000` 0`

#new:SpecialFormation $SpecialFormation_8021A6C4
$EmptyMoleHole $Vector3D_8021A6B8 00000000 00000000 00000000 00000000 00000000 

#new:SpecialFormation $SpecialFormation_8021A6E0
$EmptyMoleHole $Vector3D_8021A6B8 00000000 00000001 00000000 00000000 00000000 

#new:Script $Script_8021A6FC
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  &  00080000 
	   Call     SummonEnemy 	( $SpecialFormation_8021A6E0 00000000 )
	Else
	   Call     SummonEnemy 	( $SpecialFormation_8021A6C4 00000000 )
	EndIf
	Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
	Sub  *Var[3]  00000001 
	Call     SetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
	Return
	End

#new:Script $Script_Init_8021A7B0
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021AFAC )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8021A814 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021A824 )
	Call     SetActorFlagBits 	( .Actor:Self 00000004 .True )
	Return
	End

#new:Script $Script_Idle_8021A814
	Return
	End

#new:Script $Script_HandleEvent_8021A824
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetLastElement ( *Var[E] )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      If  *Var[E]  &  00000040 
	         ChildThread
	            Wait     00000008 
	            Call     SetAnimation 	( .Actor:Self 00000001 002F0007 )
	         EndChildThread
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  002F0006 
	         ExecWait DoNormalHit 
	         Call     SetAnimation 	( .Actor:Self 00000001 002F0008 )
	         Wait     0000000A 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  002F0005 
	         ExecWait DoNormalHit 
	      EndIf
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002F000A 
	      SetConst  *Var[2]  002F000B 
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002F000A 
	      SetConst  *Var[2]  002F000B 
	      ExecWait DoBurnHit 
	      ExecWait $Script_8021A6FC 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002F000C 
	      ExecWait DoDeath 
	      Return
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	      Call     GetLastElement ( *Var[0] )
	      If  *Var[0]  &  00000040 
	         Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
	         Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
	         Call     SetAnimation 	( .Actor:Self 00000001 002F0011 )
	         Wait     00000050 
	         Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleSurface )
	         Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
	         Call     SetAnimation 	( .Actor:Self 00000001 002F0010 )
	         Wait     00000014 
	         Call     SetAnimation 	( .Actor:Self 00000001 002F0014 )
	         Wait     00000014 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  002F0001 
	         ExecWait DoImmune 
	      EndIf
	   EndCaseGroup
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002F0005 
	      ExecWait DoNormalHit 
	      Call     SetAnimation 	( .Actor:Self 00000001 002F0006 )
	      Wait     0000000A 
	      ExecWait $Script_8021A6FC 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002F0009 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:RecoverStatus
	      Call     SetAnimation 	( .Actor:Self 00000001 002F0006 )
	      Wait     00000008 
	      Call     SetAnimation 	( .Actor:Self 00000001 002F0007 )
	      Wait     00000005 
	      Call     SetAnimation 	( .Actor:Self 00000001 002F0008 )
	      Wait     00000008 
	   Case  ==  .Event:ScareAway
	      Call     SetAnimation 	( .Actor:Self 00000001 002F0006 )
	      Wait     0000000F 
	      Call     SetAnimation 	( .Actor:Self 00000001 002F0007 )
	      Wait     0000000F 
	      Call     SetAnimation 	( .Actor:Self 00000001 002F0008 )
	      Wait     0000000F 
	      Call     SetActorFlagBits 	( .Actor:Self 00404000 .True )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021A5F4 )
	      Return
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002F0005 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      ExecWait $Script_8021A6FC 
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  &  0035D000 
	         Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFB 00000000 )
	         Call     SetAnimation 	( .Actor:Self 00000001 002F0019 )
	      Else
	         If  *Var[0]  &  00080000 
	            Call     8026BA04 ( FFFFFF81 00000000 FFFFFFF7 00000000 )
	         Else
	            Call     8026BA04 ( FFFFFF81 00000000 FFFFFFE9 00000000 )
	         EndIf
	         Call     SetAnimation 	( .Actor:Self 00000001 002F0009 )
	      EndIf
	      Wait     000003E8 
	      Return
	   Case  ==  .Event:AirLiftFailed
	      Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
	      Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 002F0011 )
	      Wait     00000028 
	      Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleSurface )
	      Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 002F0010 )
	      Wait     00000014 
	      Call     SetAnimation 	( .Actor:Self 00000001 002F0014 )
	      Wait     00000014 
	   Case  ==  .Event:UpAndAway
	      ExecWait $Script_8021A6FC 
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_8021AFAC
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     UseCamPreset 	( 00000002 )
	   Call     MoveCamOver 	( 00000001 )
	EndIf
	ChildThread
	   Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
	   Wait     00000014 
	   Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleSurface )
	EndChildThread
	Call     SetAnimation 	( .Actor:Self 00000001 002F0004 )
	Wait     00000025 
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[1]  00000014 
	Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
	Wait     00000001 
	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  &  00080000 
	   Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	Else
	   Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	EndIf
	Call     PlaySoundAtSprite 	( .Actor:Self 00000003 .Sound:MoleThrow )
	Call     8026FA00 ( FFFFFF81 00000003 00000001 00000000 00000000 )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 10000000 00000000 00000002 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     SetTargetActor ( .Actor:Self .Actor:Player )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000064 
	      Set  *Var[1]  FFFFFFFB 
	      Call     SetSpriteSpeed ( .Actor:Self 00000003 *Fixed[12.0] )
	      Call     SetSpriteJumpscale 	( .Actor:Self 00000003 *Fixed[0.10058594] )
	      Call     SetAnimation 	( .Actor:Self 00000003 002F000F )
	      Call     MoveSpriteTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 0000001E .Easing:Linear )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Call     8027D7F0 ( )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetSpriteSpeed ( .Actor:Self 00000003 *Fixed[12.0] )
	Call     SetSpriteJumpscale 	( .Actor:Self 00000003 *Fixed[0.10058594] )
	Call     SetAnimation 	( .Actor:Self 00000003 002F000F )
	Call     MoveSpriteTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 00000014 .Easing:Linear )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000037 
	      Set  *Var[1]  00000000 
	      Call     SetSpriteSpeed ( .Actor:Self 00000003 *Fixed[6.0] )
	      Call     SetSpriteJumpscale 	( .Actor:Self 00000003 *Fixed[0.10058594] )
	      Call     MoveSpriteTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 00000019 .Easing:Linear )
	      Call     SetSpriteSpeed ( .Actor:Self 00000003 *Fixed[4.0] )
	      Sub  *Var[0]  00000014 
	      Call     MoveSpriteTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 00000015 .Easing:Linear )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

PADDING: 8021B5F4 to 8021B600 (004D37E4 to 004D37F0)
00000000 00000000 00000000 

#new:IdleAnimations $IdleAnimations_8021B600
.Status:Normal    00670001
.Status:Stone     00670000
.Status:Sleep     00670019
.Status:Stop      00670000
.Status:Static    0067000C
.Status:Paralyze  0067000C
.Status:Dizzy     0067000C
.Status:Shrink    00670001
.Status:End

#new:IdleAnimations $IdleAnimations_8021B644
.Status:Normal    00670014
.Status:End

#new:DefenseTable $DefenseTable_8021B650
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021B65C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      70`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   70`
.Status:Shrink     75`
.Status:Stop       70`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -1`
.Status:End

#new:SpriteTable $SpriteTable_8021B708
00020000 01000000 EC3C00FF $IdleAnimations_8021B600 $DefenseTable_8021B650 00000000 00000000 00000000 00000000 
00800001 02001F00 F21400FF $IdleAnimations_8021B600 $DefenseTable_8021B650 00000000 00000000 00F20000 00000000 
00120001 03000000 000000FF $IdleAnimations_8021B644 $DefenseTable_8021B650 00000000 00000000 00000000 00000000 
00120001 04000000 000000FF $IdleAnimations_8021B644 $DefenseTable_8021B650 00000000 00000000 00000000 00000000 
00120001 05000000 000000FF $IdleAnimations_8021B644 $DefenseTable_8021B650 00000000 00000000 00000000 00000000 

#new:Actor $Buzzar
% stats
[Index]        A0b 
[Level]        35`b 
[MaxHP]        40`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_8021B65C 
% ai
[SpriteCount]   5`s 
[SpriteTable] $SpriteTable_8021B708 
[Script]      $Script_Init_8021B7E4 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  75`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         78`b  74`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -35`b  65`b % dx dy
[StatusIcon]    1`b  58`b % dx dy

#new:Script $Script_Init_8021B7E4
	Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021BCD8 )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8021B930 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021B940 )
	Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_8021B918 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Set  *Var[1]  00000028 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     HPBarToHome 	( .Actor:Self )
	Return
	End

#new:Script $Script_NextTurn_8021B918
	Return
	Return
	End

#new:Script $Script_Idle_8021B930
	Return
	End

#new:Script $Script_HandleEvent_8021B940
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   Case  ==  .Event:HitCombo
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0067000B 
	      ExecWait DoNormalHit 
	   Case  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0067000B 
	      ExecWait DoNormalHit 
	      ExecWait $Script_8021FC34 
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0067000B 
	      SetConst  *Var[2]  FFFFFFFF 
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0067000B 
	      SetConst  *Var[2]  FFFFFFFF 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0067000B 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:ShockHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0067000B 
	      ExecWait DoShockHit 
	      Call     UseCamPreset 	( 00000002 )
	      Call     MoveCamOver 	( 00000014 )
	      Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	      ExecWait $Script_8021F7EC 
	   Case  ==  .Event:ShockDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0067000B 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0067000B 
	      ExecWait DoDeath 
	      Return
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	   CaseOR  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00670001 
	      ExecWait DoImmune 
	   EndCaseGroup
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0067000B 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0067000B 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00670001 
	      ExecWait DoRecover 
	   Default
	EndSwitch
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_8021BCD8
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  &  00080000 
	   Call     SetActorVar 	( .Actor:Self 00000000 00000002 )
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
	      ExecWait $Script_8021BEBC 
	   Case  ==  00000002 
	      Call     SetActorVar 	( .Actor:Self 00000000 00000003 )
	      ExecWait $Script_8021F030 
	   Case  ==  00000004 
	      Call     SetActorVar 	( .Actor:Self 00000000 00000005 )
	      ExecWait $Script_8021CCE8 
	   Default
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      If  *Var[0]  ==  00000005 
	         Set  *Var[0]  00000000 
	      Else
	         Add  *Var[0]  00000001 
	      EndIf
	      Call     SetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      ExecWait $Script_8021DF2C 
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021BEBC
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     UseCamPreset 	( 0000000D )
	Call     SetCamZoom  	( 000000B4 )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 00000078 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] 00000046 *Var[2] )
	Call     GetAnimation 	( .Actor:Self 00000001 *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  00670001 
	   CaseOR  ==  00670002 
	   CaseOR  ==  0067000D 
	   CaseOR  ==  00670016 
	   CaseOR  ==  00670017 
	      Loop     
	         Call     8026DF88 ( FFFFFF81 00000001 *Var[0] )
	         If  *Var[0]  ==  00000001 
	            BreakLoop
	         EndIf
	         Wait     00000001 
	      EndLoop
	   EndCaseGroup
	EndSwitch
	Call     SetAnimation 	( .Actor:Self 00000001 00670002 )
	Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:CosInOut )
	Call     CheckPlayerHit ( .Actor:Self *Var[A] 10000000 00000000 00000001 00000020 )
	Switch  *Var[A] 
	   Case  ==  00000006 
	      Call     SetTargetActor ( .Actor:Self .Actor:Partner )
	      Call     CheckPlayerHit ( .Actor:Self *Var[A] 10000000 00000000 00000001 00000020 )
	      Switch  *Var[A] 
	         Case  ==  00000006 
	            Call     SetTargetActor ( .Actor:Self .Actor:Player )
	            Wait     00000008 
	            Call     SetAnimation 	( .Actor:Self 00000001 00670011 )
	            Wait     0000000F 
	            Call     SetAnimation 	( .Actor:Self 00000001 00670013 )
	            Wait     00000006 
	            Call     PlaySoundAtActor 	( .Actor:Self 000020F0 )
	            Call     UseCamPreset 	( 00000002 )
	            Call     MoveCamOver 	( 00000032 )
	            Thread
	               Call     ShakeCam    	( 00000001 00000000 0000005A *Fixed[0.5] )
	            EndThread
	            Call     $Function_802180C0 ( 00000046 00000064 )
	            Thread
	               Loop     00000014 
	                  Call     SetGoalToTarget 	( .Actor:Self )
	                  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	                  Add  *Var[0]  0000000A 
	                  Call     PlayEffect  	( {FX:DeadLeaves:Gust3} *Var[0] 0000000A *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	                  Wait     00000003 
	               EndLoop
	            EndThread
	            Wait     0000003C 
	            Call     SetAnimation 	( .Actor:Self 00000001 00670001 )
	            If  *Var[A]  ==  00000005 
	               Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	            EndIf
	            Wait     00000019 
	            ExecWait $Script_8021F7EC 
	            Return
	         Default
	            Call     SetTargetActor ( .Actor:Self .Actor:Partner )
	            Call     ShowMessageBox ( 00000041 0000005A )
	            Call     802694A4 ( 00000001 )
	            Call     LoadActionCommand 	( 00000005 )
	            Call     802A9000 ( 00000001 )
	            Call     802691C8 ( 00000003 00000028 00000046 00000064 00000000 00000000 )
	            Wait     00000008 
	            Call     SetAnimation 	( .Actor:Self 00000001 00670011 )
	            Wait     0000000F 
	            Call     SetAnimation 	( .Actor:Self 00000001 00670013 )
	            Wait     00000006 
	            Call     PlaySoundAtActor 	( .Actor:Self 000020F0 )
	            Call     SetBattleFlagBits 	( 00004000 .False )
	            Call     802A91E0 ( 00000000 00000058 00000003 )
	            Call     UseCamPreset 	( 00000013 )
	            Call     SetCamTarget 	( FFFFFFE7 0000003C 00000000 )
	            Call     SetCamZoom  	( 000001CC )
	            Call     SetCamOffsetZ 	( 00000000 )
	            Call     MoveCamOver 	( 00000032 )
	            Call     $Function_802180C0 ( 00000046 00000082 )
	            Thread
	               Loop     0000001E 
	                  Call     SetGoalToTarget 	( .Actor:Self )
	                  Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	                  Add  *Var[0]  0000000A 
	                  Call     PlayEffect  	( {FX:DeadLeaves:Gust3} *Var[0] 0000000A *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	                  Wait     00000003 
	               EndLoop
	            EndThread
	            Thread
	               Call     ShakeCam    	( 00000001 00000000 0000005A *Fixed[0.5] )
	            EndThread
	            Call     ActorExists 	( .Actor:Partner *Var[0] )
	            If  *Var[0]  ==  00000001 
	               Thread
	                  Call     UseIdleAnimation 	( .Actor:Partner .False )
	                  Set  *Var[0]  00000000 
	                  Set  *Var[1]  00000003 
	                  Loop     0000005D 
	                     Call     SetActorAngle 	( .Actor:Partner *Var[0] )
	                     Add  *Var[0]  *Var[1] 
	                     Add  *Var[1]  00000001 
	                     Wait     00000001 
	                  EndLoop
	                  Call     SetActorAngle 	( .Actor:Partner 00000000 )
	               EndThread
	            EndIf
	            Wait     0000005A 
	            Call     802695A8 ( *Var[1] )
	            Call     ActorExists 	( .Actor:Partner *Var[0] )
	            If  *Var[0]  ==  00000001 
	               Wait     00000003 
	               Call     UseIdleAnimation 	( .Actor:Partner .True )
	               Call     SetTargetActor ( .Actor:Self .Actor:Partner )
	               Call     SetGoalToTarget 	( .Actor:Self )
	               Call     DamageTarget 	( .Actor:Self *Var[0] 22000000 0000FFFF 00000000 *Var[1] 00000020 )
	            EndIf
	            Call     SetAnimation 	( .Actor:Self 00000001 00670001 )
	            Wait     00000019 
	            Call     UseCamPreset 	( 00000002 )
	            Call     MoveCamOver 	( 00000014 )
	            ExecWait $Script_8021F7EC 
	            Return
	      EndSwitch
	   Default
	EndSwitch
	Call     ShowMessageBox ( 00000041 0000005A )
	Call     802694A4 ( 00000001 )
	Call     LoadActionCommand 	( 00000005 )
	Call     802A9000 ( 00000001 )
	Call     802691C8 ( 00000003 00000028 00000046 00000064 00000000 00000000 )
	Wait     00000008 
	Call     SetAnimation 	( .Actor:Self 00000001 00670011 )
	Wait     0000000F 
	Call     SetAnimation 	( .Actor:Self 00000001 00670013 )
	Wait     00000006 
	Call     PlaySoundAtActor 	( .Actor:Self 000020F0 )
	Call     SetBattleFlagBits 	( 00004000 .False )
	Call     802A91E0 ( 00000000 00000058 00000003 )
	Call     UseCamPreset 	( 00000013 )
	Call     SetCamTarget 	( FFFFFFE7 0000003C 00000000 )
	Call     SetCamZoom  	( 000001CC )
	Call     SetCamOffsetZ 	( 00000000 )
	Call     MoveCamOver 	( 00000032 )
	Call     $Function_802180C0 ( 00000046 00000082 )
	Thread
	   Loop     0000001E 
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[0]  0000000A 
	      Call     PlayEffect  	( {FX:DeadLeaves:Gust3} *Var[0] 0000000A *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	      Wait     00000003 
	   EndLoop
	EndThread
	Thread
	   Call     ShakeCam    	( 00000001 00000000 0000005A *Fixed[0.5] )
	EndThread
	Call     GetStatusFlags ( .Actor:Player *Var[1] )
	If  *Var[1]  !&  00100000 
	   Thread
	      Call     UseIdleAnimation 	( .Actor:Player .False )
	      Call     SetAnimation 	( .Actor:Player 00000000 0001002E )
	      Set  *Var[0]  00000000 
	      Set  *Var[1]  00000003 
	      Loop     0000005A 
	         Call     SetActorAngle 	( .Actor:Player *Var[0] )
	         Add  *Var[0]  *Var[1] 
	         Add  *Var[1]  00000001 
	         Wait     00000001 
	      EndLoop
	      Call     SetActorAngle 	( .Actor:Player 00000000 )
	   EndThread
	EndIf
	Call     ActorExists 	( .Actor:Partner *Var[0] )
	If  *Var[0]  ==  00000001 
	   Thread
	      Call     UseIdleAnimation 	( .Actor:Partner .False )
	      Set  *Var[0]  00000000 
	      Set  *Var[1]  00000003 
	      Loop     0000005D 
	         Call     SetActorAngle 	( .Actor:Partner *Var[0] )
	         Add  *Var[0]  *Var[1] 
	         Add  *Var[1]  00000001 
	         Wait     00000001 
	      EndLoop
	      Call     SetActorAngle 	( .Actor:Partner 00000000 )
	   EndThread
	EndIf
	Call     8026BF48 ( 00000001 )
	Wait     0000005A 
	Call     802695A8 ( *Var[1] )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     DamageTarget 	( .Actor:Self *Var[0] 22000000 0000FFFF 00000000 *Var[1] 00000020 )
	Call     ActorExists 	( .Actor:Partner *Var[0] )
	If  *Var[0]  ==  00000001 
	   Wait     00000003 
	   Call     UseIdleAnimation 	( .Actor:Partner .True )
	   Call     SetTargetActor ( .Actor:Self .Actor:Partner )
	   Call     SetGoalToTarget 	( .Actor:Self )
	   Call     DamageTarget 	( .Actor:Self *Var[0] 22000000 0000FFFF 00000000 *Var[1] 00000020 )
	EndIf
	Call     SetAnimation 	( .Actor:Self 00000001 00670001 )
	Wait     00000019 
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 00000014 )
	ExecWait $Script_8021F7EC 
	Call     8026BF48 ( 00000000 )
	Return
	End

#new:Script $Script_8021CCE8
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     UseCamPreset 	( 00000005 )
	Call     SetCamZoom  	( 000000B4 )
	Call     SetCamOffsetZ 	( 00000000 )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 00000028 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     AddToGoalPos 	( .Actor:Self 0000005A 00000023 00000000 )
	Call     GetAnimation 	( .Actor:Self 00000001 *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  00670001 
	   CaseOR  ==  00670002 
	   CaseOR  ==  0067000D 
	   CaseOR  ==  00670016 
	   CaseOR  ==  00670017 
	      Loop     
	         Call     8026DF88 ( FFFFFF81 00000001 *Var[0] )
	         If  *Var[0]  ==  00000001 
	            BreakLoop
	         EndIf
	         Wait     00000001 
	      EndLoop
	   EndCaseGroup
	EndSwitch
	Call     SetAnimation 	( .Actor:Self 00000001 00670002 )
	Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF1 .Easing:CosInOut )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  FFFFFFE2 
	Add  *Var[1]  00000019 
	Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  FFFFFFE2 
	Add  *Var[1]  00000023 
	Call     SetSpritePos 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  FFFFFFEC 
	Add  *Var[1]  00000019 
	Call     SetSpritePos 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
	Call     SetAnimation 	( .Actor:Self 00000001 0067000E )
	Wait     0000000F 
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  00000018 
	Add  *Var[1]  00000018 
	Call     PlayEffect  	( {FX:ShinyFlare} *Var[0] *Var[1] *Var[2] *Fixed[0.60058594] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     PlaySoundAtActor 	( .Actor:Self 000020F3 )
	Wait     0000000A 
	Call     8026FA00 ( FFFFFF81 00000003 00000001 00000000 00000000 )
	Call     8026FA00 ( FFFFFF81 00000004 00000001 00000000 00000000 )
	Call     8026FA00 ( FFFFFF81 00000005 00000001 00000000 00000000 )
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 00000014 )
	Thread
	   Wait     00000014 
	   Call     SetAnimation 	( .Actor:Self 00000001 00670001 )
	EndThread
	Call     SetAnimation 	( .Actor:Self 00000001 00670010 )
	Call     SetSpriteRotation 	( .Actor:Self 00000003 00000000 00000000 FFFFFFD3 )
	Call     SetSpriteRotation 	( .Actor:Self 00000004 00000000 00000000 FFFFFFD3 )
	Call     SetSpriteRotation 	( .Actor:Self 00000005 00000000 00000000 FFFFFFD3 )
	Wait     0000000A 
	Call     SetAnimation 	( .Actor:Self 00000003 00670014 )
	Call     SetAnimation 	( .Actor:Self 00000004 00670014 )
	Call     SetAnimation 	( .Actor:Self 00000005 00670014 )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00000001 .False )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000005 00000001 .False )
	Call     SetSpriteSpeed ( .Actor:Self 00000003 *Fixed[6.0] )
	Call     SetSpriteJumpscale 	( .Actor:Self 00000003 *Fixed[0.10058594] )
	Call     SetSpriteSpeed ( .Actor:Self 00000004 *Fixed[6.0] )
	Call     SetSpriteJumpscale 	( .Actor:Self 00000004 *Fixed[0.10058594] )
	Call     SetSpriteSpeed ( .Actor:Self 00000005 *Fixed[6.0] )
	Call     SetSpriteJumpscale 	( .Actor:Self 00000005 *Fixed[0.10058594] )
	Call     PlaySoundAtActor 	( .Actor:Self 000020F4 )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 10000000 00000000 00000002 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Thread
	         Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     RandInt     	( 0000000A *Var[3] )
	         Sub  *Var[3]  0000001E 
	         Add  *Var[0]  *Var[3] 
	         Call     MoveSpriteTo 	( .Actor:Self 00000004 *Var[0] 00000005 *Var[2] 00000009 00000000 .Easing:Linear )
	         Call     SetAnimation 	( .Actor:Self 00000004 00670015 )
	      EndThread
	      Thread
	         Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     RandInt     	( 0000000A *Var[3] )
	         Sub  *Var[3]  00000028 
	         Add  *Var[0]  *Var[3] 
	         Call     MoveSpriteTo 	( .Actor:Self 00000005 *Var[0] 00000005 *Var[2] 00000009 00000000 .Easing:Linear )
	         Call     SetAnimation 	( .Actor:Self 00000005 00670015 )
	      EndThread
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  0000001E 
	      Call     MoveSpriteTo 	( .Actor:Self 00000003 *Var[0] 00000005 *Var[2] 00000009 00000000 .Easing:Linear )
	      Call     SetAnimation 	( .Actor:Self 00000003 00670015 )
	      Thread
	         Wait     0000000A 
	         Call     SetAnimation 	( .Actor:Self 00000003 00670014 )
	         Call     SetAnimation 	( .Actor:Self 00000004 00670014 )
	         Call     SetAnimation 	( .Actor:Self 00000005 00670014 )
	         Wait     00000014 
	         Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
	         Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00000001 .True )
	         Call     SetSpriteFlagBits 	( .Actor:Self 00000005 00000001 .True )
	      EndThread
	      Wait     0000000A 
	      Call     8024ECF8 ( 00000000 00000001 00000000 )
	      Wait     0000000A 
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      ExecWait $Script_8021F7EC 
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	   Default
	EndSwitch
	Call     8024ECF8 ( 00000000 00000001 00000000 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Thread
	   Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     RandInt     	( 0000000A *Var[3] )
	   Sub  *Var[3]  0000000A 
	   Add  *Var[1]  *Var[3] 
	   Call     MoveSpriteTo 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] 00000006 00000000 .Easing:Linear )
	EndThread
	Thread
	   Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     RandInt     	( 0000000A *Var[3] )
	   Add  *Var[3]  0000000A 
	   Add  *Var[1]  *Var[3] 
	   Call     MoveSpriteTo 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] 00000006 00000000 .Easing:Linear )
	EndThread
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     MoveSpriteTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000006 00000000 .Easing:Linear )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000020 )
	Set  *Var[F]  *Var[0] 
	Switch  *Var[F] 
	   Default
	      Thread
	         Call     SetSpriteRotation 	( .Actor:Self 00000004 00000000 0000002D 0000005A )
	         Call     GetSpriteOffset 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
	         Sub  *Var[0]  00000028 
	         Set  *Var[1]  00000002 
	         Call     SetSpriteJumpscale 	( .Actor:Self 00000004 *Fixed[1.5] )
	         Call     JumpSpriteA 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] 0000000A .True )
	         Call     SetSpriteRotation 	( .Actor:Self 00000004 00000000 00000050 0000005A )
	         Wait     00000008 
	         Loop     0000000F 
	            Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00000001 .False )
	            Wait     00000001 
	            Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00000001 .True )
	            Wait     00000001 
	         EndLoop
	      EndThread
	      Thread
	         Call     SetSpriteRotation 	( .Actor:Self 00000005 00000000 0000002D FFFFFFA6 )
	         Call     GetSpriteOffset 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
	         Add  *Var[0]  00000014 
	         Set  *Var[1]  00000004 
	         Call     SetSpriteJumpscale 	( .Actor:Self 00000005 *Fixed[1.5] )
	         Call     JumpSpriteA 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] 0000000A .True )
	         Call     SetSpriteRotation 	( .Actor:Self 00000005 00000000 0000005A FFFFFFA6 )
	         Wait     00000008 
	         Loop     0000000F 
	            Call     SetSpriteFlagBits 	( .Actor:Self 00000005 00000001 .False )
	            Wait     00000001 
	            Call     SetSpriteFlagBits 	( .Actor:Self 00000005 00000001 .True )
	            Wait     00000001 
	         EndLoop
	      EndThread
	      Thread
	         Call     SetSpriteRotation 	( .Actor:Self 00000003 00000000 0000002D FFFFFFA6 )
	         Call     GetSpriteOffset 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
	         Sub  *Var[0]  00000005 
	         Set  *Var[1]  00000004 
	         Call     SetSpriteJumpscale 	( .Actor:Self 00000003 *Fixed[1.5] )
	         Call     JumpSpriteA 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 0000000A .True )
	         Call     SetSpriteRotation 	( .Actor:Self 00000003 00000000 0000005A FFFFFFA6 )
	         Wait     00000008 
	         Loop     0000000F 
	            Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
	            Wait     00000001 
	            Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
	            Wait     00000001 
	         EndLoop
	      EndThread
	      Wait     0000001E 
	      Call     8027D7F0 ( )
	      ExecWait $Script_8021F7EC 
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021DCB8
	Call     GetAnimation 	( .Actor:Self 00000001 *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  00670001 
	   CaseOR  ==  00670002 
	   CaseOR  ==  0067000D 
	   CaseOR  ==  00670016 
	   CaseOR  ==  00670017 
	      Loop     
	         Call     8026DF88 ( FFFFFF81 00000001 *Var[0] )
	         If  *Var[0]  ==  00000001 
	            BreakLoop
	         EndIf
	         Wait     00000001 
	      EndLoop
	   EndCaseGroup
	EndSwitch
	Call     8026F838 ( FFFFFF81 00000001 )
	Call     8026F740 ( FFFFFF81 00000005 FFFFFFF8 00000000 )
	ChildThread
	   Loop     
	      Call     $Function_802180C0 ( 00000064 0000000A )
	      Wait     0000000A 
	   EndLoop
	EndChildThread
	ChildThread
	   Call     SetActorSpeed 	( .Actor:Player *Fixed[5.0] )
	   Call     SetActorJumpscale 	( .Actor:Player *Fixed[0.10058594] )
	   Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	   Add  *Var[1]  000000B4 
	   Call     SetGoalToPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	   Call     MoveToGoal  	( .Actor:Player 00000063 00000000 .Easing:Linear )
	EndChildThread
	Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.10058594] )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[1]  000000B4 
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     MoveToGoal  	( .Actor:Self 00000063 00000000 .Easing:Linear )
	Return
	End

#new:Script $Script_8021DF2C
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     UseCamPreset 	( 0000003F )
	Call     SetCamZoom  	( 000000F0 )
	Call     CamTargetActor ( .Actor:Self )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     AddToGoalPos 	( .Actor:Self 0000002D 00000037 00000000 )
	Call     GetAnimation 	( .Actor:Self 00000001 *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  00670001 
	   CaseOR  ==  00670002 
	   CaseOR  ==  0067000D 
	   CaseOR  ==  00670016 
	   CaseOR  ==  00670017 
	      Loop     
	         Call     8026DF88 ( FFFFFF81 00000001 *Var[0] )
	         If  *Var[0]  ==  00000001 
	            BreakLoop
	         EndIf
	         Wait     00000001 
	      EndLoop
	   EndCaseGroup
	EndSwitch
	Call     SetAnimation 	( .Actor:Self 00000001 00670002 )
	Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:CosInOut )
	Call     CheckPlayerHit ( .Actor:Self *Var[A] 00000000 00000000 00000004 00000010 )
	Switch  *Var[A] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Wait     0000000A 
	      Call     UseCamPreset 	( 00000042 )
	      Call     SetCamZoom  	( 000000F0 )
	      Call     SetCamOffsetZ 	( FFFFFFF6 )
	      Call     CamTargetActor ( .Actor:Self )
	      Call     PlaySoundAtActor 	( .Actor:Self 000020F1 )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 000020F2 )
	      Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     AddToGoalPos 	( .Actor:Self FFFFFFD3 FFFFFFEC 00000000 )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 00670018 )
	      Call     MoveToGoal  	( .Actor:Self 0000000C FFFFFFF4 .Easing:Linear )
	      Call     SetAnimation 	( .Actor:Self 00000001 00670001 )
	      Wait     0000000A 
	      Call     UseCamPreset 	( 00000002 )
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      ExecWait $Script_8021F808 
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	   Case  ==  00000008 
	      Call     UseCamPreset 	( 00000042 )
	      Call     SetCamZoom  	( 000000F0 )
	      Call     SetCamOffsetZ 	( FFFFFFF6 )
	      Call     CamTargetActor ( .Actor:Self )
	      Call     PlaySoundAtActor 	( .Actor:Self 000020F1 )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 000020F2 )
	      Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     AddToGoalPos 	( .Actor:Self FFFFFFF1 FFFFFFF6 00000000 )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 00670018 )
	      Call     MoveToGoal  	( .Actor:Self 00000008 FFFFFFFB .Easing:Linear )
	      Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000004 00000020 )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     AddToGoalPos 	( .Actor:Self 00000028 0000000A 00000000 )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	      Call     GetAnimation 	( .Actor:Self 00000001 *Var[0] )
	      Switch  *Var[0] 
	         CaseOR  ==  00670001 
	         CaseOR  ==  00670002 
	         CaseOR  ==  0067000D 
	         CaseOR  ==  00670016 
	         CaseOR  ==  00670017 
	            Loop     
	               Call     8026DF88 ( FFFFFF81 00000001 *Var[0] )
	               If  *Var[0]  ==  00000001 
	                  BreakLoop
	               EndIf
	               Wait     00000001 
	            EndLoop
	         EndCaseGroup
	      EndSwitch
	      Call     8026F838 ( FFFFFF81 00000001 )
	      Call     8026F740 ( FFFFFF81 00000005 FFFFFFF2 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00670002 )
	      Call     MoveToGoal  	( .Actor:Self 00000000 00000000 .Easing:Linear )
	      Wait     00000014 
	      Call     UseCamPreset 	( 00000002 )
	      ExecWait $Script_8021F7EC 
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   Default
	EndSwitch
	Wait     0000000A 
	Call     8024E664 ( 00000013 )
	Call     SetCamZoom  	( 00000168 )
	Call     MoveCamOver 	( 0000001E )
	Thread
	   Wait     00000005 
	   Call     UseCamPreset 	( 00000013 )
	   Call     SetCamZoom  	( 00000168 )
	   Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	   Set  *Var[1]  0000001B 
	   Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
	   Call     MoveCamOver 	( 00000014 )
	EndThread
	Call     PlaySoundAtActor 	( .Actor:Self 000020F1 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	Call     PlaySoundAtActor 	( .Actor:Self 000020F2 )
	Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     AddToGoalPos 	( .Actor:Self FFFFFFF1 FFFFFFF6 00000000 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	Call     SetAnimation 	( .Actor:Self 00000001 00670018 )
	Call     MoveToGoal  	( .Actor:Self 00000008 FFFFFFFB .Easing:Linear )
	If  *Var[A]  ==  00000007 
	   Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000004 00000020 )
	EndIf
	Call     PlaySoundAtActor 	( .Actor:Self 000020F5 )
	Call     SetAnimation 	( .Actor:Self 00000001 00670016 )
	Call     $Function_802180C0 ( 000000B4 00000014 )
	Call     UseIdleAnimation 	( .Actor:Player .False )
	Call     SetAnimation 	( .Actor:Player 00000000 0001002B )
	Call     ShowMessageBox ( 00000040 0000005A )
	Thread
	   Loop     0000005A 
	      Call     80251408 ( 00000063 )
	      Wait     00000001 
	   EndLoop
	   Call     80251408 ( 00000000 )
	EndThread
	Wait     00000014 
	Call     LoadActionCommand 	( 00000004 )
	Call     802A9000 ( )
	Call     802691C8 ( 00000001 0000001E 00000000 00000000 00000000 00000000 )
	Wait     0000000A 
	Call     SetAnimation 	( .Actor:Self 00000001 00670017 )
	Call     UseCamPreset 	( 00000042 )
	Call     SetCamZoom  	( 000000F0 )
	Call     SetCamOffsetZ 	( FFFFFFF6 )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 0000003C )
	Call     SetBattleFlagBits 	( 00004000 .False )
	Call     802694A4 ( 00000001 )
	Call     802A91B0 ( 00000000 0000003C 0000001E 00000003 )
	Exec     $Script_8021DCB8 *Var[A] 
	Wait     0000003E 
	Call     802694F8 ( *Var[0] )
	If  *Var[0]  >  00000000 
	   Call     SetAnimation 	( .Actor:Self 00000001 00670001 )
	   Wait     00000002 
	   Kill     *Var[A] 
	   Call     SetJumpAnimations 	( .Actor:Player 00000000 00010007 00010007 00010009 )
	   Call     SetActorSpeed 	( .Actor:Player *Fixed[5.0] )
	   Call     SetActorJumpscale 	( .Actor:Player *Fixed[1.8007812] )
	   Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	   Set  *Var[1]  00000000 
	   Call     SetGoalToPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	   Call     80273894 ( 0000000F )
	   Wait     00000008 
	   Call     SetAnimation 	( .Actor:Player 00000000 00010002 )
	   Call     UseIdleAnimation 	( .Actor:Player .True )
	   Wait     00000008 
	   Call     UseCamPreset 	( 00000002 )
	   ExecWait $Script_8021F808 
	   Call     EnableIdleScript 	( .Actor:Self 00000001 )
	   Call     UseIdleAnimation 	( .Actor:Self .True )
	   Return
	EndIf
	Call     UseCamPreset 	( 00000013 )
	Call     SetCamZoom  	( 00000168 )
	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Set  *Var[1]  00000032 
	Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
	Call     MoveCamOver 	( 000000C8 )
	Wait     00000027 
	Wait     0000000A 
	Call     SetJumpAnimations 	( .Actor:Player 00000000 0001001B 0001001B 0001001B )
	Call     SetActorSpeed 	( .Actor:Player *Fixed[5.0] )
	Call     SetActorJumpscale 	( .Actor:Player *Fixed[1.2001953] )
	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Set  *Var[1]  00000000 
	Call     SetGoalToPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Call     80273894 ( 00000018 )
	Call     UseIdleAnimation 	( .Actor:Player .True )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000004 00000020 )
	Set  *Var[F]  *Var[0] 
	Switch  *Var[F] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     AddToGoalPos 	( .Actor:Self 00000032 0000000A 00000000 )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	      Call     GetAnimation 	( .Actor:Self 00000001 *Var[0] )
	      Switch  *Var[0] 
	         CaseOR  ==  00670001 
	         CaseOR  ==  00670002 
	         CaseOR  ==  0067000D 
	         CaseOR  ==  00670016 
	         CaseOR  ==  00670017 
	            Loop     
	               Call     8026DF88 ( FFFFFF81 00000001 *Var[0] )
	               If  *Var[0]  ==  00000001 
	                  BreakLoop
	               EndIf
	               Wait     00000001 
	            EndLoop
	         EndCaseGroup
	      EndSwitch
	      Call     8026F838 ( FFFFFF81 00000001 )
	      Call     8026F740 ( FFFFFF81 00000005 FFFFFFF2 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00670002 )
	      Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
	      Wait     0000000A 
	      Call     UseCamPreset 	( 00000002 )
	      Call     8027D7F0 ( )
	      ExecWait $Script_8021F7EC 
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021F030
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     UseCamPreset 	( 0000003F )
	Call     SetCamZoom  	( 000000F0 )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     AddToGoalPos 	( .Actor:Self 0000003C 0000000F 00000000 )
	Call     GetAnimation 	( .Actor:Self 00000001 *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  00670001 
	   CaseOR  ==  00670002 
	   CaseOR  ==  0067000D 
	   CaseOR  ==  00670016 
	   CaseOR  ==  00670017 
	      Loop     
	         Call     8026DF88 ( FFFFFF81 00000001 *Var[0] )
	         If  *Var[0]  ==  00000001 
	            BreakLoop
	         EndIf
	         Wait     00000001 
	      EndLoop
	   EndCaseGroup
	EndSwitch
	Call     SetAnimation 	( .Actor:Self 00000001 00670002 )
	Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF1 .Easing:CosInOut )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000003 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Wait     0000000A 
	      Call     PlaySoundAtActor 	( .Actor:Self 000020F1 )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 000020F2 )
	      Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     AddToGoalPos 	( .Actor:Self FFFFFFD3 FFFFFFEC 00000000 )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 00670018 )
	      Call     MoveToGoal  	( .Actor:Self 0000000C FFFFFFF4 .Easing:Linear )
	      Call     SetAnimation 	( .Actor:Self 00000001 00670001 )
	      Wait     0000000A 
	      Call     UseCamPreset 	( 00000002 )
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      ExecWait $Script_8021F7EC 
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Wait     0000000A 
	Call     PlaySoundAtActor 	( .Actor:Self 000020F1 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	Call     PlaySoundAtActor 	( .Actor:Self 000020F2 )
	Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     AddToGoalPos 	( .Actor:Self FFFFFFFB FFFFFFF6 00000000 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	Call     SetAnimation 	( .Actor:Self 00000001 00670018 )
	Call     MoveToGoal  	( .Actor:Self 00000008 00000000 .Easing:Linear )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000003 00000020 )
	Set  *Var[F]  *Var[0] 
	Switch  *Var[F] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     GetAnimation 	( .Actor:Self 00000001 *Var[0] )
	      Switch  *Var[0] 
	         CaseOR  ==  00670001 
	         CaseOR  ==  00670002 
	         CaseOR  ==  0067000D 
	         CaseOR  ==  00670016 
	         CaseOR  ==  00670017 
	            Loop     
	               Call     8026DF88 ( FFFFFF81 00000001 *Var[0] )
	               If  *Var[0]  ==  00000001 
	                  BreakLoop
	               EndIf
	               Wait     00000001 
	            EndLoop
	         EndCaseGroup
	      EndSwitch
	      Call     8026F838 ( FFFFFF81 00000001 )
	      Call     8026F740 ( FFFFFF81 00000005 FFFFFFF2 00000000 )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     AddToGoalPos 	( .Actor:Self 00000032 0000000A 00000000 )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 00670002 )
	      Call     MoveToGoal  	( .Actor:Self 00000000 00000000 .Easing:Linear )
	      Wait     0000000A 
	      Call     UseCamPreset 	( 00000002 )
	      Call     8027D7F0 ( )
	      ExecWait $Script_8021F7EC 
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021F7EC
	ExecWait $Script_8021F824 
	Return
	End

#new:Script $Script_8021F808
	ExecWait $Script_8021FA2C 
	Return
	End

#new:Script $Script_8021F824
	Call     GetAnimation 	( .Actor:Self 00000001 *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  00670001 
	   CaseOR  ==  00670002 
	   CaseOR  ==  0067000D 
	   CaseOR  ==  00670016 
	   CaseOR  ==  00670017 
	      Loop     
	         Call     8026DF88 ( FFFFFF81 00000001 *Var[0] )
	         If  *Var[0]  ==  00000001 
	            BreakLoop
	         EndIf
	         Wait     00000001 
	      EndLoop
	   EndCaseGroup
	EndSwitch
	Call     8026F838 ( FFFFFF81 00000001 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	Call     SetGoalToHome 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Set  *Var[1]  00000028 
	Call     SetAnimation 	( .Actor:Self 00000001 00670001 )
	Call     8026F740 ( FFFFFF81 00000005 FFFFFFEC 00000000 )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetAnimation 	( .Actor:Self 00000001 00670001 )
	Call     HPBarToHome 	( .Actor:Self )
	Return
	End

#new:Script $Script_8021FA2C
	Call     GetAnimation 	( .Actor:Self 00000001 *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  00670001 
	   CaseOR  ==  00670002 
	   CaseOR  ==  0067000D 
	   CaseOR  ==  00670016 
	   CaseOR  ==  00670017 
	      Loop     
	         Call     8026DF88 ( FFFFFF81 00000001 *Var[0] )
	         If  *Var[0]  ==  00000001 
	            BreakLoop
	         EndIf
	         Wait     00000001 
	      EndLoop
	   EndCaseGroup
	EndSwitch
	Call     8026F838 ( FFFFFF81 00000001 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	Call     SetGoalToHome 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Set  *Var[1]  00000028 
	Call     SetAnimation 	( .Actor:Self 00000001 00670001 )
	Call     8026F740 ( FFFFFF81 00000005 FFFFFFEC 00000000 )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     MoveToGoal  	( .Actor:Self 00000000 0000002D .Easing:Linear )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetAnimation 	( .Actor:Self 00000001 00670001 )
	Call     HPBarToHome 	( .Actor:Self )
	Return
	End

#new:Script $Script_8021FC34
	Return
	Return
	End

PADDING: 8021FC4C to 8021FC50 (004D7E3C to 004D7E40)
00000000 

#new:IdleAnimations $IdleAnimations_8021FC50
.Status:Normal    00920001
.Status:Stone     00920000
.Status:Sleep     00920001
.Status:Poison    00920001
.Status:Stop      00920000
.Status:Static    00920001
.Status:Paralyze  00920000
.Status:Dizzy     00920001
.Status:Fear      00920001
.Status:End

#new:DefenseTable $DefenseTable_8021FC9C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021FCA8
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021FD54
00800000 01000000 001E00FF $IdleAnimations_8021FC50 $DefenseTable_8021FC9C 00000000 00000000 00FB0000 00000000 

#new:Actor $WhackaA
% stats
[Index]        D0b 
[Level]         0`b 
[MaxHP]        99`b 
[Coins]         0`b 
[Flags]       00040004 
[StatusTable] $StatusTable_8021FCA8 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021FD54 
[Script]      $Script_Init_8021FDA0 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  50`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         47`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -20`b  40`b % dx dy
[StatusIcon]   10`b  30`b % dx dy

#new:Script $Script_Init_8021FDA0
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80220634 )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8021FE5C )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021FE90 )
	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	Call     $Function_80218120 ( )
	If  *Var[0]  ==  00000000 
	   Call     SetActorFlagBits 	( .Actor:Self 00600001 .True )
	   Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .True )
	EndIf
	Return
	End

#new:Script $Script_Idle_8021FE5C
	Label    00000000 
	Wait     00000001 
	Goto     00000000 
	Return
	End

#new:Script $Script_HandleEvent_8021FE90
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   Case  ==  .Event:HitCombo
	      Call     PlaySoundAtActor 	( .Actor:Self 00002073 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoNormalHit 
	   Case  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920004 
	      ExecWait $Script_80220684 
	      ExecWait DoNormalHit 
	      Call     RandInt     	( 00000064 *Var[0] )
	      If  *Var[0]  <=  00000064 
	         ExecWait $Script_80220764 
	         Return
	      EndIf
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      SetConst  *Var[2]  00920001 
	      ExecWait $Script_80220684 
	      ExecWait DoNormalHit 
	      Call     RandInt     	( 00000064 *Var[0] )
	      If  *Var[0]  <=  00000064 
	         ExecWait $Script_80220764 
	         Return
	      EndIf
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      SetConst  *Var[2]  00920001 
	      ExecWait $Script_80220684 
	      ExecWait DoNormalHit 
	      If  00000064  >=  00000064 
	         ExecWait $Script_80220764 
	         Return
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00920001 
	         ExecWait DoDeath 
	         Return
	      EndIf
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait 8029B998 
	      Call     RandInt     	( 00000064 *Var[0] )
	      If  *Var[0]  <=  00000064 
	         ExecWait $Script_80220764 
	         Return
	      EndIf
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait 8029B998 
	      If  00000064  >=  00000064 
	         ExecWait $Script_80220764 
	         Return
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00920001 
	         ExecWait DoDeath 
	         Return
	      EndIf
	   Case  ==  .Event:ShockHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait 8029BD70 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoReturnHome 
	   Case  ==  .Event:ShockDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoDeath 
	      Return
	   Case  ==  00000017
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoImmune 
	   Case  ==  .Event:Immune
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoImmune 
	      Call     RandInt     	( 00000064 *Var[0] )
	      If  *Var[0]  <=  00000064 
	         ExecWait $Script_80220764 
	         Return
	      EndIf
	   Case  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoImmune 
	      Call     RandInt     	( 00000064 *Var[0] )
	      If  *Var[0]  <=  00000064 
	         ExecWait $Script_80220764 
	         Return
	      EndIf
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920004 
	      ExecWait $Script_80220684 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      If  00000064  >=  00000064 
	         ExecWait $Script_80220764 
	         Return
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00920001 
	         ExecWait DoDeath 
	         Return
	      EndIf
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      SetConst  *Var[2]  00920001 
	      ExecWait DoScareAway 
	      Return
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoBlowAway 
	      Return
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_80220634
	Call     RandInt     	( 00000064 *Var[0] )
	If  *Var[0]  <=  00000064 
	   ExecWait $Script_80220764 
	   Return
	EndIf
	Return
	End

#new:Script $Script_80220684
	Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
	Call     PlaySoundAtActor 	( .Actor:Self 00002073 )
	Thread
	   Wait     0000000F 
	   Call     SetAnimation 	( .Actor:Self 00000001 00920001 )
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Add  *Var[0]  00000005 
	   Add  *Var[1]  00000014 
	   Add  *Var[2]  0000000A 
	   Call     MakeItemEntity ( .Item:WhackasBump *Var[0] *Var[1] *Var[2] 0000000C 00000000 )
	EndThread
	Return
	End

#new:Script $Script_80220764
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
	Call     SetAnimation 	( .Actor:Self 00000001 00920003 )
	Wait     00000028 
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	If  *Var[0]  !=  00000000 
	   Call     SetBattleFlagBits2 	( 10000000 .True )
	EndIf
	Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .True )
	Call     SetActorFlagBits 	( .Actor:Self 00600001 .True )
	Call     RemoveActor 	( .Actor:Self )
	Return
	End

PADDING: 8022085C to 80220860 (004D8A4C to 004D8A50)
00000000 

#new:Script $Script_BeforeBattle_80220860
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     802C9308 ( 00000015 00000000 )
	Return
	End

#new:Script $Script_AfterBattle_80220894
	Return
	End

#new:ForegroundModelList $ForegroundModelList_802208A4
00000017 00000018 00000000 

#new:Stage $Stage_802208B0
$ASCII_8022237C  % iwa_tex
$ASCII_8022236C  % iwa_bt01_shape
$ASCII_8022235C  % iwa_bt01_hit
$Script_BeforeBattle_80220860 
$Script_AfterBattle_80220894 
$ASCII_80222354  % iwa_bg
$ForegroundModelList_802208A4 
00000001 
$SpecialFormation_802208E4 
00000200 

#new:Vector3D $Vector3D_802208D8
116` 0` -30`

#new:SpecialFormation $SpecialFormation_802208E4
$WhackaB $Vector3D_802208D8 00000000 00000000 00000000 00000000 00000000 

#new:IdleAnimations $IdleAnimations_80220900
.Status:Normal    00920001
.Status:Stone     00920000
.Status:Sleep     00920001
.Status:Poison    00920001
.Status:Stop      00920000
.Status:Static    00920001
.Status:Paralyze  00920000
.Status:Dizzy     00920001
.Status:Fear      00920001
.Status:End

#new:DefenseTable $DefenseTable_8022094C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80220958
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_80220A04
00800000 01000000 001E00FF $IdleAnimations_80220900 $DefenseTable_8022094C 00000000 00000000 00FB0000 00000000 

#new:Actor $WhackaB
% stats
[Index]        D0b 
[Level]         0`b 
[MaxHP]        99`b 
[Coins]         0`b 
[Flags]       00040004 
[StatusTable] $StatusTable_80220958 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80220A04 
[Script]      $Script_Init_80220A50 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  50`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         47`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -20`b  40`b % dx dy
[StatusIcon]   10`b  30`b % dx dy

#new:Script $Script_Init_80220A50
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_802212E4 )
	Call     BindIdle    	( .Actor:Self $Script_Idle_80220B0C )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80220B40 )
	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	Call     $Function_80218170 ( )
	If  *Var[0]  ==  00000000 
	   Call     SetActorFlagBits 	( .Actor:Self 00600001 .True )
	   Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .True )
	EndIf
	Return
	End

#new:Script $Script_Idle_80220B0C
	Label    00000000 
	Wait     00000001 
	Goto     00000000 
	Return
	End

#new:Script $Script_HandleEvent_80220B40
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   Case  ==  .Event:HitCombo
	      Call     PlaySoundAtActor 	( .Actor:Self 00002073 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoNormalHit 
	   Case  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920004 
	      ExecWait $Script_80221334 
	      ExecWait DoNormalHit 
	      Call     RandInt     	( 00000064 *Var[0] )
	      If  *Var[0]  <=  00000064 
	         ExecWait $Script_80221414 
	         Return
	      EndIf
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      SetConst  *Var[2]  00920001 
	      ExecWait $Script_80221334 
	      ExecWait DoNormalHit 
	      Call     RandInt     	( 00000064 *Var[0] )
	      If  *Var[0]  <=  00000064 
	         ExecWait $Script_80221414 
	         Return
	      EndIf
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      SetConst  *Var[2]  00920001 
	      ExecWait $Script_80221334 
	      ExecWait DoNormalHit 
	      If  00000064  >=  00000064 
	         ExecWait $Script_80221414 
	         Return
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00920001 
	         ExecWait DoDeath 
	         Return
	      EndIf
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait 8029B998 
	      Call     RandInt     	( 00000064 *Var[0] )
	      If  *Var[0]  <=  00000064 
	         ExecWait $Script_80221414 
	         Return
	      EndIf
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait 8029B998 
	      If  00000064  >=  00000064 
	         ExecWait $Script_80221414 
	         Return
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00920001 
	         ExecWait DoDeath 
	         Return
	      EndIf
	   Case  ==  .Event:ShockHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait 8029BD70 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoReturnHome 
	   Case  ==  .Event:ShockDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoDeath 
	      Return
	   Case  ==  00000017
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoImmune 
	   Case  ==  .Event:Immune
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoImmune 
	      Call     RandInt     	( 00000064 *Var[0] )
	      If  *Var[0]  <=  00000064 
	         ExecWait $Script_80221414 
	         Return
	      EndIf
	   Case  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoImmune 
	      Call     RandInt     	( 00000064 *Var[0] )
	      If  *Var[0]  <=  00000064 
	         ExecWait $Script_80221414 
	         Return
	      EndIf
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920004 
	      ExecWait $Script_80221334 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      If  00000064  >=  00000064 
	         ExecWait $Script_80221414 
	         Return
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00920001 
	         ExecWait DoDeath 
	         Return
	      EndIf
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      SetConst  *Var[2]  00920001 
	      ExecWait DoScareAway 
	      Return
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoBlowAway 
	      Return
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_802212E4
	Call     RandInt     	( 00000064 *Var[0] )
	If  *Var[0]  <=  00000064 
	   ExecWait $Script_80221414 
	   Return
	EndIf
	Return
	End

#new:Script $Script_80221334
	Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
	Call     PlaySoundAtActor 	( .Actor:Self 00002073 )
	Thread
	   Wait     0000000F 
	   Call     SetAnimation 	( .Actor:Self 00000001 00920001 )
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Add  *Var[0]  00000005 
	   Add  *Var[1]  00000014 
	   Add  *Var[2]  0000000A 
	   Call     MakeItemEntity ( .Item:WhackasBump *Var[0] *Var[1] *Var[2] 0000000C 00000000 )
	EndThread
	Return
	End

#new:Script $Script_80221414
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
	Call     SetAnimation 	( .Actor:Self 00000001 00920003 )
	Wait     00000028 
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	If  *Var[0]  !=  00000000 
	   Call     SetBattleFlagBits2 	( 10000000 .True )
	EndIf
	Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .True )
	Call     SetActorFlagBits 	( .Actor:Self 00600001 .True )
	Call     RemoveActor 	( .Actor:Self )
	Return
	End

PADDING: 8022150C to 80221510 (004D96FC to 004D9700)
00000000 

#new:Script $Script_BeforeBattle_80221510
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     802C9308 ( 0000000D 00000000 )
	Return
	End

#new:Script $Script_AfterBattle_80221544
	Return
	End

#new:ForegroundModelList $ForegroundModelList_80221554
00000017 00000018 00000000 

#new:Stage $Stage_80221560
$ASCII_802223AC  % iwa_tex
$ASCII_8022239C  % iwa_bt01_shape
$ASCII_8022238C  % iwa_bt01_hit
$Script_BeforeBattle_80221510 
$Script_AfterBattle_80221544 
$ASCII_80222384  % iwa_bg
$ForegroundModelList_80221554 
00000000 
00000000 
00000000 

PADDING: 80221588 to 80221590 (004D9778 to 004D9780)
00000000 00000000 

#new:Script $Script_BeforeBattle_80221590
	Call     SetSpriteShading 	( FFFFFFFF )
	Return
	End

#new:Script $Script_AfterBattle_802215B0
	Return
	End

#new:ForegroundModelList $ForegroundModelList_802215C0
00000011 00000010 00000000 

#new:Stage $Stage_802215CC
$ASCII_802223DC  % iwa_tex
$ASCII_802223CC  % iwa_bt02_shape
$ASCII_802223BC  % iwa_bt02_hit
$Script_BeforeBattle_80221590 
$Script_AfterBattle_802215B0 
$ASCII_802223B4  % iwa_bg
$ForegroundModelList_802215C0 
00000000 
00000000 
00000000 

#new:Unknown $???_802215F4
00000000 00000000 00000000 $WhackaC $???_802215F4 00000000 00000000 00000000 
00000000 00000000 

% Origin: HINT
#new:IdleAnimations $IdleAnimations_8022161C
.Status:Normal    00920001
.Status:Stone     00920000
.Status:Sleep     00920001
.Status:Poison    00920001
.Status:Stop      00920000
.Status:Static    00920001
.Status:Paralyze  00920000
.Status:Dizzy     00920001
.Status:Fear      00920001
.Status:End

% Origin: HINT
#new:DefenseTable $DefenseTable_80221668
.Element:Normal 00000000
.Element:End

% Origin: HINT
#new:StatusTable $StatusTable_80221674
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

% Origin: HINT
#new:SpriteTable $SpriteTable_80221720
00800000 01000000 001E00FF $IdleAnimations_8022161C $DefenseTable_80221668 00000000 00000000 00FB0000 00000000 

% Origin: HINT
#new:Actor $WhackaC
% stats
[Index]        D0b 
[Level]         0`b 
[MaxHP]        99`b 
[Coins]         0`b 
[Flags]       00040004 
[StatusTable] $StatusTable_80221674 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80221720 
[Script]      $Script_Init_8022176C 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  50`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         47`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -20`b  40`b % dx dy
[StatusIcon]   10`b  30`b % dx dy

% Origin: HINT
#new:Script $Script_Init_8022176C
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80222000 )
	Call     BindIdle    	( .Actor:Self $Script_Idle_80221828 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022185C )
	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	Call     $Function_802181C0 ( )
	If  *Var[0]  ==  00000000 
	   Call     SetActorFlagBits 	( .Actor:Self 00600001 .True )
	   Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .True )
	EndIf
	Return
	End

% Origin: HINT
#new:Script $Script_Idle_80221828
	Label    00000000 
	Wait     00000001 
	Goto     00000000 
	Return
	End

% Origin: HINT
#new:Script $Script_HandleEvent_8022185C
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   Case  ==  .Event:HitCombo
	      Call     PlaySoundAtActor 	( .Actor:Self 00002073 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoNormalHit 
	   Case  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920004 
	      ExecWait $Script_80222050 
	      ExecWait DoNormalHit 
	      Call     RandInt     	( 00000064 *Var[0] )
	      If  *Var[0]  <=  00000064 
	         ExecWait $Script_80222130 
	         Return
	      EndIf
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      SetConst  *Var[2]  00920001 
	      ExecWait $Script_80222050 
	      ExecWait DoNormalHit 
	      Call     RandInt     	( 00000064 *Var[0] )
	      If  *Var[0]  <=  00000064 
	         ExecWait $Script_80222130 
	         Return
	      EndIf
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      SetConst  *Var[2]  00920001 
	      ExecWait $Script_80222050 
	      ExecWait DoNormalHit 
	      If  00000064  >=  00000064 
	         ExecWait $Script_80222130 
	         Return
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00920001 
	         ExecWait DoDeath 
	         Return
	      EndIf
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait 8029B998 
	      Call     RandInt     	( 00000064 *Var[0] )
	      If  *Var[0]  <=  00000064 
	         ExecWait $Script_80222130 
	         Return
	      EndIf
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait 8029B998 
	      If  00000064  >=  00000064 
	         ExecWait $Script_80222130 
	         Return
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00920001 
	         ExecWait DoDeath 
	         Return
	      EndIf
	   Case  ==  .Event:ShockHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait 8029BD70 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoReturnHome 
	   Case  ==  .Event:ShockDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoDeath 
	      Return
	   Case  ==  00000017
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoImmune 
	   Case  ==  .Event:Immune
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoImmune 
	      Call     RandInt     	( 00000064 *Var[0] )
	      If  *Var[0]  <=  00000064 
	         ExecWait $Script_80222130 
	         Return
	      EndIf
	   Case  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoImmune 
	      Call     RandInt     	( 00000064 *Var[0] )
	      If  *Var[0]  <=  00000064 
	         ExecWait $Script_80222130 
	         Return
	      EndIf
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920004 
	      ExecWait $Script_80222050 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      If  00000064  >=  00000064 
	         ExecWait $Script_80222130 
	         Return
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00920001 
	         ExecWait DoDeath 
	         Return
	      EndIf
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      SetConst  *Var[2]  00920001 
	      ExecWait DoScareAway 
	      Return
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00920001 
	      ExecWait DoBlowAway 
	      Return
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

% Origin: HINT
#new:Script $Script_TakeTurn_80222000
	Call     RandInt     	( 00000064 *Var[0] )
	If  *Var[0]  <=  00000064 
	   ExecWait $Script_80222130 
	   Return
	EndIf
	Return
	End

% Origin: HINT
#new:Script $Script_80222050
	Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
	Call     PlaySoundAtActor 	( .Actor:Self 00002073 )
	Thread
	   Wait     0000000F 
	   Call     SetAnimation 	( .Actor:Self 00000001 00920001 )
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Add  *Var[0]  00000005 
	   Add  *Var[1]  00000014 
	   Add  *Var[2]  0000000A 
	   Call     MakeItemEntity ( .Item:WhackasBump *Var[0] *Var[1] *Var[2] 0000000C 00000000 )
	EndThread
	Return
	End

% Origin: HINT
#new:Script $Script_80222130
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
	Call     SetAnimation 	( .Actor:Self 00000001 00920003 )
	Wait     00000028 
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	If  *Var[0]  !=  00000000 
	   Call     SetBattleFlagBits2 	( 10000000 .True )
	EndIf
	Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020000 .True )
	Call     SetActorFlagBits 	( .Actor:Self 00600001 .True )
	Call     RemoveActor 	( .Actor:Self )
	Return
	End

PADDING: 80222228 to 80222230 (004DA418 to 004DA420)
00000000 00000000 

#new:SJIS $SJIS_80222230
% koburon
83528375 838D8393 00000000 

#new:SJIS $SJIS_8022223C
% ge-ha-
8351815B 836E815B 00000000 

#new:SJIS $SJIS_80222248
% choropu-,shin'emon,choropu-
83608387 838D8376 815B2C83 56839383 47838283 932C8360 8387838D 8376815B 
00000000 

#new:SJIS $SJIS_8022226C
% choropu-x2,shin'emon
83608387 838D8376 815B7882 512C8356 83938347 83828393 00000000 

#new:SJIS $SJIS_80222288
% choropu-,shin'emon
83608387 838D8376 815B2C83 56839383 47838283 93000000 

#new:SJIS $SJIS_802222A0
% choropu-x4
83608387 838D8376 815B7882 53000000 

#new:SJIS $SJIS_802222B0
% choropu-x3
83608387 838D8376 815B7882 52000000 

#new:SJIS $SJIS_802222C0
% choropu-x2
83608387 838D8376 815B7882 51000000 

#new:SJIS $SJIS_802222D0
% choropu-
83608387 838D8376 815B0000 

#new:SJIS $SJIS_802222DC
% shin'emon,choropu-x2
83568393 83478382 83932C83 60838783 8D837681 5B788251 00000000 

#new:SJIS $SJIS_802222F8
% shin'emon,choropu-
83568393 83478382 83932C83 60838783 8D837681 5B000000 

#new:SJIS $SJIS_80222310
% shin'emonx3
83568393 83478382 83937882 52000000 

#new:SJIS $SJIS_80222320
% shin'emonx2
83568393 83478382 83937882 51000000 

#new:SJIS $SJIS_80222330
% shin'emon
83568393 83478382 83930000 

#new:ASCII $ASCII_8022233C
iwa_02

#new:ASCII $ASCII_80222344
iwa_01b

#new:ASCII $ASCII_8022234C
iwa_01

#new:ASCII $ASCII_80222354
iwa_bg

#new:ASCII $ASCII_8022235C
iwa_bt01_hit

#new:ASCII $ASCII_8022236C
iwa_bt01_shape

#new:ASCII $ASCII_8022237C
iwa_tex

#new:ASCII $ASCII_80222384
iwa_bg

#new:ASCII $ASCII_8022238C
iwa_bt01_hit

#new:ASCII $ASCII_8022239C
iwa_bt01_shape

#new:ASCII $ASCII_802223AC
iwa_tex

#new:ASCII $ASCII_802223B4
iwa_bg

#new:ASCII $ASCII_802223BC
iwa_bt02_hit

#new:ASCII $ASCII_802223CC
iwa_bt02_shape

#new:ASCII $ASCII_802223DC
iwa_tex

PADDING: 802223E4 to 802223F0 (004DA5D4 to 004DA5E0)
00000000 00000000 00000000 

