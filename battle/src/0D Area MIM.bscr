% Script File: 0D Area MIM.bscr
% Decoded from: 4F7BE0 to 4FEA50 (0D Area MIM)

#new:Function $Function_80218000
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S3, V0, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S2, V0, R0
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S2, F14
	NOP
	CVT.S.W   F14, F14
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A2, F0
	JAL       802D7460
	DADDU     A3, V0, R0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28

#new:Function $Function_802180B4
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S3, V0, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S2, V0, R0
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MTC1      S2, F14
	NOP
	CVT.S.W   F14, F14
	MTC1      S0, F0
	NOP
	CVT.S.W   F0, F0
	MFC1      A2, F0
	JAL       802D74C0
	DADDU     A3, V0, R0
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28

PADDING: 80218168 to 80218170 (004F7D48 to 004F7D50)
00000000 00000000 

#new:Function $Function_80218170
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S3, V0, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S2, V0, R0
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	LW        A0, 148 (S1)
	JAL       {Func:GetActor}
	DADDU     S1, V0, R0
	DADDU     V1, V0, R0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28

#new:Function $Function_8021823C
	ADDIU     SP, SP, FFC8
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S3, V0, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S4, V0, R0
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S2, V0, R0
	MTC1      V0, F20
	NOP
	CVT.S.W   F20, F20
	JAL       {Func:CosDeg}
	MOV.S     F12, F20
	MTC1      S2, F22
	NOP
	CVT.S.W   F22, F22
	MUL.S     F0, F22, F0
	NOP
	MOV.S     F12, F20
	MTC1      S3, F20
	NOP
	CVT.S.W   F20, F20
	ADD.S     F20, F20, F0
	JAL       {Func:SinDeg}
	ADDIU     S0, S0, 4
	MUL.S     F22, F22, F0
	NOP
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	MFC1      A2, F20
	MTC1      S4, F20
	NOP
	CVT.S.W   F20, F20
	JAL       {Func:SetFloatVariable}
	SUB.S     F20, F20, F22
	LW        A1, 0 (S0)
	MFC1      A2, F20
	JAL       {Func:SetFloatVariable}
	DADDU     A0, S1, R0
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 38

PADDING: 80218358 to 80218360 (004F7F38 to 004F7F40)
00000000 00000000 

#new:Function $Function_80218360
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       8011BB50
	NOP
	ADDIU     A0, R0, 3B6
	JAL       8011BB74
	ADDIU     A1, R0, 3E8
	ADDIU     A0, R0, 10
	DADDU     A1, A0, R0
	DADDU     A2, A0, R0
	JAL       8011BB88
	ADDIU     A3, R0, FF
	LIA       V0, 800B1D80
	ADDIU     V1, R0, 14
	SH        V1, 584 (V0)
	SH        V1, 586 (V0)
	ADDIU     V1, R0, 1C
	SH        V1, 588 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18

PADDING: 802183BC to 802183C0 (004F7F9C to 004F7FA0)
00000000 

#new:DefenseTable $DefenseTable_802183C0
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_802183CC
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      95`
.Status:Poison     90`
.Status:Frozen      0`
.Status:Dizzy      90`
.Status:Fear        0`
.Status:Static     70`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_80218478
00800000 01000000 001400FF $IdleAnimations_802184C4 $DefenseTable_802183C0 00000000 00000000 00F60000 00000000 

#new:Actor $ForestFuzzy
% stats
[Index]        1Ab 
[Level]        11`b 
[MaxHP]         6`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_802183CC 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80218478 
[Script]      $Script_Init_80218510 
% move effectiveness
[Escape]       40`b 
[Item]         85`b 
[AirLift]      90`b 
[Hurricane]    90`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         33`b  28`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_802184C4
.Status:Normal    002B0101
.Status:Stone     002B0100
.Status:Sleep     002B010E
.Status:Poison    002B0101
.Status:Stop      002B0100
.Status:Static    002B0101
.Status:Paralyze  002B0100
.Status:Dizzy     002B010F
.Status:Fear      002B010F
.Status:End

#new:Script $Script_Init_80218510
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021A61C )
	Call     BindIdle    	( .Actor:Self $Script_Idle_80218574 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80218584 )
	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	Return
	End

#new:Script $Script_Idle_80218574
	Return
	End

#new:Script $Script_HandleEvent_80218584
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      Call     GetLastElement ( *Var[0] )
	      If  *Var[0]  &  00000020 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  002B0113 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  002B0108 
	      EndIf
	      ExecWait DoNormalHit 
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0110 
	      SetConst  *Var[2]  002B0112 
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0110 
	      SetConst  *Var[2]  002B0112 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0112 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0108 
	      ExecWait 8029B998 
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0108 
	      ExecWait 8029B998 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0108 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:ShockHit
	      Call     80269470 ( )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0113 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0113 
	      ExecWait 8029BD70 
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0103 
	      ExecWait 8029C0A4 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	   Case  ==  .Event:ShockDeath
	      Call     80269470 ( )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0113 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0113 
	      ExecWait DoDeath 
	      Return
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0101 
	      ExecWait DoImmune 
	   EndCaseGroup
	   Case  ==  .Event:Death
	      Call     GetLastElement ( *Var[0] )
	      If  *Var[0]  &  00000020 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  002B0113 
	         ExecWait DoNormalHit 
	         Wait     0000000A 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  002B0113 
	         ExecWait DoDeath 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  002B0108 
	         ExecWait DoNormalHit 
	         Wait     0000000A 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  002B0108 
	         ExecWait DoDeath 
	      EndIf
	      Return
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0101 
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0103 
	      SetConst  *Var[2]  002B0109 
	      ExecWait DoScareAway 
	      Return
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0103 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0103 
	      ExecWait DoBlowAway 
	      Return
	   Case  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002B0101 
	      ExecWait DoImmune 
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_80218C48
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     UseCamPreset 	( 00000013 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
	Call     SetCamZoom  	( 0000014A )
	Call     SetCamOffsetZ 	( 0000001E )
	Call     MoveCamOver 	( 00000014 )
	Wait     00000014 
	Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	Call     UseCamPreset 	( 00000001 )
	Thread
	   Wait     0000001E 
	   Call     PlaySoundAtActor 	( .Actor:Self 0000206E )
	   Wait     0000001E 
	   Loop     00000004 
	      Call     PlaySoundAtActor 	( .Actor:Self 0000206F )
	      Wait     0000000B 
	   EndLoop
	   Call     PlaySoundAtActor 	( .Actor:Self 00002070 )
	EndThread
	Call     SetAnimation 	( .Actor:Self 00000001 002B010D )
	Wait     00000082 
	Call     SetAnimation 	( .Actor:Self 00000001 002B0102 )
	Call     SummonEnemy 	( $SpecialFormation_8021A800 00000000 )
	Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
	Call     SetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
	Call     SetGoalToIndex ( *Var[0] *Var[A] )
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 00000014 )
	Thread
	   Call     SetAnimation 	( .Actor:Self 00000001 002B0102 )
	   Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.4003906] )
	   Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
	   Call     SetGoalToPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
	   Call     JumpToGoal  	( .Actor:Self 0000000E 00000000 00000001 00000000 )
	EndThread
	Wait     00000001 
	Call     SetAnimation 	( *Var[0] 00000001 002B0102 )
	Call     SetActorJumpscale 	( *Var[0] *Fixed[1.4003906] )
	Call     JumpToGoal  	( *Var[0] 0000000E 00000000 00000001 00000000 )
	Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
	Call     ForceHomePos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
	Call     HPBarToHome 	( *Var[0] )
	Call     SetAnimation 	( *Var[0] 00000001 002B0101 )
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
	Switch  *Var[1] 
	   Case  ==  00000000 
	      Call     SetActorVar 	( *Var[0] 00000000 00000001 )
	   Case  ==  00000001 
	      Call     SetActorVar 	( *Var[0] 00000000 00000002 )
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_80219054
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     SetGoalToTarget 	( .Actor:Self )
	   Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Add  *Var[0]  00000032 
	   Set  *Var[1]  00000000 
	   Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Goto     00000064 
	EndIf
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetAnimation 	( .Actor:Self 00000001 002B0103 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  00000032 
	Set  *Var[1]  00000000 
	Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	ExecWait 8029C12C 
	Call     SetAnimation 	( .Actor:Self 00000001 002B0101 )
	Label    00000064 
	Call     8026BA04 ( FFFFFF81 00000000 0000000A 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 002B0104 )
	Call     8026BA04 ( FFFFFF81 00000000 00000009 00000000 )
	Wait     00000001 
	Call     8026BA04 ( FFFFFF81 00000000 00000008 00000000 )
	Wait     00000005 
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 08000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000005 
	      Set  *Var[1]  00000000 
	      Sub  *Var[2]  00000005 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 002B0105 )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000B 00000000 00000001 00000000 )
	      Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 002B0109 )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000014 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  0000000F 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Wait     00000004 
	      Wait     00000005 
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Wait     00000005 
	      Call     UseCamPreset 	( 00000002 )
	      Call     8027D7F0 ( )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     SetAnimation 	( .Actor:Self 00000001 002B0103 )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	      ExecWait 8029C12C 
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	   Case  ==  00000007 
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  &  00002000 
	         Set  *Flag[00]  00000000 
	      Else
	         Set  *Flag[00]  00000001 
	      EndIf
	EndSwitch
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     AddToGoalPos 	( .Actor:Self FFFFFFFD FFFFFFF4 FFFFFFF1 )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
	Call     SetAnimation 	( .Actor:Self 00000001 002B0105 )
	Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	If  *Flag[00]  ==  00000001 
	   Call     DamageTarget 	( .Actor:Self *Var[0] 08000000 00000000 00000000 00000000 00000020 )
	   Return
	EndIf
	Wait     0000000A 
	Call     UseIdleAnimation 	( .Actor:Player .False )
	Call     SetAnimation 	( .Actor:Player 00000000 0003000C )
	Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
	Call     SetAnimation 	( .Actor:Self 00000001 002B0107 )
	Wait     00000015 
	Call     SetAnimation 	( .Actor:Self 00000001 002B0100 )
	Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000014A )
	Call     PlaySoundAtActor 	( .Actor:Self 000003E0 )
	Call     8026BA04 ( FFFFFF81 FFFFFFFD FFFFFFFE 00000000 )
	Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	Wait     00000001 
	Call     SetActorScale 	( .Actor:Self *Fixed[0.9003906] *Fixed[1.2001953] *Fixed[1.0] )
	Wait     00000001 
	Call     SetActorScale 	( .Actor:Self *Fixed[0.80078125] *Fixed[1.3007812] *Fixed[1.0] )
	Wait     00000001 
	Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
	Wait     00000001 
	Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
	Wait     00000002 
	Call     SetActorScale 	( .Actor:Self *Fixed[0.60058594] *Fixed[1.6005859] *Fixed[1.0] )
	Wait     0000000A 
	Wait     00000002 
	Call     UseIdleAnimation 	( .Actor:Player .True )
	Call     DamageTarget 	( .Actor:Self *Var[A] 08000000 00000000 00000000 00000001 00000020 )
	Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 002B0101 )
	Call     UseCamPreset 	( 00000002 )
	Call     GetLastDamage 	( .Actor:Player *Var[3] )
	If  *Var[3]  !=  00000000 
	   Call     PlaySoundAtActor 	( .Actor:Self 0000206D )
	   Call     PlaySoundAtActor 	( .Actor:Self 00000214 )
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Add  *Var[1]  0000000A 
	   Call     $Function_80218000 ( *Var[0] *Var[1] *Var[2] *Var[3] )
	   Thread
	      Wait     0000000F 
	      Call     PlaySoundAtActor 	( .Actor:Self 0000025C )
	      Call     $Function_802180B4 ( *Var[0] *Var[1] *Var[2] *Var[3] )
	   EndThread
	   Add  *Var[0]  00000014 
	   Add  *Var[1]  00000014 
	   Call     PlayEffect  	( {FX:Recover:HP} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Call     GetActorHP  	( .Actor:Self *Var[0] )
	   Add  *Var[0]  *Var[3] 
	   Call     SetEnemyHP  	( .Actor:Self *Var[0] )
	EndIf
	Thread
	   Call     SetActorScale 	( .Actor:Self *Fixed[1.6005859] *Fixed[0.60058594] *Fixed[1.0] )
	   Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000A 00000000 )
	   Wait     00000001 
	   Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000014A )
	   Wait     00000001 
	   Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.5] *Fixed[1.0] )
	   Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000012C )
	   Wait     00000001 
	   Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000010E )
	   Wait     00000001 
	   Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[0.7001953] *Fixed[1.0] )
	   Call     SetActorRotation 	( .Actor:Self 00000000 00000000 000000F0 )
	   Wait     00000001 
	   Call     SetActorRotation 	( .Actor:Self 00000000 00000000 000000D2 )
	   Wait     00000001 
	   Call     SetActorScale 	( .Actor:Self *Fixed[0.7001953] *Fixed[1.4003906] *Fixed[1.0] )
	   Call     SetActorRotation 	( .Actor:Self 00000000 00000000 000000B4 )
	   Wait     00000002 
	   Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[0.7001953] *Fixed[1.0] )
	   Wait     00000002 
	   Call     SetActorScale 	( .Actor:Self *Fixed[1.2001953] *Fixed[0.5] *Fixed[1.0] )
	EndThread
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  00000028 
	Set  *Var[1]  00000000 
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	Call     SetActorScale 	( .Actor:Self *Fixed[1.4003906] *Fixed[0.20019531] *Fixed[1.0] )
	Wait     00000001 
	Thread
	   Wait     00000001 
	   Call     SetActorScale 	( .Actor:Self *Fixed[1.2001953] *Fixed[0.5] *Fixed[1.0] )
	   Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000096 )
	   Wait     00000001 
	   Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	   Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000078 )
	   Wait     00000001 
	   Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000005A )
	   Wait     00000001 
	   Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000003C )
	   Wait     00000001 
	   Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000001E )
	   Wait     00000001 
	   Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	   Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	EndThread
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  0000001E 
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	Wait     00000005 
	Call     8027D7F0 ( )
	Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 002B0103 )
	Call     SetGoalToHome 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	ExecWait 8029C12C 
	Call     SetAnimation 	( .Actor:Self 00000001 002B0101 )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021A0D4
	Set  *Flag[01]  00000000 
	Set  *Flag[02]  00000000 
	Set  *Flag[03]  00000000 
	Set  *Flag[04]  00000000 
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[5] )
	Call     GetIndexFromHome 	( *Var[0] *Var[5] )
	Mod  *Var[5]  00000004 
	Switch  *Var[5] 
	   Case  ==  00000000 
	      Set  *Flag[01]  00000001 
	   Case  ==  00000001 
	      Set  *Flag[02]  00000001 
	   Case  ==  00000002 
	      Set  *Flag[03]  00000001 
	   Case  ==  00000003 
	      Set  *Flag[04]  00000001 
	EndSwitch
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	Set  *Var[A]  FFFFFFFF 
	Set  *Var[B]  FFFFFFFF 
	Call     GetIndexFromHome 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      If  *Flag[02]  ==  00000000 
	         Set  *Var[A]  00000001 
	      EndIf
	   Case  ==  00000001 
	      If  *Flag[01]  ==  00000000 
	         Set  *Var[A]  00000000 
	      EndIf
	      If  *Flag[03]  ==  00000000 
	         If  *Var[A]  ==  FFFFFFFF 
	            Set  *Var[A]  00000002 
	         Else
	            Set  *Var[B]  00000002 
	         EndIf
	      EndIf
	   Case  ==  00000002 
	      If  *Flag[02]  ==  00000000 
	         Set  *Var[A]  00000001 
	      EndIf
	      If  *Flag[04]  ==  00000000 
	         If  *Var[A]  ==  FFFFFFFF 
	            Set  *Var[A]  00000003 
	         Else
	            Set  *Var[B]  00000003 
	         EndIf
	      EndIf
	   Case  ==  00000003 
	      If  *Flag[03]  ==  00000000 
	         Set  *Var[A]  00000002 
	      EndIf
	EndSwitch
	If  *Var[B]  !=  FFFFFFFF 
	   Call     RandInt     	( 000003E8 *Var[0] )
	   If  *Var[0]  <  000001F4 
	      Set  *Var[A]  *Var[B] 
	   EndIf
	EndIf
	Return
	End

#new:Script $Script_8021A45C
	Set  *Var[9]  00000000 
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetActorType 	( *Var[0] *Var[2] )
	Switch  *Var[2] 
	   CaseOR  ==  0000001A 
	   CaseOR  ==  00000029 
	      Call     GetStatusFlags ( *Var[0] *Var[3] )
	      If  *Var[3]  !&  0035D000 
	         Call     GetActorVar 	( *Var[0] 00000000 *Var[3] )
	         If  *Var[3]  !=  00000002 
	            Add  *Var[9]  00000001 
	         EndIf
	      EndIf
	   EndCaseGroup
	   Case  ==  0000002A 
	      Call     GetStatusFlags ( *Var[0] *Var[3] )
	      If  *Var[3]  !&  0035D000 
	         Call     GetActorVar 	( *Var[0] 00000001 *Var[3] )
	         If  *Var[3]  <  00000002 
	            Add  *Var[9]  00000001 
	         EndIf
	      EndIf
	EndSwitch
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	Return
	End

#new:Script $Script_TakeTurn_8021A61C
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   ExecWait $Script_80219054 
	   Return
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	If  *Var[0]  ==  00000002 
	   ExecWait $Script_80219054 
	   Return
	EndIf
	ExecWait $Script_8021A0D4 
	If  *Var[A]  ==  FFFFFFFF 
	   ExecWait $Script_80219054 
	   Return
	EndIf
	ExecWait $Script_8021A45C 
	Switch  *Var[9] 
	   Case  ==  00000001 
	      Call     RandInt     	( 000003E8 *Var[0] )
	      If  *Var[0]  <  0000012C 
	         ExecWait $Script_80218C48 
	         Return
	      EndIf
	   Case  ==  00000002 
	      Call     RandInt     	( 000003E8 *Var[0] )
	      If  *Var[0]  <  00000096 
	         ExecWait $Script_80218C48 
	         Return
	      EndIf
	   Case  ==  00000003 
	      Call     RandInt     	( 000003E8 *Var[0] )
	      If  *Var[0]  <  00000064 
	         ExecWait $Script_80218C48 
	         Return
	      EndIf
	EndSwitch
	ExecWait $Script_80219054 
	Return
	End

#new:Vector3D $Vector3D_8021A7F4
0` -1000` 0`

#new:SpecialFormation $SpecialFormation_8021A800
$ForestFuzzy $Vector3D_8021A7F4 00000000 00000000 00000000 00000000 00000000 

PADDING: 8021A81C to 8021A820 (004FA3FC to 004FA400)
00000000 

#new:IdleAnimations $IdleAnimations_8021A820
.Status:Normal    004B0001
.Status:Stone     004B0000
.Status:Sleep     004B0009
.Status:Poison    004B0001
.Status:Stop      004B0000
.Status:Static    004B0001
.Status:Paralyze  004B0000
.Status:Dizzy     004B000A
.Status:Fear      004B000A
.Status:End

#new:DefenseTable $DefenseTable_8021A86C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021A878
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   90`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021A924
00800000 01000000 F92100FF $IdleAnimations_8021A820 $DefenseTable_8021A86C 00000000 00000000 02F60000 00000000 
00120001 02000000 001800FF $IdleAnimations_8021A820 $DefenseTable_8021A86C 00000000 00000000 FFFB0000 00000000 
00120001 03000000 001800FF $IdleAnimations_8021A820 $DefenseTable_8021A86C 00000000 00000000 FFFB0000 00000000 
00120001 04000000 001800FF $IdleAnimations_8021A820 $DefenseTable_8021A86C 00000000 00000000 FFFB0000 00000000 
00120001 05000000 001800FF $IdleAnimations_8021A820 $DefenseTable_8021A86C 00000000 00000000 FFFB0000 00000000 
00120001 06000000 001800FF $IdleAnimations_8021A820 $DefenseTable_8021A86C 00000000 00000000 FFFB0000 00000000 

#new:Actor $Bzzap
% stats
[Index]        31b 
[Level]        19`b 
[MaxHP]         3`b 
[Coins]         1`b 
[Flags]       00000200 
[StatusTable] $StatusTable_8021A878 
% ai
[SpriteCount]   6`s 
[SpriteTable] $SpriteTable_8021A924 
[Script]      $Script_Init_8021AA24 
% move effectiveness
[Escape]       40`b 
[Item]         70`b 
[AirLift]      95`b 
[Hurricane]    95`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         38`b  38`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Script $Script_Init_8021AA24
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021D28C )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8021AB10 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021ACA8 )
	Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	Call     SetSpriteScale ( .Actor:Self 00000004 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	Call     SetSpriteScale ( .Actor:Self 00000005 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	Return
	End

#new:Script $Script_Idle_8021AB10
	Label    00000000 
	Call     GetStatusFlags ( .Actor:Self *Var[A] )
	If  *Var[A]  &  00041000 
	   Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFF9 00000013 )
	   Call     8027D4C8 ( FFFFFF81 00000001 00000002 FFFFFFFA )
	   Call     $Function_80218170 ( FFFFFFEC 00000014 0000000A 0000001B )
	Else
	   Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFF9 00000021 )
	   Call     8027D4C8 ( FFFFFF81 00000001 00000002 FFFFFFF6 )
	   Call     $Function_80218170 ( FFFFFFF0 00000016 00000004 00000016 )
	EndIf
	Wait     00000001 
	Goto     00000000 
	Return
	End

#new:Script $Script_8021AC20
	Call     SetSpriteRotation 	( .Actor:Self 00000001 00000000 00000000 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 004B0003 )
	Call     SetGoalToHome 	( .Actor:Self )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:SinOut )
	Return
	End

#new:Script $Script_HandleEvent_8021ACA8
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  004B0006 
	      ExecWait DoNormalHit 
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  004B0007 
	      SetConst  *Var[2]  004B0008 
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  004B0007 
	      SetConst  *Var[2]  004B0008 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  004B0008 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  004B0006 
	      ExecWait 8029B998 
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  004B0006 
	      ExecWait 8029B998 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  004B000B 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:ShockHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  004B0006 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  004B0006 
	      ExecWait 8029BD70 
	      ExecWait $Script_8021AC20 
	   Case  ==  .Event:ShockDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  004B0006 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  004B000B 
	      ExecWait DoDeath 
	      Return
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	   CaseOR  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  004B0001 
	      ExecWait DoImmune 
	   EndCaseGroup
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  004B0006 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  004B000B 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:BeginFirstStrike
	      Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
	      Call     HPBarToCurrent ( .Actor:Self )
	   Case  ==  .Event:EndFirstStrike
	      ExecWait $Script_8021AC20 
	      Call     HPBarToHome 	( .Actor:Self )
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  004B0001 
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  004B0003 
	      SetConst  *Var[2]  004B0006 
	      ExecWait DoScareAway 
	      Return
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  004B0001 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  !&  0035D000 
	         If  *Var[0]  &  00080000 
	            Call     8026BA04 ( FFFFFF81 00000000 00000003 00000000 )
	         Else
	            Call     8026BA04 ( FFFFFF81 00000000 00000009 00000000 )
	         EndIf
	      EndIf
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  004B0006 
	      ExecWait DoBlowAway 
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021B28C
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 004B0003 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     AddToGoalPos 	( .Actor:Self 00000034 0000000A 00000000 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFFC .Easing:CosIn )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Wait     0000000A 
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[0]  00000014 
	      Add  *Var[2]  00000001 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	      Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
	      Wait     00000005 
	      Call     PlaySoundAtActor 	( .Actor:Self 000020CA )
	      Call     SetAnimation 	( .Actor:Self 00000001 004B0004 )
	      Wait     0000000A 
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Wait     0000000F 
	      Call     UseCamPreset 	( 00000002 )
	      Call     8027D7F0 ( )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      ExecWait $Script_8021AC20 
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Wait     0000000A 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  00000014 
	Add  *Var[2]  00000001 
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
	Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
	Wait     00000005 
	Call     PlaySoundAtActor 	( .Actor:Self 000020CA )
	Call     SetAnimation 	( .Actor:Self 00000001 004B0004 )
	Wait     00000006 
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 80020328 00000006 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Wait     00000014 
	      Call     8027D7F0 ( )
	      ExecWait $Script_8021AC20 
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021B77C
	Set  *Var[9]  *Var[0] 
	Call     8026B438 ( FFFFFF81 *Var[9] 00000000 )
	Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Add  *Var[A]  000000C8 
	Add  *Var[B]  00000064 
	Call     SetSpritePos 	( .Actor:Self *Var[9] *Var[A] *Var[B] *Var[C] )
	Call     SetSpriteFlagBits 	( .Actor:Self *Var[9] 00000001 .False )
	Call     SetAnimation 	( .Actor:Self *Var[9] 004B0003 )
	Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Add  *Var[B]  00000032 
	Sub  *Var[C]  0000001E 
	Call     SetSpriteSpeed ( .Actor:Self *Var[9] *Fixed[6.0] )
	Call     SetSpriteJumpscale 	( .Actor:Self *Var[9] *Fixed[1.0] )
	Call     MoveSpriteTo 	( .Actor:Self *Var[9] *Var[A] *Var[B] *Var[C] 00000000 FFFFFFF6 .Easing:Linear )
	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     GetSpriteOffset 	( .Actor:Self *Var[9] *Var[6] *Var[7] *Var[8] )
	Call     MakeLerp    	( 0000005A 000001C2 00000032 00000000 )
	Label    00000000 
	Call     UpdateLerp  	( )
	Call     $Function_8021823C ( *Var[3] *Var[5] 0000001E *Var[0] *Var[6] *Var[8] )
	Call     SetSpritePos 	( .Actor:Self *Var[9] *Var[6] *Var[7] *Var[8] )
	If  *Var[3]  >  *Var[6] 
	   Call     8026B438 ( FFFFFF81 *Var[9] 000000B4 )
	Else
	   Call     8026B438 ( FFFFFF81 *Var[9] 00000000 )
	EndIf
	Wait     00000001 
	If  *Var[1]  ==  00000001 
	   Goto     00000000 
	EndIf
	Call     8026B438 ( FFFFFF81 *Var[9] 00000000 )
	If  *Var[9]  ==  00000002 
	   Call     UseCamPreset 	( 00000008 )
	   Call     SetCamZoom  	( 00000190 )
	   Call     SetCamOffsetZ 	( 0000001E )
	   Call     CamTargetActor ( .Actor:Player )
	   Call     MoveCamOver 	( 0000003C )
	EndIf
	Call     SetAnimation 	( .Actor:Self *Var[9] 004B0003 )
	Call     GetActorPos 	( .Actor:Player *Var[A] *Var[B] *Var[C] )
	Add  *Var[B]  0000001E 
	Add  *Var[C]  0000001E 
	Call     SetSpriteSpeed ( .Actor:Self *Var[9] *Fixed[6.0] )
	Call     SetSpriteJumpscale 	( .Actor:Self *Var[9] *Fixed[1.0] )
	Call     MoveSpriteTo 	( .Actor:Self *Var[9] *Var[A] *Var[B] *Var[C] 00000000 FFFFFFF6 .Easing:Linear )
	Call     GetActorPos 	( .Actor:Player *Var[3] *Var[4] *Var[5] )
	Call     GetSpriteOffset 	( .Actor:Self *Var[9] *Var[6] *Var[7] *Var[8] )
	Call     MakeLerp    	( FFFFFFA6 FFFFFD30 00000064 00000000 )
	Label    00000001 
	Call     UpdateLerp  	( )
	Call     $Function_8021823C ( *Var[3] *Var[5] 0000001E *Var[0] *Var[6] *Var[8] )
	Call     SetSpritePos 	( .Actor:Self *Var[9] *Var[6] *Var[7] *Var[8] )
	If  *Var[3]  >  *Var[6] 
	   Call     8026B438 ( FFFFFF81 *Var[9] 000000B4 )
	Else
	   Call     8026B438 ( FFFFFF81 *Var[9] 00000000 )
	EndIf
	Wait     00000001 
	If  *Var[1]  ==  00000001 
	   Goto     00000001 
	EndIf
	Return
	End

#new:Script $Script_8021BC74
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     8026FA00 ( FFFFFF81 00000002 00000001 00000000 00000000 )
	Call     8026FA00 ( FFFFFF81 00000003 00000001 00000000 00000000 )
	Call     8026FA00 ( FFFFFF81 00000004 00000001 00000000 00000000 )
	Call     8026FA00 ( FFFFFF81 00000005 00000001 00000000 00000000 )
	Call     8026FA00 ( FFFFFF81 00000006 00000001 00000000 00000000 )
	Call     PlaySoundAtActor 	( .Actor:Self 000020CC )
	Call     SetActorAngle 	( .Actor:Self 000000B4 )
	Call     SetAnimation 	( .Actor:Self 00000001 004B0005 )
	Wait     00000028 
	Call     SetAnimation 	( .Actor:Self 00000001 004B0001 )
	Call     SetActorAngle 	( .Actor:Self 00000000 )
	Call     PlaySound   	( 00000358 )
	Set  *Var[0]  00000002 
	Exec     $Script_8021B77C *Var[A] 
	Wait     0000000B 
	Set  *Var[0]  00000003 
	Exec     $Script_8021B77C 
	Wait     0000000B 
	Set  *Var[0]  00000004 
	Exec     $Script_8021B77C 
	Wait     0000000B 
	Set  *Var[0]  00000005 
	Exec     $Script_8021B77C 
	Wait     0000000B 
	Set  *Var[0]  00000006 
	Exec     $Script_8021B77C 
	Label    00000000 
	DoesScriptExist *Var[A] *Var[0] 
	Wait     00000001 
	If  *Var[0]  ==  00000001 
	   Goto     00000000 
	EndIf
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Thread
	         Call     PlaySoundAtSprite 	( .Actor:Self 00000002 000020CB )
	         Call     SetAnimation 	( .Actor:Self 00000002 004B0004 )
	         Call     SetGoalToTarget 	( .Actor:Self )
	         Call     AddToGoalPos 	( .Actor:Self FFFFFFE2 FFFFFFEC 00000001 )
	         Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     SetSpriteSpeed ( .Actor:Self 00000002 *Fixed[3.0] )
	         Call     MoveSpriteTo 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
	         Call     SetAnimation 	( .Actor:Self 00000002 004B0003 )
	         Call     8026B438 ( FFFFFF81 00000002 000000B4 )
	         Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Add  *Var[1]  00000064 
	         Add  *Var[2]  00000064 
	         Call     AddActorDecoration 	( .Actor:Self 00000002 00000000 .Decoration:Sweat )
	         Call     MoveSpriteTo 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
	         Call     RemoveActorDecoration 	( .Actor:Self 00000002 00000000 )
	         Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
	      EndThread
	      Wait     0000000B 
	      Thread
	         Call     PlaySoundAtSprite 	( .Actor:Self 00000003 000020CB )
	         Call     SetAnimation 	( .Actor:Self 00000003 004B0004 )
	         Call     SetGoalToTarget 	( .Actor:Self )
	         Call     AddToGoalPos 	( .Actor:Self FFFFFFE2 FFFFFFEC 00000001 )
	         Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     SetSpriteSpeed ( .Actor:Self 00000003 *Fixed[3.0] )
	         Call     MoveSpriteTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
	         Call     SetAnimation 	( .Actor:Self 00000003 004B0003 )
	         Call     8026B438 ( FFFFFF81 00000003 000000B4 )
	         Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Add  *Var[1]  00000064 
	         Add  *Var[2]  00000064 
	         Call     AddActorDecoration 	( .Actor:Self 00000003 00000000 .Decoration:Sweat )
	         Call     MoveSpriteTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
	         Call     RemoveActorDecoration 	( .Actor:Self 00000003 00000000 )
	         Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
	      EndThread
	      Wait     0000000B 
	      Thread
	         Call     PlaySoundAtSprite 	( .Actor:Self 00000004 000020CB )
	         Call     SetAnimation 	( .Actor:Self 00000004 004B0004 )
	         Call     SetGoalToTarget 	( .Actor:Self )
	         Call     AddToGoalPos 	( .Actor:Self FFFFFFE2 FFFFFFEC 00000001 )
	         Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     SetSpriteSpeed ( .Actor:Self 00000004 *Fixed[3.0] )
	         Call     MoveSpriteTo 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
	         Call     SetAnimation 	( .Actor:Self 00000004 004B0003 )
	         Call     8026B438 ( FFFFFF81 00000004 000000B4 )
	         Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Add  *Var[1]  00000064 
	         Add  *Var[2]  00000064 
	         Call     AddActorDecoration 	( .Actor:Self 00000004 00000000 .Decoration:Sweat )
	         Call     MoveSpriteTo 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
	         Call     RemoveActorDecoration 	( .Actor:Self 00000004 00000000 )
	         Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00000001 .True )
	      EndThread
	      Wait     0000000B 
	      Thread
	         Call     PlaySoundAtSprite 	( .Actor:Self 00000005 000020CB )
	         Call     SetAnimation 	( .Actor:Self 00000005 004B0004 )
	         Call     SetGoalToTarget 	( .Actor:Self )
	         Call     AddToGoalPos 	( .Actor:Self FFFFFFE2 FFFFFFEC 00000001 )
	         Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     SetSpriteSpeed ( .Actor:Self 00000005 *Fixed[3.0] )
	         Call     MoveSpriteTo 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
	         Call     SetAnimation 	( .Actor:Self 00000005 004B0003 )
	         Call     8026B438 ( FFFFFF81 00000005 000000B4 )
	         Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Add  *Var[1]  00000064 
	         Add  *Var[2]  00000064 
	         Call     AddActorDecoration 	( .Actor:Self 00000005 00000000 .Decoration:Sweat )
	         Call     MoveSpriteTo 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
	         Call     RemoveActorDecoration 	( .Actor:Self 00000005 00000000 )
	         Call     SetSpriteFlagBits 	( .Actor:Self 00000005 00000001 .True )
	      EndThread
	      Wait     0000000B 
	      Thread
	         Call     PlaySoundAtSprite 	( .Actor:Self 00000006 000020CB )
	         Call     SetAnimation 	( .Actor:Self 00000006 004B0004 )
	         Call     SetGoalToTarget 	( .Actor:Self )
	         Call     AddToGoalPos 	( .Actor:Self FFFFFFE2 FFFFFFEC 00000001 )
	         Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[3.0] )
	         Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
	         Call     SetAnimation 	( .Actor:Self 00000006 004B0003 )
	         Call     8026B438 ( FFFFFF81 00000006 000000B4 )
	         Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Add  *Var[1]  00000064 
	         Add  *Var[2]  00000064 
	         Call     AddActorDecoration 	( .Actor:Self 00000006 00000000 .Decoration:Sweat )
	         Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
	         Call     RemoveActorDecoration 	( .Actor:Self 00000006 00000000 )
	         Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
	      EndThread
	      Wait     0000000B 
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Wait     0000001E 
	      Call     UseCamPreset 	( 00000002 )
	      Wait     0000001E 
	      Call     802D62B8 ( 00000358 )
	      Call     8027D7F0 ( )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Thread
	   Call     PlaySoundAtSprite 	( .Actor:Self 00000002 000020CB )
	   Call     SetAnimation 	( .Actor:Self 00000002 004B0004 )
	   Call     SetGoalToTarget 	( .Actor:Self )
	   Call     AddToGoalPos 	( .Actor:Self FFFFFFF6 FFFFFFF6 00000001 )
	   Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     SetSpriteSpeed ( .Actor:Self 00000002 *Fixed[3.0] )
	   Call     MoveSpriteTo 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
	   Wait     00000002 
	   Call     SetGoalToTarget 	( .Actor:Self )
	   Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000001 00000010 )
	   Call     SetAnimation 	( .Actor:Self 00000002 004B0003 )
	   Call     8026B438 ( FFFFFF81 00000002 000000B4 )
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Add  *Var[1]  00000064 
	   Add  *Var[2]  00000064 
	   Call     MoveSpriteTo 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
	   Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
	EndThread
	Wait     0000000B 
	Thread
	   Call     PlaySoundAtSprite 	( .Actor:Self 00000003 000020CB )
	   Call     SetAnimation 	( .Actor:Self 00000003 004B0004 )
	   Call     SetGoalToTarget 	( .Actor:Self )
	   Call     AddToGoalPos 	( .Actor:Self FFFFFFF6 FFFFFFF6 00000001 )
	   Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     SetSpriteSpeed ( .Actor:Self 00000003 *Fixed[3.0] )
	   Call     MoveSpriteTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
	   Wait     00000002 
	   Call     SetGoalToTarget 	( .Actor:Self )
	   Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000001 00000040 )
	   Call     SetAnimation 	( .Actor:Self 00000003 004B0003 )
	   Call     8026B438 ( FFFFFF81 00000003 000000B4 )
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Add  *Var[1]  00000064 
	   Add  *Var[2]  00000064 
	   Call     MoveSpriteTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
	   Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
	EndThread
	Wait     0000000B 
	Thread
	   Call     PlaySoundAtSprite 	( .Actor:Self 00000004 000020CB )
	   Call     SetAnimation 	( .Actor:Self 00000004 004B0004 )
	   Call     SetGoalToTarget 	( .Actor:Self )
	   Call     AddToGoalPos 	( .Actor:Self FFFFFFF6 FFFFFFF6 00000001 )
	   Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     SetSpriteSpeed ( .Actor:Self 00000004 *Fixed[3.0] )
	   Call     MoveSpriteTo 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
	   Wait     00000002 
	   Call     SetGoalToTarget 	( .Actor:Self )
	   Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000001 00000040 )
	   Call     SetAnimation 	( .Actor:Self 00000004 004B0003 )
	   Call     8026B438 ( FFFFFF81 00000004 000000B4 )
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Add  *Var[1]  00000064 
	   Add  *Var[2]  00000064 
	   Call     MoveSpriteTo 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
	   Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00000001 .True )
	EndThread
	Wait     0000000B 
	Thread
	   Call     PlaySoundAtSprite 	( .Actor:Self 00000005 000020CB )
	   Call     SetAnimation 	( .Actor:Self 00000005 004B0004 )
	   Call     SetGoalToTarget 	( .Actor:Self )
	   Call     AddToGoalPos 	( .Actor:Self FFFFFFF6 FFFFFFF6 00000001 )
	   Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     SetSpriteSpeed ( .Actor:Self 00000005 *Fixed[3.0] )
	   Call     MoveSpriteTo 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
	   Wait     00000002 
	   Call     SetGoalToTarget 	( .Actor:Self )
	   Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000001 00000040 )
	   Call     SetAnimation 	( .Actor:Self 00000005 004B0003 )
	   Call     8026B438 ( FFFFFF81 00000005 000000B4 )
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Add  *Var[1]  00000064 
	   Add  *Var[2]  00000064 
	   Call     MoveSpriteTo 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
	   Call     SetSpriteFlagBits 	( .Actor:Self 00000005 00000001 .True )
	EndThread
	Wait     0000000B 
	Wait     00000001 
	Call     PlaySoundAtSprite 	( .Actor:Self 00000006 000020CB )
	Call     SetAnimation 	( .Actor:Self 00000006 004B0004 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     AddToGoalPos 	( .Actor:Self FFFFFFF6 FFFFFFF6 00000001 )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[3.0] )
	Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 FFFFFFF6 .Easing:Linear )
	Wait     00000002 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000001 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Call     SetAnimation 	( .Actor:Self 00000006 004B0003 )
	      Call     8026B438 ( FFFFFF81 00000006 000000B4 )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[1]  00000064 
	      Add  *Var[2]  00000064 
	      Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 0000000A .Easing:Linear )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
	      Call     802D62B8 ( 00000358 )
	      Call     8027D7F0 ( )
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_8021D28C
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   ExecWait $Script_8021B28C 
	   Return
	EndIf
	Call     RandInt     	( 000003E8 *Var[0] )
	If  *Var[0]  <  000001F4 
	   ExecWait $Script_8021B28C 
	Else
	   ExecWait $Script_8021BC74 
	EndIf
	Return
	End

PADDING: 8021D324 to 8021D330 (004FCF04 to 004FCF10)
00000000 00000000 00000000 

#new:IdleAnimations $IdleAnimations_8021D330
.Status:Normal    00370001
.Status:Stone     00370000
.Status:Sleep     00370000
.Status:Poison    00370001
.Status:Stop      00370000
.Status:Static    00370001
.Status:Paralyze  00370000
.Status:Dizzy     00370001
.Status:Fear      00370001
.Status:End

MISSING: 8021D37C to 8021D394 (004FCF5C to 004FCF74)
00000001 00370001 00000000 00000001 00370006 00000000 

#new:DefenseTable $DefenseTable_8021D394
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021D3A0
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      95`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze  100`
.Status:Shrink     80`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021D44C
00800000 01000000 002300FF $IdleAnimations_8021D330 $DefenseTable_8021D394 00000010 00000000 00F60000 00000000 

#new:Actor $PiranhaPlant
% stats
[Index]        19b 
[Level]        11`b 
[MaxHP]         5`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021D3A0 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021D44C 
[Script]      $Script_Init_8021D498 
% move effectiveness
[Escape]       70`b 
[Item]         40`b 
[AirLift]      20`b 
[Hurricane]    20`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         38`b  38`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]   -7`b  33`b % dx dy
[StatusIcon]   10`b  33`b % dx dy

#new:Script $Script_Init_8021D498
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021DCD4 )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8021D4E4 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021D60C )
	Return
	End

#new:Script $Script_Idle_8021D4E4
	Return
	End

#new:Script $Script_8021D4F4
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 00000014 )
	Call     SetActorFlagBits 	( .Actor:Self 00000004 .True )
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
	Call     SetAnimation 	( .Actor:Self 00000001 00370004 )
	Wait     0000000A 
	Call     SetGoalToHome 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleSurface )
	Call     SetAnimation 	( .Actor:Self 00000001 00370003 )
	Wait     0000000A 
	Call     SetActorFlagBits 	( .Actor:Self 00000004 .False )
	Return
	End

#new:Script $Script_HandleEvent_8021D60C
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00370009 
	      ExecWait DoNormalHit 
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0037000A 
	      SetConst  *Var[2]  0037000B 
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0037000A 
	      SetConst  *Var[2]  0037000B 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0037000B 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00370009 
	      ExecWait 8029B998 
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00370009 
	      ExecWait 8029B998 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00370009 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:ShockHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00370009 
	      ExecWait DoShockHit 
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	      ExecWait $Script_8021D4F4 
	   Case  ==  .Event:ShockDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00370009 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00370009 
	      ExecWait DoDeath 
	      Return
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	   CaseOR  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00370001 
	      ExecWait DoImmune 
	   EndCaseGroup
	   Case  ==  .Event:SpikeTaunt
	      Thread
	         Wait     0000000A 
	         Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     GetStatusFlags ( .Actor:Self *Var[3] )
	         If  *Var[3]  &  00080000 
	            Add  *Var[0]  00000000 
	            Add  *Var[1]  0000000E 
	         Else
	            Add  *Var[0]  00000000 
	            Add  *Var[1]  00000023 
	         EndIf
	         Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	         Wait     00000014 
	      EndThread
	      Loop     00000028 
	         Call     SetAnimation 	( .Actor:Self 00000001 00370001 )
	         Wait     00000001 
	         Call     SetAnimation 	( .Actor:Self 00000001 00370006 )
	         Wait     00000001 
	      EndLoop
	      Call     SetAnimation 	( .Actor:Self 00000001 00370001 )
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00370009 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00370009 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00370001 
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00370009 
	      ExecWait DoNormalHit 
	      Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
	      Call     SetAnimation 	( .Actor:Self 00000001 00370004 )
	      Call     SetActorFlagBits 	( .Actor:Self 00000004 .True )
	      Wait     00000008 
	      Call     8027D32C ( FFFFFF81 )
	      Call     UseIdleAnimation 	( .Actor:Self .False )
	      Call     RemoveActor 	( .Actor:Self )
	      Return
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00370009 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00370009 
	      ExecWait DoBlowAway 
	      Return
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_8021DCD4
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     SetAnimation 	( .Actor:Self 00000001 00370004 )
	   Call     SetActorFlagBits 	( .Actor:Self 00000004 .True )
	   Call     UseCamPreset 	( 0000003F )
	   Call     CamTargetActor ( .Actor:Self )
	   Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	   Call     MoveCamOver 	( 00000001 )
	   Call     SetGoalToTarget 	( .Actor:Self )
	   Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Add  *Var[0]  00000014 
	   Set  *Var[1]  00000000 
	   Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Wait     0000000F 
	   Goto     0000007B 
	EndIf
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
	Call     SetAnimation 	( .Actor:Self 00000001 00370004 )
	Call     SetActorFlagBits 	( .Actor:Self 00000004 .True )
	Wait     00000008 
	Call     UseCamPreset 	( 00000013 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  00000014 
	Set  *Var[1]  00000000 
	Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
	Call     SetCamZoom  	( 0000015E )
	Call     SetCamOffsetZ 	( 0000002D )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     MoveCamOver 	( 00000014 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetStatusFlags ( .Actor:Self *Var[5] )
	If  *Var[5]  &  00080000 
	   Add  *Var[0]  00000008 
	   Add  *Var[0]  FFFFFFFD 
	Else
	   Add  *Var[0]  00000014 
	EndIf
	Set  *Var[1]  00000000 
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
	Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000000 00000000 )
	Label    0000007B 
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleSurface )
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetActorFlagBits 	( .Actor:Self 00000004 .False )
	Call     SetAnimation 	( .Actor:Self 00000001 00370003 )
	Wait     00000008 
	Call     SetAnimation 	( .Actor:Self 00000001 00370005 )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     GetStatusFlags ( .Actor:Self *Var[5] )
	      If  *Var[5]  !&  00080000 
	         Call     SetAnimation 	( .Actor:Self 00000001 00370006 )
	         Wait     00000002 
	      EndIf
	      Thread
	         Wait     00000006 
	         Call     PlaySoundAtActor 	( .Actor:Self 000020DE )
	      EndThread
	      Call     SetAnimation 	( .Actor:Self 00000001 00370007 )
	      Wait     0000000A 
	      Call     SetAnimation 	( .Actor:Self 00000001 00370008 )
	      Wait     00000002 
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Wait     0000000F 
	      Call     UseCamPreset 	( 00000002 )
	      Call     8027D7F0 ( )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	      ExecWait $Script_8021D4F4 
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetAnimation 	( .Actor:Self 00000001 00370006 )
	Wait     00000002 
	Thread
	   Wait     00000006 
	   Call     PlaySoundAtActor 	( .Actor:Self 000020DE )
	EndThread
	Call     SetAnimation 	( .Actor:Self 00000001 00370007 )
	Wait     0000000A 
	Wait     00000002 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000003 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Wait     00000002 
	      Call     SetAnimation 	( .Actor:Self 00000001 00370008 )
	      Wait     0000000F 
	      Call     8027D7F0 ( )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	      ExecWait $Script_8021D4F4 
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_BeforeBattle_8021E450
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     $Function_80218360 ( )
	Return
	End

#new:Script $Script_AfterBattle_8021E47C
	Return
	End

#new:Stage $Stage_8021E48C
$ASCII_8021EC20  % mim_tex
$ASCII_8021EC10  % mim_bt01_shape
$ASCII_8021EC00  % mim_bt01_hit
$Script_BeforeBattle_8021E450 
$Script_AfterBattle_8021E47C 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 8021E4B4 to 8021E4C0 (004FE094 to 004FE0A0)
00000000 00000000 00000000 

#new:Formation $Formation_00
$ForestFuzzy 00000001 0000000A 00000000 00000000 00000000 00000000 
$ForestFuzzy 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_01
$ForestFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000 
$ForestFuzzy 00000001 00000009 00000000 00000000 00000000 00000000 
$ForestFuzzy 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_02
$ForestFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000 
$ForestFuzzy 00000001 00000009 00000000 00000000 00000000 00000000 
$ForestFuzzy 00000002 00000008 00000000 00000000 00000000 00000000 
$ForestFuzzy 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_03
$ForestFuzzy 00000001 0000000A 00000000 00000000 00000000 00000000 
$PiranhaPlant 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_04
$ForestFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000 
$ForestFuzzy 00000001 00000009 00000000 00000000 00000000 00000000 
$PiranhaPlant 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_05
$ForestFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000 
$ForestFuzzy 00000001 00000009 00000000 00000000 00000000 00000000 
$PiranhaPlant 00000002 00000008 00000000 00000000 00000000 00000000 
$PiranhaPlant 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_06
$ForestFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000 
$ForestFuzzy 00000001 00000009 00000000 00000000 00000000 00000000 
$ForestFuzzy 00000002 00000008 00000000 00000000 00000000 00000000 
$PiranhaPlant 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_07
$ForestFuzzy 00000000 0000000A 00000000 00000000 00000000 00000000 
$PiranhaPlant 00000001 00000009 00000000 00000000 00000000 00000000 
$ForestFuzzy 00000002 00000008 00000000 00000000 00000000 00000000 
$PiranhaPlant 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_08
$PiranhaPlant 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_09
$PiranhaPlant 00000001 0000000A 00000000 00000000 00000000 00000000 
$PiranhaPlant 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0A
$PiranhaPlant 00000000 0000000A 00000000 00000000 00000000 00000000 
$PiranhaPlant 00000001 00000009 00000000 00000000 00000000 00000000 
$PiranhaPlant 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0B
$PiranhaPlant 00000000 0000000A 00000000 00000000 00000000 00000000 
$PiranhaPlant 00000001 00000009 00000000 00000000 00000000 00000000 
$PiranhaPlant 00000002 00000008 00000000 00000000 00000000 00000000 
$PiranhaPlant 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0C
$PiranhaPlant 00000001 0000000A 00000000 00000000 00000000 00000000 
$ForestFuzzy 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0D
$PiranhaPlant 00000000 0000000A 00000000 00000000 00000000 00000000 
$PiranhaPlant 00000001 00000009 00000000 00000000 00000000 00000000 
$ForestFuzzy 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0E
$PiranhaPlant 00000000 0000000A 00000000 00000000 00000000 00000000 
$ForestFuzzy 00000001 00000009 00000000 00000000 00000000 00000000 
$ForestFuzzy 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0F
$PiranhaPlant 00000000 0000000A 00000000 00000000 00000000 00000000 
$ForestFuzzy 00000001 00000009 00000000 00000000 00000000 00000000 
$PiranhaPlant 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_10
$Bzzap 00000005 0000000A 00000000 00000000 00000000 00000000 
$Bzzap 00000006 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_11
$Bzzap 00000004 0000000A 00000000 00000000 00000000 00000000 
$Bzzap 00000005 00000009 00000000 00000000 00000000 00000000 
$Bzzap 00000006 00000008 00000000 00000000 00000000 00000000 

#new:FormationTable $FormationTable
$SJIS_8021EE50 00000002 $Formation_00 $Stage_8021E48C 00000000 
$SJIS_8021EE38 00000003 $Formation_01 $Stage_8021E48C 00000000 
$SJIS_8021EE20 00000004 $Formation_02 $Stage_8021E48C 00000000 
$SJIS_8021EDFC 00000002 $Formation_03 $Stage_8021E48C 00000000 % unused
$SJIS_8021EDD4 00000003 $Formation_04 $Stage_8021E48C 00000000 
$SJIS_8021EDAC 00000004 $Formation_05 $Stage_8021E48C 00000000 
$SJIS_8021ED84 00000004 $Formation_06 $Stage_8021E48C 00000000 
$SJIS_8021ED3C 00000004 $Formation_07 $Stage_8021E48C 00000000 
$SJIS_8021ED28 00000001 $Formation_08 $Stage_8021E48C 00000000 % unused
$SJIS_8021ED14 00000002 $Formation_09 $Stage_8021E48C 00000000 
$SJIS_8021ED00 00000003 $Formation_0A $Stage_8021E48C 00000000 
$SJIS_8021ECEC 00000004 $Formation_0B $Stage_8021E48C 00000000 
$SJIS_8021ECC8 00000002 $Formation_0C $Stage_8021E48C 00000000 % unused
$SJIS_8021ECA0 00000003 $Formation_0D $Stage_8021E48C 00000000 
$SJIS_8021EC78 00000003 $Formation_0E $Stage_8021E48C 00000000 
$SJIS_8021EC40 00000003 $Formation_0F $Stage_8021E48C 00000000 
$SJIS_8021EC34 00000002 $Formation_10 $Stage_8021E48C 00000000 
$SJIS_8021EC28 00000003 $Formation_11 $Stage_8021E48C 00000000 % unused
00000000 00000000 00000000 00000000 00000000 % unused

#new:StageTable $StageTable
$ASCII_8021EE68 $Stage_8021E48C 
00000000 00000000 

PADDING: 8021EBFC to 8021EC00 (004FE7DC to 004FE7E0)
00000000 

#new:ASCII $ASCII_8021EC00
mim_bt01_hit

#new:ASCII $ASCII_8021EC10
mim_bt01_shape

#new:ASCII $ASCII_8021EC20
mim_tex

#new:SJIS $SJIS_8021EC28
% hachi-x3
836E8362 8360815B 78330000 

#new:SJIS $SJIS_8021EC34
% hachi-x2
836E8362 8360815B 78320000 

#new:SJIS $SJIS_8021EC40
% pakunfurawa-,guri-nchorobon,pakunfurawa-
83708362 834E8393 83748389 838F815B 2C834F83 8A815B83 93836083 87838D83 
7B83932C 83708362 834E8393 83748389 838F815B 00000000 

#new:SJIS $SJIS_8021EC78
% pakunfurawa-,guri-nchorobonx2
83708362 834E8393 83748389 838F815B 2C834F83 8A815B83 93836083 87838D83 
7B839378 32000000 

#new:SJIS $SJIS_8021ECA0
% pakunfurawa-x2,guri-nchorobon
83708362 834E8393 83748389 838F815B 78322C83 4F838A81 5B839383 60838783 
8D837B83 93000000 

#new:SJIS $SJIS_8021ECC8
% pakunfurawa-,guri-nchorobon
83708362 834E8393 83748389 838F815B 2C834F83 8A815B83 93836083 87838D83 
7B839300 

#new:SJIS $SJIS_8021ECEC
% pakunfurawa-x4
83708362 834E8393 83748389 838F815B 78340000 

#new:SJIS $SJIS_8021ED00
% pakunfurawa-x3
83708362 834E8393 83748389 838F815B 78330000 

#new:SJIS $SJIS_8021ED14
% pakunfurawa-x2
83708362 834E8393 83748389 838F815B 78320000 

#new:SJIS $SJIS_8021ED28
% pakunfurawa-
83708362 834E8393 83748389 838F815B 00000000 

#new:SJIS $SJIS_8021ED3C
% guri-nchorobon,pakunfurawa-,guri-nchorobon,pakunfurawa-
834F838A 815B8393 83608387 838D837B 83932C83 70836283 4E839383 74838983 
8F815B2C 834F838A 815B8393 83608387 838D837B 83932C83 70836283 4E839383 
74838983 8F815B00 

#new:SJIS $SJIS_8021ED84
% guri-nchorobonx3,pakunfurawa-
834F838A 815B8393 83608387 838D837B 83937833 2C837083 62834E83 93837483 
89838F81 5B000000 

#new:SJIS $SJIS_8021EDAC
% guri-nchorobonx2,pakunfurawa-x2
834F838A 815B8393 83608387 838D837B 83937832 2C837083 62834E83 93837483 
89838F81 5B783200 

#new:SJIS $SJIS_8021EDD4
% guri-nchorobonx2,pakunfurawa-
834F838A 815B8393 83608387 838D837B 83937832 2C837083 62834E83 93837483 
89838F81 5B000000 

#new:SJIS $SJIS_8021EDFC
% guri-nchorobon,pakunfurawa-
834F838A 815B8393 83608387 838D837B 83932C83 70836283 4E839383 74838983 
8F815B00 

#new:SJIS $SJIS_8021EE20
% guri-nchorobonx4
834F838A 815B8393 83608387 838D837B 83937834 00000000 

#new:SJIS $SJIS_8021EE38
% guri-nchorobonx3
834F838A 815B8393 83608387 838D837B 83937833 00000000 

#new:SJIS $SJIS_8021EE50
% guri-nchorobonx2
834F838A 815B8393 83608387 838D837B 83937832 00000000 

#new:ASCII $ASCII_8021EE68
mim_01

