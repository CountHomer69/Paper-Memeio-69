% Script File: 22 Area KPA.bscr
% Decoded from: 684A30 to 69F200 (22 Area KPA)

#new:Function $Function_80218000
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S3, V0, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S2, V0, R0
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	LW        A0, 148 (S1)
	JAL       {Func:GetActor}
	DADDU     S1, V0, R0
	DADDU     V1, V0, R0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28

PADDING: 802180CC to 802180D0 (00684AFC to 00684B00)
00000000 

#new:Function $Function_802180D0
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S3, V0, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S2, V0, R0
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	LW        A0, 148 (S1)
	JAL       {Func:GetActor}
	DADDU     S1, V0, R0
	DADDU     V1, V0, R0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28

#new:Function $Function_8021819C
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	DADDU     A0, S0, R0
	JAL       80028F08
	DADDU     A1, V0, R0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20

PADDING: 802181F4 to 80218200 (00684C24 to 00684C30)
00000000 00000000 00000000 

#new:Function $Function_80218200
	ADDIU     SP, SP, FFA0
	SW        S1, 24 (SP)
	DADDU     S1, A0, R0
	SW        RA, 28 (SP)
	SW        S0, 20 (SP)
	SDC1      F30, 58 (SP)
	SDC1      F28, 50 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetFloatVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F30, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F28, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F26, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F24, F0
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	MOV.S     F22, F0
	LW        A0, 148 (S1)
	JAL       {Func:GetActor}
	DADDU     S0, V0, R0
	CVT.D.S   F20, F20
	MFC1      A1, F30
	LIF       F1, 2.3125
	MTC1      R0, F0
	MFC1      A3, F28
	ADD.D     F20, F20, F0
	DADDU     A0, R0, R0
	SW        S0, 1C (SP)
	CVT.S.D   F20, F20
	MFC1      A2, F20
	DADDU     S0, V0, R0
	SWC1      F26, 10 (SP)
	SWC1      F24, 14 (SP)
	JAL       8006FF50
	SWC1      F22, 18 (SP)
	DADDU     A0, V0, R0
	LB        V1, 210 (S0)
	ADDIU     V0, R0, A
	BNE       V1, V0, .o128
	NOP
	LW        V0, C (A0)
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 28 (V0)
	.o128
	LW        RA, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F30, 58 (SP)
	LDC1      F28, 50 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60

#new:Function $Function_80218358
	ADDIU     SP, SP, FFB8
	SW        S2, 18 (SP)
	DADDU     S2, A0, R0
	SW        RA, 28 (SP)
	SW        S5, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S2)
	LW        S4, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       {Func:GetVariable}
	DADDU     A1, S4, R0
	DADDU     S3, V0, R0
	LW        S5, 0 (S0)
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       {Func:GetFloatVariable}
	DADDU     A0, S2, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S2, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S2, R0
	JAL       {Func:GetVariable}
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S2, R0
	JAL       {Func:GetVariable}
	DADDU     S1, V0, R0
	DADDU     A0, S2, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetFloatVariable}
	DADDU     S0, V0, R0
	LIF       F2, 180.0
	LIO       AT, 40490FD8
	MTC1      AT, F4
	DIV.S     F0, F0, F2
	MUL.S     F22, F0, F4
	NOP
	SUB.S     F20, F20, F24
	LIF       F0, 0.5
	NOP
	MUL.S     F20, F20, F0
	NOP
	BEQ       S0, R0, .o104
	SLT       V0, S1, S3
	BEQ       V0, R0, .o104
	DADDU     A0, S2, R0
	DADDU     S3, S1, R0
	DADDU     A1, S4, R0
	JAL       {Func:SetVariable}
	DADDU     A2, S1, R0
	.o104
	LIO       AT, 40490FD8
	MTC1      AT, F0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	MTC1      S1, F0
	NOP
	CVT.S.W   F0, F0
	DIV.S     F12, F12, F0
	JAL       {Func:CosRad}
	ADD.S     F12, F12, F22
	MUL.S     F0, F20, F0
	NOP
	ADD.S     F2, F24, F20
	SUB.S     F2, F2, F0
	DADDU     A0, S2, R0
	MFC1      A2, F2
	JAL       {Func:SetFloatVariable}
	DADDU     A1, S5, R0
	LW        RA, 28 (SP)
	LW        S5, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 48

#new:Function $Function_802184E8
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	LAH       A2, 800DC1EC
	JAL       {Func:SetVariable}
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18

#new:Function $Function_80218514
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S3, V0, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S2, V0, R0
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	LW        A0, 148 (S1)
	JAL       {Func:GetActor}
	DADDU     S1, V0, R0
	DADDU     V1, V0, R0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28

#new:Function $Function_802185E0
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	DADDU     A0, S0, R0
	JAL       80028F08
	DADDU     A1, V0, R0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20

#new:Function $Function_80218638
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	DADDU     A0, V0, R0
	ADDIU     V0, R0, FF81
	BNE       A0, V0, .o38
	NOP
	LW        A0, 148 (S1)
	.o38
	JAL       {Func:GetActor}
	NOP
	DADDU     A0, V0, R0
	LBU       V1, 136 (A0)
	ADDIU     V0, R0, 47
	BEQ       V1, V0, .o7C
	SLT       V0, V1, V0
	BNEL      V0, R0, .o9C
	DADDU     A0, S1, R0
	SLTI      V0, V1, 65
	BEQ       V0, R0, .o98
	SLTI      V0, V1, 4D
	BNE       V0, R0, .o9C
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o7C
	LW        V1, A8 (A0)
	ADDIU     V0, R0, 1
	BNE       V1, V0, .o9C
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o98
	DADDU     A0, S1, R0
	.o9C
	LW        A1, 0 (S0)
	DADDU     A2, R0, R0
	.oA4
	JAL       {Func:SetVariable}
	NOP
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20

PADDING: 802186FC to 80218700 (0068512C to 00685130)
00000000 

#new:Function $Function_80218700
	ADDIU     SP, SP, FFD8
	SW        S2, 20 (SP)
	DADDU     S2, A0, R0
	SW        RA, 24 (SP)
	SW        S1, 1C (SP)
	SW        S0, 18 (SP)
	LW        A0, 148 (S2)
	JAL       {Func:GetActor}
	DADDU     S0, A1, R0
	BEQ       S0, R0, .oDC
	DADDU     S1, V0, R0
	LWC1      F2, 18 (S1)
	LWC1      F0, 144 (S1)
	SUB.S     F2, F2, F0
	MUL.S     F2, F2, F2
	NOP
	LWC1      F6, 1C (S1)
	LWC1      F0, 148 (S1)
	SUB.S     F6, F6, F0
	MUL.S     F6, F6, F6
	NOP
	LWC1      F4, 14C (S1)
	LWC1      F0, 20 (S1)
	SUB.S     F0, F0, F4
	MUL.S     F0, F0, F0
	NOP
	ADD.S     F2, F2, F6
	ADD.S     F12, F2, F0
	SQRT.S    F4, F12
	C.EQ.S    F4, F4
	NOP
	BC1T      .o90
	NOP
	JAL       80061EF0
	NOP
	MOV.S     F4, F0
	.o90
	LWC1      F0, 4C (S1)
	LIF       F2, 0.5
	DIV.S     F0, F4, F0
	MUL.S     F0, F0, F2
	NOP
	LIF       F2, 1.0
	NOP
	ADD.S     F0, F0, F2
	TRUNC.W.S F8, F0
	SWC1      F8, 70 (S2)
	LWC1      F0, 14C (S1)
	ADDIU     A0, R0, 359
	SWC1      F0, 10 (SP)
	LW        A2, 144 (S1)
	LW        A3, 148 (S1)
	JAL       80149D5C
	DADDU     A1, R0, R0
	.oDC
	LW        V0, 70 (S2)
	DADDU     V1, V0, R0
	ADDIU     V0, V0, FFFF
	BGTZ      V1, .o114
	SW        V0, 70 (S2)
	LWC1      F0, 14C (S1)
	ADDIU     A0, R0, 759
	SWC1      F0, 10 (SP)
	LW        A2, 144 (S1)
	LW        A3, 148 (S1)
	JAL       80149D5C
	DADDU     A1, R0, R0
	BEQ       R0, R0, .o118
	ADDIU     V0, R0, 2
	.o114
	DADDU     V0, R0, R0
	.o118
	LW        RA, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	JR        RA
	ADDIU     SP, SP, 28

#new:IdleAnimations $IdleAnimations_80218830
.Status:Normal    00550004
.Status:Stone     00550000
.Status:Sleep     0055002A
.Status:Poison    00550004
.Status:Stop      00550000
.Status:Static    00550004
.Status:Paralyze  00550000
.Status:Dizzy     00550026
.Status:Fear      00550026
.Status:End

#new:IdleAnimations $IdleAnimations_8021887C
.Status:Normal    00550005
.Status:Stone     00550001
.Status:Sleep     0055002B
.Status:Poison    00550005
.Status:Stop      00550001
.Status:Static    00550005
.Status:Paralyze  00550001
.Status:Dizzy     00550027
.Status:Fear      00550027
.Status:End

#new:IdleAnimations $IdleAnimations_802188C8
.Status:Normal    00550006
.Status:Stone     00550002
.Status:Sleep     0055002C
.Status:Poison    00550006
.Status:Stop      00550002
.Status:Static    00550006
.Status:Paralyze  00550002
.Status:Dizzy     00550028
.Status:Fear      00550028
.Status:End

#new:IdleAnimations $IdleAnimations_80218914
.Status:Normal    00550007
.Status:Stone     00550003
.Status:Sleep     0055002D
.Status:Poison    00550007
.Status:Stop      00550003
.Status:Static    00550007
.Status:Paralyze  00550003
.Status:Dizzy     00550029
.Status:Fear      00550029
.Status:End

#new:DefenseTable $DefenseTable_80218960
.Element:Normal 00000004
.Element:End

#new:DefenseTable $DefenseTable_8021896C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80218978
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     75`
.Status:Stop       85`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:SpriteTable $SpriteTable_80218A24
00800000 01000000 FD1500FF $IdleAnimations_8021887C $DefenseTable_80218960 00001010 00000000 00F80000 00000000 

#new:Actor $BonyBeetle
% stats
[Index]        46b 
[Level]        25`b 
[MaxHP]         8`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80218978 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80218A24 
[Script]      $Script_Init_80218A70 
% move effectiveness
[Escape]       50`b 
[Item]         60`b 
[AirLift]      70`b 
[Hurricane]    60`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         27`b  27`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Script $Script_Init_80218A70
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Call     8027D75C ( FFFFFF81 *Var[1] )
	If  *Var[0]  ==  00000001 
	   If  *Var[1]  ==  00000001 
	      Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021887C )
	      Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .True )
	      Call     SetAnimation 	( .Actor:Self 00000001 00550005 )
	   Else
	      Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80218830 )
	      Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .False )
	      Call     SetAnimation 	( .Actor:Self 00000001 00550004 )
	   EndIf
	Else
	   Call     RandInt     	( 000003E8 *Var[0] )
	   If  *Var[0]  <  000001F4 
	      Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80218830 )
	      Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .False )
	      Call     SetAnimation 	( .Actor:Self 00000001 00550004 )
	   Else
	      Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021887C )
	      Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .True )
	      Call     SetAnimation 	( .Actor:Self 00000001 00550005 )
	   EndIf
	EndIf
	EndIf
	Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFF8 )
	Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFD 00000015 )
	Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
	Call     BindIdle    	( .Actor:Self $Script_Idle_80218D6C )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80218D7C )
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80219110 )
	Call     HPBarToHome 	( .Actor:Self )
	Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
	Return
	End

#new:Script $Script_Idle_80218D6C
	Return
	End

#new:Script $Script_HandleEvent_80218D7C
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      ExecWait $Script_802191FC 
	   Case  ==  00000001 
	      ExecWait $Script_8021A060 
	   Case  ==  00000002 
	      ExecWait $Script_8021BA6C 
	   Case  ==  00000003 
	      ExecWait $Script_8021C234 
	EndSwitch
	Call     ActorExists 	( .Actor:Self *Var[0] )
	If  *Var[0]  ==  00000001 
	   Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	   If  *Var[0]  ==  00000001 
	      ExecWait $Script_80218EE8 
	      Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
	   EndIf
	EndIf
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_80218EE8
	Call     GetLastDamage 	( .Actor:Self *Var[0] )
	If  *Var[0]  <=  00000000 
	   Return
	EndIf
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  &  0035D000 
	   Return
	EndIf
	Label    00000000 
	Call     GetBattleFlags ( *Var[A] )
	If  *Var[A]  &  00000100 
	   Wait     00000001 
	   Goto     00000000 
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      Call     PlaySoundAtActor 	( .Actor:Self 000020CE )
	      Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
	      Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .True )
	      Call     SetAnimation 	( .Actor:Self 00000001 0055002E )
	      Wait     00000019 
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021887C )
	   Case  ==  00000001 
	      Call     PlaySoundAtActor 	( .Actor:Self 000020CF )
	      Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
	      Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .False )
	      Call     SetAnimation 	( .Actor:Self 00000001 0055002F )
	      Wait     00000019 
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80218830 )
	   Case  ==  00000002 
	   Case  ==  00000003 
	EndSwitch
	Return
	End

#new:Script $Script_TakeTurn_80219110
	Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      ExecWait $Script_Tackle 
	   Case  ==  00000001 
	      ExecWait $Script_Tackle_Spikes 
	   Case  ==  00000002 
	      ExecWait $Script_FlipOver 
	   Case  ==  00000003 
	      ExecWait $Script_FlipOver_Spikes 
	EndSwitch
	Return
	End

#new:IntTable $IntTable_802191AC
00000007 0000000D 00000011 00000015 00000017 00000018 00000017 00000015 
00000011 0000000D 00000007 00000000 00000004 00000006 00000007 00000006 
00000004 00000000 00000002 00000000 

#new:Script $Script_802191FC
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550018 
	      ExecWait DoNormalHit 
	      Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055001E 
	      SetConst  *Var[2]  0055001F 
	      ExecWait DoBurnHit 
	      Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055001E 
	      SetConst  *Var[2]  0055001F 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055001F 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550018 
	      ExecWait 8029B998 
	      Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550018 
	      ExecWait 8029B998 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550018 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:FlipTrigger
	      Call     SetActorVar 	( .Actor:Self 00000008 00000002 )
	      Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFF8 )
	      Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFD 00000015 )
	      Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
	      Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021896C )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802188C8 )
	      Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .False )
	      Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
	      Call     SetAnimation 	( .Actor:Self 00000001 00550008 )
	      UseIntBuffer $IntTable_802191AC 
	      Loop     00000014 
	         Get1Int  *Var[0] 
	         Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
	         Wait     00000001 
	      EndLoop
	      Wait     00000014 
	   Case  ==  .Event:ShockHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550018 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550018 
	      ExecWait 8029BD70 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055000E 
	      ExecWait DoReturnHome 
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	   CaseOR  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550010 
	      ExecWait DoImmune 
	      Wait     00000014 
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  !&  0035D000 
	         Call     SetAnimation 	( .Actor:Self 00000001 00550012 )
	         Wait     0000000A 
	      EndIf
	   EndCaseGroup
	   Case  ==  .Event:ShockDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550018 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550018 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550018 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550018 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550004 
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055000E 
	      SetConst  *Var[2]  00550018 
	      ExecWait DoScareAway 
	      Return
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055000E 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550018 
	      ExecWait DoBlowAway 
	      Return
	   Default
	EndSwitch
	Return
	End

#new:Script $Script_Tackle
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     UseCamPreset 	( 0000003F )
	   Call     CamTargetActor ( .Actor:Self )
	   Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	   Call     SetAnimation 	( .Actor:Self 00000001 00550016 )
	   Goto     00000064 
	EndIf
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 00550010 )
	Wait     0000000A 
	Thread
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
	   Wait     0000000A 
	   Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
	   Wait     00000005 
	   Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
	EndThread
	Call     PlaySoundAtActor 	( .Actor:Self 00002021 )
	Call     SetAnimation 	( .Actor:Self 00000001 00550016 )
	Wait     0000000F 
	Label    00000064 
	Call     PlaySoundAtActor 	( .Actor:Self 000020D3 )
	Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000003 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000028 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Wait     00000014 
	      Call     SetAnimation 	( .Actor:Self 00000001 00550012 )
	      Wait     0000000F 
	      Call     UseCamPreset 	( 00000002 )
	      Call     8026F6EC ( FFFFFF81 )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     SetAnimation 	( .Actor:Self 00000001 0055000E )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Call     SetAnimation 	( .Actor:Self 00000001 00550004 )
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Call     8026F6EC ( FFFFFF81 )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000003 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[0]  00000028 
	      Set  *Var[1]  00000000 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	      Add  *Var[0]  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	      Add  *Var[0]  00000014 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
	      Wait     0000000F 
	      Call     SetAnimation 	( .Actor:Self 00000001 00550012 )
	      Wait     00000005 
	      Call     8027D7F0 ( )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055000E 
	      ExecWait DoReturnHome 
	      Call     SetAnimation 	( .Actor:Self 00000001 00550004 )
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021A060
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550019 
	      ExecWait DoNormalHit 
	      Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550020 
	      SetConst  *Var[2]  00550021 
	      ExecWait DoBurnHit 
	      Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550020 
	      SetConst  *Var[2]  00550021 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550021 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550019 
	      ExecWait 8029B998 
	      Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550019 
	      ExecWait 8029B998 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550019 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:FlipTrigger
	      Call     SetActorVar 	( .Actor:Self 00000008 00000003 )
	      Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFF8 )
	      Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFD 00000015 )
	      Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
	      Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021896C )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80218914 )
	      Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .False )
	      Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
	      Call     SetAnimation 	( .Actor:Self 00000001 00550009 )
	      UseIntBuffer $IntTable_802191AC 
	      Loop     00000014 
	         Get1Int  *Var[0] 
	         Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
	         Wait     00000001 
	      EndLoop
	      Wait     00000014 
	   Case  ==  .Event:ShockHit
	      Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550019 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550019 
	      ExecWait 8029BD70 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055000F 
	      ExecWait DoReturnHome 
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550011 
	      ExecWait DoImmune 
	      Wait     00000014 
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  !&  0035D000 
	         Call     SetAnimation 	( .Actor:Self 00000001 00550013 )
	      EndIf
	      Wait     0000000A 
	   EndCaseGroup
	   Case  ==  .Event:SpikeTaunt
	      Wait     0000000A 
	      Set  *Flag[00]  00000000 
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     GetStatusFlags ( .Actor:Self *Var[3] )
	      If  *Var[3]  &  00080000 
	         Add  *Var[0]  FFFFFFFD 
	         Add  *Var[1]  0000000A 
	         Set  *Flag[00]  00000001 
	      EndIf
	      If  *Var[3]  &  00040000 
	         Add  *Var[0]  00000000 
	         Add  *Var[1]  0000001A 
	         Set  *Flag[00]  00000001 
	      EndIf
	      If  *Flag[00]  ==  00000000 
	         Add  *Var[0]  FFFFFFF8 
	         Add  *Var[1]  0000001A 
	      EndIf
	      Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	      Wait     00000014 
	   Case  ==  .Event:ShockDeath
	      Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550019 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550019 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550019 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550019 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550005 
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055000F 
	      SetConst  *Var[2]  00550019 
	      ExecWait DoScareAway 
	      Return
	   Default
	EndSwitch
	Return
	End

#new:Script $Script_Tackle_Spikes
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     UseCamPreset 	( 0000003F )
	   Call     CamTargetActor ( .Actor:Self )
	   Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	   Call     SetAnimation 	( .Actor:Self 00000001 00550017 )
	   Wait     0000000A 
	   Goto     00000064 
	EndIf
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 00550011 )
	Wait     0000000A 
	Thread
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     PlayEffect  	( {FX:SmokeImpact:Large} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
	   Wait     0000000A 
	   Call     PlayEffect  	( {FX:SmokeImpact:Large} *Var[0] *Var[1] *Var[2] 00000020 00000006 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
	   Wait     00000005 
	   Call     PlayEffect  	( {FX:SmokeImpact:Large} *Var[0] *Var[1] *Var[2] 00000020 00000008 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
	   Wait     00000005 
	   Call     PlayEffect  	( {FX:SmokeImpact:Large} *Var[0] *Var[1] *Var[2] 00000020 0000000A 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
	   Wait     00000005 
	   Call     PlayEffect  	( {FX:SmokeImpact:Large} *Var[0] *Var[1] *Var[2] 00000020 0000000C 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
	EndThread
	Call     PlaySoundAtActor 	( .Actor:Self 00002021 )
	Call     SetAnimation 	( .Actor:Self 00000001 00550017 )
	Wait     0000000F 
	Label    00000064 
	Thread
	   Loop     00000014 
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     PlayEffect  	( {FX:Steam:TinyPuff} *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	      Wait     00000001 
	   EndLoop
	EndThread
	Call     PlaySoundAtActor 	( .Actor:Self 000020D3 )
	Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000005 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     AddToGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[24.0] )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Call     UseCamPreset 	( 00000001 )
	      Thread
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
	         Set  *Var[0]  00000000 
	         Loop     0000000A 
	            Add  *Var[0]  00000012 
	            Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	            Wait     00000001 
	         EndLoop
	      EndThread
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000014 
	      Set  *Var[1]  00000000 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Thread
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
	         Set  *Var[0]  000000B4 
	         Loop     0000000F 
	            Add  *Var[0]  0000000C 
	            Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	            Wait     00000001 
	         EndLoop
	      EndThread
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000032 
	      Set  *Var[1]  00000000 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
	      Thread
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
	         Set  *Var[0]  00000000 
	         Loop     0000000A 
	            Add  *Var[0]  00000012 
	            Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	            Wait     00000001 
	         EndLoop
	      EndThread
	      Sub  *Var[0]  00000028 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	      Thread
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
	         Set  *Var[0]  000000B4 
	         Loop     00000005 
	            Add  *Var[0]  00000012 
	            Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	            Wait     00000001 
	         EndLoop
	      EndThread
	      Sub  *Var[0]  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	      Wait     00000005 
	      Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     8026F6EC ( FFFFFF81 )
	      Call     UseCamPreset 	( 00000002 )
	      Call     8027D7F0 ( )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055000F 
	      ExecWait DoReturnHome 
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     AddToGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[24.0] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Thread
	   Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
	   Set  *Var[0]  00000000 
	   Loop     0000000A 
	      Add  *Var[0]  00000012 
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	      Wait     00000001 
	   EndLoop
	EndThread
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	Call     8026F6EC ( FFFFFF81 )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000005 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Thread
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
	         Set  *Var[0]  000000B4 
	         Loop     0000000F 
	            Add  *Var[0]  0000000C 
	            Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	            Wait     00000001 
	         EndLoop
	      EndThread
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000032 
	      Set  *Var[1]  00000000 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
	      Thread
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
	         Set  *Var[0]  00000000 
	         Loop     0000000A 
	            Add  *Var[0]  00000012 
	            Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	            Wait     00000001 
	         EndLoop
	      EndThread
	      Sub  *Var[0]  00000028 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	      Thread
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
	         Set  *Var[0]  000000B4 
	         Loop     00000005 
	            Add  *Var[0]  00000012 
	            Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	            Wait     00000001 
	         EndLoop
	      EndThread
	      Sub  *Var[0]  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	      Wait     00000005 
	      Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00550013 )
	      Wait     00000005 
	      Call     8027D7F0 ( )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055000F 
	      ExecWait DoReturnHome 
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

% Origin: HEURISTIC
#new:Script $Script_8021B7C8
	Call     8027D32C ( FFFFFF81 )
	Call     SetActorVar 	( .Actor:Self 00000008 00000002 )
	Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
	Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021896C )
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802188C8 )
	Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
	Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFF8 )
	Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFD 00000015 )
	Call     $Function_80218000 ( FFFFFFF6 00000014 0000000A 00000014 )
	Call     SetAnimation 	( .Actor:Self 00000001 00550006 )
	Call     SetActorAngle 	( .Actor:Self 000000B4 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub  *Var[1]  00000018 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Set  *Var[1]  00000000 
	Call     SetHomePos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     PlaySoundAtActor 	( .Actor:Self 00000301 )
	Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
	Call     8026F6EC ( FFFFFF81 )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	Call     HPBarToHome 	( .Actor:Self )
	Return
	End

#new:Script $Script_8021BA6C
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055001A 
	      ExecWait DoNormalHit 
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550022 
	      SetConst  *Var[2]  00550023 
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550022 
	      SetConst  *Var[2]  00550023 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550023 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055001A 
	      ExecWait 8029B998 
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055001A 
	      ExecWait 8029B998 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055001A 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:FlipTrigger
	      Call     SetActorVar 	( .Actor:Self 00000008 00000002 )
	      Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFF8 )
	      Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFD 00000015 )
	      Call     $Function_80218000 ( FFFFFFF6 00000014 0000000A 00000014 )
	      Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
	      Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021896C )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802188C8 )
	      Call     SetAnimation 	( .Actor:Self 00000001 0055001A )
	      Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
	      UseIntBuffer $IntTable_802191AC 
	      Loop     00000014 
	         Get1Int  *Var[0] 
	         Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
	         Wait     00000001 
	      EndLoop
	      Wait     00000014 
	   CaseOR  ==  .Event:ScareAway
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	   CaseOR  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550006 
	      ExecWait DoImmune 
	   EndCaseGroup
	   Case  ==  .Event:ShockDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055001A 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055001A 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055001A 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055001A 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550006 
	      ExecWait DoRecover 
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550006 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055001A 
	      ExecWait DoBlowAway 
	EndSwitch
	Return
	End

#new:Script $Script_FlipOver
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
	Sub  *Var[0]  00000001 
	If  *Var[0]  >  00000000 
	   Call     SetActorVar 	( .Actor:Self 00000009 *Var[0] )
	   Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	   Call     SetAnimation 	( .Actor:Self 00000001 0055001C )
	   Wait     00000014 
	   Call     SetAnimation 	( .Actor:Self 00000001 00550006 )
	   Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	Else
	   Call     UseCamPreset 	( 0000000F )
	   Call     SetCamZoom  	( 0000015E )
	   Call     SetCamOffsetZ 	( 00000014 )
	   Call     CamTargetActor ( .Actor:Self )
	   Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	   Call     SetAnimation 	( .Actor:Self 00000001 0055001C )
	   Wait     00000014 
	   Call     SetAnimation 	( .Actor:Self 00000001 00550006 )
	   Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	   Call     SetAnimation 	( .Actor:Self 00000001 0055000A )
	   Wait     00000014 
	   Call     SetActorAngle 	( .Actor:Self 00000000 )
	   Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
	   Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80218960 )
	   Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80218830 )
	   Call     SetActorFlagBits 	( .Actor:Self 00000400 .False )
	EndIf
	Call     UseCamPreset 	( 00000002 )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021C234
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055001B 
	      ExecWait DoNormalHit 
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550024 
	      SetConst  *Var[2]  00550025 
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550024 
	      SetConst  *Var[2]  00550025 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550025 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055001B 
	      ExecWait 8029B998 
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055001B 
	      ExecWait 8029B998 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055001B 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:FlipTrigger
	      Call     SetActorVar 	( .Actor:Self 00000008 00000003 )
	      Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFF8 )
	      Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFD 00000015 )
	      Call     $Function_80218000 ( FFFFFFF6 00000014 0000000A 00000014 )
	      Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
	      Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021896C )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80218914 )
	      Call     SetAnimation 	( .Actor:Self 00000001 0055001B )
	      Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
	      UseIntBuffer $IntTable_802191AC 
	      Loop     00000014 
	         Get1Int  *Var[0] 
	         Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
	         Wait     00000001 
	      EndLoop
	      Wait     00000014 
	   CaseOR  ==  .Event:ScareAway
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	   CaseOR  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550007 
	      ExecWait DoImmune 
	   EndCaseGroup
	   Case  ==  .Event:ShockDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055001B 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055001B 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055001B 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055001B 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550007 
	      ExecWait DoRecover 
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00550007 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0055001B 
	      ExecWait DoBlowAway 
	      Return
	EndSwitch
	Return
	End

#new:Script $Script_FlipOver_Spikes
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
	Sub  *Var[0]  00000001 
	If  *Var[0]  >  00000000 
	   Call     SetActorVar 	( .Actor:Self 00000009 *Var[0] )
	   Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	   Call     SetAnimation 	( .Actor:Self 00000001 0055001D )
	   Wait     00000014 
	   Call     SetAnimation 	( .Actor:Self 00000001 00550007 )
	   Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	Else
	   Call     UseCamPreset 	( 0000000F )
	   Call     SetCamZoom  	( 0000015E )
	   Call     SetCamOffsetZ 	( 00000014 )
	   Call     CamTargetActor ( .Actor:Self )
	   Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	   Call     SetAnimation 	( .Actor:Self 00000001 0055001D )
	   Wait     00000014 
	   Call     SetAnimation 	( .Actor:Self 00000001 00550007 )
	   Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	   Call     SetAnimation 	( .Actor:Self 00000001 0055000B )
	   Wait     00000014 
	   Call     SetActorAngle 	( .Actor:Self 00000000 )
	   Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
	   Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80218960 )
	   Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021887C )
	   Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .True )
	   Call     SetActorFlagBits 	( .Actor:Self 00000400 .False )
	EndIf
	Call     UseCamPreset 	( 00000002 )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:IdleAnimations $IdleAnimations_8021CA20
.Status:Normal    00530002
.Status:Stone     00530000
.Status:Sleep     0053000E
.Status:Poison    00530002
.Status:Stop      00530000
.Status:Static    00530002
.Status:Paralyze  00530000
.Status:Dizzy     0053000D
.Status:Fear      0053000D
.Status:End

#new:IdleAnimations $IdleAnimations_8021CA6C
.Status:Normal    00530001
.Status:End

#new:IdleAnimations $IdleAnimations_8021CA78
.Status:Normal    0053000F
.Status:End

#new:DefenseTable $DefenseTable_8021CA84
.Element:Normal 00000002
.Element:Fire   FFFFFFF6
.Element:Blast  FFFFFFF6
.Element:End

#new:DefenseTable $DefenseTable_8021CAA0
.Element:Normal 00000063
.Element:Fire   FFFFFFF6
.Element:Blast  FFFFFFF6
.Element:End

#new:StatusTable $StatusTable_8021CABC
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   50`
.Status:Shrink     60`
.Status:Stop       85`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:StatusTable $StatusTable_8021CB68
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021CC14
00800000 01000000 F81E00FF $IdleAnimations_8021CA20 $DefenseTable_8021CA84 00000000 00000000 FFF60000 00000000 
00120001 02000000 000000FF $IdleAnimations_8021CA78 $DefenseTable_8021CA84 00000000 00000000 00000000 00000000 

#new:Actor $DryBones
% stats
[Index]        47b 
[Level]        30`b 
[MaxHP]         8`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021CABC 
% ai
[SpriteCount]   2`s 
[SpriteTable] $SpriteTable_8021CC14 
[Script]      $Script_Init_8021CC84 
% move effectiveness
[Escape]       50`b 
[Item]         10`b 
[AirLift]      75`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  95`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         28`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -15`b  15`b % dx dy
[StatusIcon]    3`b  27`b % dx dy

#new:Script $Script_Init_8021CC84
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021DB48 )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8021CF2C )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021D404 )
	Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_8021CCFC )
	Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
	Return
	End

#new:Script $Script_NextTurn_8021CCFC
	Call     GetActorType 	( .Actor:Self *Var[A] )
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetActorType 	( *Var[0] *Var[2] )
	If  *Var[2]  !=  *Var[A] 
	   Call     GetActorHP  	( *Var[0] *Var[3] )
	   If  *Var[3]  !=  00000000 
	      Return
	   EndIf
	EndIf
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000001 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetActorVar 	( *Var[0] 00000008 *Var[3] )
	If  *Var[3]  !=  00000001 
	   Return
	EndIf
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000001 
	EndIf
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000002 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     SetActorFlagBits 	( *Var[0] 00600000 .True )
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000002 
	EndIf
	Return
	End

#new:Script $Script_Idle_8021CF2C
	Label    00000000 
	Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	Call     GetStatusFlags ( .Actor:Self *Var[1] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      Switch  *Var[1] 
	         Case  &  00001000 
	            Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFA 00000018 )
	            Call     8027D4C8 ( FFFFFF81 00000001 00000001 FFFFFFFB )
	         Default
	            Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFF8 0000001E )
	            Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
	      EndSwitch
	   Case  ==  00000001 
	      Switch  *Var[1] 
	         Case  &  00001000 
	            Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFF 0000000A )
	            Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
	         Default
	            Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFF 0000000A )
	            Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
	      EndSwitch
	EndSwitch
	Wait     00000001 
	Goto     00000000 
	Return
	End

#new:Script $Script_8021D0E8
	Call     PlaySoundAtActor 	( .Actor:Self 000002D2 )
	Call     SetAnimation 	( .Actor:Self 00000001 00530008 )
	Wait     00000014 
	Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021CA6C )
	Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021CAA0 )
	Call     SetStatusTable ( .Actor:Self $StatusTable_8021CB68 )
	Call     8027DDA0 ( FFFFFF81 )
	Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFF 0000000A )
	Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
	Call     RandInt     	( 00000000 *Var[0] )
	Add  *Var[0]  00000002 
	Call     SetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Call     GetActorType 	( .Actor:Self *Var[A] )
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetActorType 	( *Var[0] *Var[2] )
	If  *Var[2]  !=  *Var[A] 
	   Return
	EndIf
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000001 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetActorVar 	( *Var[0] 00000008 *Var[3] )
	If  *Var[3]  !=  00000001 
	   Return
	EndIf
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000001 
	EndIf
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000002 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     SetActorFlagBits 	( *Var[0] 00600000 .True )
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000002 
	EndIf
	Return
	End

#new:Script $Script_HandleEvent_8021D404
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   Case  ==  .Event:HitCombo
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00530007 
	      ExecWait DoNormalHit 
	   Case  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00530007 
	      ExecWait DoNormalHit 
	   Case  ==  .Event:BurnHit
	      Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000200 .True )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0053000B 
	      SetConst  *Var[2]  0053000C 
	      ExecWait DoBurnHit 
	      Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000200 .False )
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0053000B 
	      SetConst  *Var[2]  0053000C 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0053000C 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00530007 
	      ExecWait 8029B998 
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00530007 
	      ExecWait 8029B998 
	      ExecWait $Script_8021D0E8 
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	      Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	      If  *Var[0]  ==  00000000 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00530002 
	         ExecWait DoImmune 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00530001 
	         ExecWait DoImmune 
	      EndIf
	   EndCaseGroup
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00530007 
	      ExecWait DoNormalHit 
	      Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	      If  *Var[0]  ==  00000000 
	         Wait     0000000A 
	         ExecWait $Script_8021D0E8 
	      EndIf
	   Case  ==  .Event:RecoverStatus
	      Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	      If  *Var[0]  ==  00000000 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00530002 
	         ExecWait DoRecover 
	      EndIf
	   Case  ==  .Event:ScareAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00530004 
	      SetConst  *Var[2]  00530007 
	      ExecWait DoScareAway 
	      Return
	   Case  ==  .Event:BeginAirLift
	      Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	      If  *Var[0]  ==  00000000 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00530004 
	         ExecWait DoAirLift 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00530009 
	         ExecWait DoAirLift 
	      EndIf
	   Case  ==  .Event:BlowAway
	      Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	      If  *Var[0]  ==  00000000 
	         Call     GetStatusFlags ( .Actor:Self *Var[0] )
	         If  *Var[0]  !&  0035D000 
	            If  *Var[0]  &  00080000 
	               Call     8026BA04 ( FFFFFF81 FFFFFFFF FFFFFFFE 00000000 )
	            Else
	               Call     8026BA04 ( FFFFFF81 FFFFFFFD FFFFFFFB 00000000 )
	            EndIf
	         EndIf
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00530007 
	         ExecWait DoBlowAway 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00530009 
	         ExecWait DoBlowAway 
	      EndIf
	      Return
	   Case  ==  .Event:AirLiftFailed
	      Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	      If  *Var[0]  ==  00000000 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00530002 
	         ExecWait DoImmune 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00530001 
	         ExecWait DoImmune 
	      EndIf
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021DAC4
	Set  *Var[0]  00000000 
	Label    00000000 
	Call     SetSpriteRotation 	( .Actor:Self 00000002 00000000 00000000 *Var[0] )
	Add  *Var[0]  0000003C 
	Mod  *Var[0]  00000168 
	Wait     00000001 
	Goto     00000000 
	Return
	End

#new:Script $Script_TakeTurn_8021DB48
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     UseCamPreset 	( 00000002 )
	   Call     MoveCamOver 	( 00000001 )
	EndIf
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     SetAnimation 	( .Actor:Self 00000001 00530006 )
	   Goto     00000064 
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	If  *Var[0]  ==  00000001 
	   Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	   Sub  *Var[0]  00000001 
	   If  *Var[0]  ==  00000000 
	      Call     PlaySoundAtActor 	( .Actor:Self 000002D4 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00530009 )
	      Wait     0000000A 
	      Call     PlaySoundAtActor 	( .Actor:Self 000002D3 )
	      Call     SetAnimation 	( .Actor:Self 00000001 0053000A )
	      Wait     00000014 
	      Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
	      Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021CA20 )
	      Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021CA84 )
	      Call     SetStatusTable ( .Actor:Self $StatusTable_8021CABC )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00002000 .False )
	      Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFF8 0000001E )
	      Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF6 )
	      Call     GetEnemyMaxHP 	( .Actor:Self *Var[0] )
	      Call     SetEnemyHP  	( .Actor:Self *Var[0] )
	   Else
	      Call     PlaySoundAtActor 	( .Actor:Self 000002D4 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00530009 )
	      Wait     0000000A 
	      Call     SetActorVar 	( .Actor:Self 00000000 *Var[0] )
	   EndIf
	   Call     EnableIdleScript 	( .Actor:Self 00000001 )
	   Call     UseIdleAnimation 	( .Actor:Self .True )
	   Return
	EndIf
	Call     SetAnimation 	( .Actor:Self 00000001 00530005 )
	Wait     0000000F 
	Call     SetAnimation 	( .Actor:Self 00000001 00530006 )
	Thread
	   Wait     00000008 
	   Call     SetAnimation 	( .Actor:Self 00000001 00530002 )
	EndThread
	Label    00000064 
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  &  00080000 
	   Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	Else
	   Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	EndIf
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[F]  *Var[0] 
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[1]  00000014 
	      Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
	      Wait     00000001 
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
	      Call     PlaySoundAtSprite 	( .Actor:Self 00000002 000002D1 )
	      Call     8026FA00 ( FFFFFF81 00000002 00000000 00000000 00000000 )
	      Call     8026FA00 ( FFFFFF81 00000002 00000002 00000000 00000000 )
	      Exec     $Script_8021DAC4 *Var[A] 
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000064 
	      Call     SetSpriteSpeed ( .Actor:Self 00000002 *Fixed[12.0] )
	      Call     RunSpriteTo 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000000 )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
	      Kill     *Var[A] 
	      If  *Var[F]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Wait     0000000F 
	      Call     8027D7F0 ( )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Wait     00000014 
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[1]  00000014 
	Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
	Wait     00000001 
	Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
	Call     PlaySoundAtSprite 	( .Actor:Self 00000002 000002D1 )
	Call     8026FA00 ( FFFFFF81 00000002 00000000 00000000 00000000 )
	Call     8026FA00 ( FFFFFF81 00000002 00000002 00000000 00000000 )
	Exec     $Script_8021DAC4 *Var[A] 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetSpriteSpeed ( .Actor:Self 00000002 *Fixed[12.0] )
	Call     RunSpriteTo 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000000 )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000004 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     GetSpriteOffset 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000064 
	      Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[0.7001953] )
	      Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 0000001E .True )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
	      Kill     *Var[A] 
	      Call     8027D7F0 ( )
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:IdleAnimations $IdleAnimations_8021E490
.Status:Normal    005A0002
.Status:Stone     005A0000
.Status:Sleep     005A0011
.Status:Poison    005A0002
.Status:Stop      005A0000
.Status:Static    005A0002
.Status:Paralyze  005A0000
.Status:Dizzy     005A0012
.Status:Fear      005A0012
.Status:End

#new:IdleAnimations $IdleAnimations_8021E4DC
.Status:Normal    005A000D
.Status:End

#new:DefenseTable $DefenseTable_8021E4E8
.Element:Normal 00000001
.Element:End

#new:StatusTable $StatusTable_8021E4F4
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     60`
.Status:Frozen      0`
.Status:Dizzy      70`
.Status:Fear        0`
.Status:Static     80`
.Status:Paralyze   70`
.Status:Shrink     70`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -2`
.Status:End

#new:SpriteTable $SpriteTable_8021E5A0
00800000 01000000 FD2300FF $IdleAnimations_8021E490 $DefenseTable_8021E4E8 00000000 00000000 FDF60000 00000000 
00120001 02000000 000000FF $IdleAnimations_8021E4DC $DefenseTable_8021E4E8 00000000 00000000 00000000 00000000 
00120001 03000000 000000FF $IdleAnimations_8021E4DC $DefenseTable_8021E4E8 00000000 00000000 00000000 00000000 
00120001 04000000 000000FF $IdleAnimations_8021E4DC $DefenseTable_8021E4E8 00000000 00000000 00000000 00000000 
00120001 05000000 000000FF $IdleAnimations_8021E4DC $DefenseTable_8021E4E8 00000000 00000000 00000000 00000000 
00120001 06000000 000000FF $IdleAnimations_8021E4DC $DefenseTable_8021E4E8 00000000 00000000 00000000 00000000 

#new:Actor $HammerBros
% stats
[Index]        4Bb 
[Level]        27`b 
[MaxHP]        12`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021E4F4 
% ai
[SpriteCount]   6`s 
[SpriteTable] $SpriteTable_8021E5A0 
[Script]      $Script_Init_8021E6A0 
% move effectiveness
[Escape]       30`b 
[Item]         40`b 
[AirLift]      75`b 
[Hurricane]    60`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         28`b  38`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  35`b % dx dy

#new:Script $Script_Init_8021E6A0
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022028C )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8021E704 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021E860 )
	Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
	Return
	End

#new:Script $Script_Idle_8021E704
	Label    00000000 
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   Case  &  00001000 
	      Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
	      Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
	   Default
	      Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	      Switch  *Var[0] 
	         Case  ==  00000000 
	            Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFD 00000023 )
	            Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFD FFFFFFF6 )
	         Case  ==  00000001 
	            Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
	            Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
	      EndSwitch
	EndSwitch
	Wait     00000001 
	Goto     00000000 
	Return
	End

#new:Script $Script_HandleEvent_8021E860
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A000E 
	      ExecWait DoNormalHit 
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A000F 
	      SetConst  *Var[2]  005A0010 
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A000F 
	      SetConst  *Var[2]  005A0010 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A0010 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A000E 
	      ExecWait 8029B998 
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A000E 
	      ExecWait 8029B998 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A000E 
	      ExecWait DoDeath 
	      Return
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A0015 
	      ExecWait DoImmune 
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  !&  0035D000 
	         Call     SetAnimation 	( .Actor:Self 00000001 005A0017 )
	         Wait     0000000A 
	      EndIf
	   EndCaseGroup
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A000E 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A000E 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A0002 
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A0007 
	      SetConst  *Var[2]  005A000E 
	      ExecWait DoScareAway 
	      Return
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A0007 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  !&  0035D000 
	         If  *Var[0]  &  00080000 
	            Call     8026BA04 ( FFFFFF81 FFFFFFFE 00000001 00000000 )
	         Else
	            Call     8026BA04 ( FFFFFF81 FFFFFFFB 00000003 00000000 )
	         EndIf
	      EndIf
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A000E 
	      ExecWait DoBlowAway 
	      Return
	   Case  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  005A0002 
	      ExecWait DoImmune 
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021ED74
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     UseCamPreset 	( 00000002 )
	   Call     MoveCamOver 	( 00000001 )
	EndIf
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   ChildThread
	      Set  *Var[0]  00000000 
	      Label    00000000 
	      Add  *Var[0]  00000014 
	      Mod  *Var[0]  00000168 
	      Call     SetSpriteRotation 	( .Actor:Self 00000002 00000000 00000000 *Var[0] )
	      Wait     00000001 
	      Goto     00000000 
	   EndChildThread
	   Call     SetSpritePos 	( .Actor:Self 00000002 00000000 00000032 00000000 )
	   Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
	   Call     SetAnimation 	( .Actor:Self 00000001 005A000C )
	   Goto     00000064 
	EndIf
	ChildThread
	   Set  *Var[0]  00000000 
	   Label    00000000 
	   Add  *Var[0]  00000014 
	   Mod  *Var[0]  00000168 
	   Call     SetSpriteRotation 	( .Actor:Self 00000002 00000000 00000000 *Var[0] )
	   Wait     00000001 
	   Goto     00000000 
	EndChildThread
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub  *Var[0]  00000017 
	Add  *Var[1]  00000017 
	Sub  *Var[2]  00000002 
	Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
	Call     SetAnimation 	( .Actor:Self 00000001 005A000C )
	Wait     00000008 
	Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
	Label    00000064 
	Thread
	   Wait     0000000F 
	   Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
	EndThread
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  &  00080000 
	   Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	Else
	   Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	EndIf
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     8026FA00 ( FFFFFF81 00000002 00000002 00000000 00000000 )
	      Call     PlaySoundAtSprite 	( .Actor:Self 00000002 000002E9 )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000014 
	      Set  *Var[1]  0000000A 
	      Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[1.3007812] )
	      Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000F .True )
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Sub  *Var[0]  00000028 
	      Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000F .True )
	      Sub  *Var[0]  0000001E 
	      Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000A .True )
	      Sub  *Var[0]  00000014 
	      Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000005 .True )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
	      Wait     0000000F 
	      Call     8027D7F0 ( )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Wait     00000014 
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     8026FA00 ( FFFFFF81 00000002 00000002 00000000 00000000 )
	Call     PlaySoundAtSprite 	( .Actor:Self 00000002 000002E9 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[1.3007812] )
	Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000F .True )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80080332 00000005 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     GetSpriteOffset 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000032 
	      Set  *Var[1]  0000000A 
	      Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000014 .True )
	      Sub  *Var[0]  0000001E 
	      Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 0000000A .True )
	      Sub  *Var[0]  00000014 
	      Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000005 .True )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
	      Wait     00000014 
	      Call     8027D7F0 ( )
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021F5EC
	Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
	Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
	Call     SetAnimation 	( .Actor:Self 00000001 005A000C )
	Wait     00000004 
	Call     SetSpriteFlagBits 	( .Actor:Self *Var[0] 00000001 .False )
	Call     8026FA00 ( FFFFFF81 *Var[0] 00000002 00000000 00000000 )
	Call     PlaySoundAtSprite 	( .Actor:Self *Var[0] 000002E9 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[1] *Var[2] *Var[3] )
	Set  *Var[2]  0000000A 
	Call     RandInt     	( 0000003C *Var[4] )
	Set  *Var[5]  0000001E 
	Sub  *Var[5]  *Var[4] 
	Add  *Var[1]  *Var[5] 
	Call     SetSpriteJumpscale 	( .Actor:Self *Var[0] *Fixed[1.3007812] )
	Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000F .True )
	Sub  *Var[1]  00000032 
	Set  *Var[2]  0000000A 
	Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000014 .True )
	Sub  *Var[1]  0000001E 
	Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000A .True )
	Sub  *Var[1]  00000014 
	Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000005 .True )
	Call     SetSpriteFlagBits 	( .Actor:Self *Var[0] 00000001 .True )
	Return
	End

#new:Script $Script_8021F838
	Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
	Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
	Call     SetAnimation 	( .Actor:Self 00000001 005A000C )
	Wait     00000004 
	Call     SetSpriteFlagBits 	( .Actor:Self *Var[0] 00000001 .False )
	Call     8026FA00 ( FFFFFF81 *Var[0] 00000002 00000000 00000000 )
	Call     PlaySoundAtSprite 	( .Actor:Self *Var[0] 000002E9 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[1] *Var[2] *Var[3] )
	Call     SetSpriteJumpscale 	( .Actor:Self *Var[0] *Fixed[1.3007812] )
	Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000F .True )
	Sub  *Var[1]  00000032 
	Set  *Var[2]  0000000A 
	Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000014 .True )
	Sub  *Var[1]  0000001E 
	Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 0000000A .True )
	Sub  *Var[1]  00000014 
	Call     JumpSpriteA 	( .Actor:Self *Var[0] *Var[1] *Var[2] *Var[3] 00000005 .True )
	Call     SetSpriteFlagBits 	( .Actor:Self *Var[0] 00000001 .True )
	Return
	End

#new:Script $Script_8021FA30
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Thread
	   Set  *Var[0]  00000000 
	   Loop     00000064 
	      Add  *Var[0]  00000014 
	      Mod  *Var[0]  00000168 
	      Call     SetSpriteRotation 	( .Actor:Self 00000002 00000000 00000000 *Var[0] )
	      Call     SetSpriteRotation 	( .Actor:Self 00000003 00000000 00000000 *Var[0] )
	      Call     SetSpriteRotation 	( .Actor:Self 00000004 00000000 00000000 *Var[0] )
	      Call     SetSpriteRotation 	( .Actor:Self 00000005 00000000 00000000 *Var[0] )
	      Call     SetSpriteRotation 	( .Actor:Self 00000006 00000000 00000000 *Var[0] )
	      Wait     00000001 
	   EndLoop
	EndThread
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub  *Var[0]  00000017 
	Add  *Var[1]  00000017 
	Sub  *Var[2]  00000002 
	Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
	Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
	Call     SetSpritePos 	( .Actor:Self 00000004 *Var[0] *Var[1] *Var[2] )
	Call     SetSpritePos 	( .Actor:Self 00000005 *Var[0] *Var[1] *Var[2] )
	Call     SetSpritePos 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  &  00080000 
	   Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	   Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	   Call     SetSpriteScale ( .Actor:Self 00000004 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	   Call     SetSpriteScale ( .Actor:Self 00000005 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	   Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	Else
	   Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	   Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	   Call     SetSpriteScale ( .Actor:Self 00000004 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	   Call     SetSpriteScale ( .Actor:Self 00000005 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	   Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	EndIf
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Set  *Var[0]  00000002 
	      Exec     $Script_8021F5EC 
	      Wait     00000005 
	      Set  *Var[0]  00000003 
	      Exec     $Script_8021F5EC 
	      Wait     00000005 
	      Set  *Var[0]  00000004 
	      Exec     $Script_8021F5EC 
	      Wait     00000005 
	      Set  *Var[0]  00000005 
	      Exec     $Script_8021F5EC 
	      Wait     00000005 
	      Set  *Var[0]  00000006 
	      Exec     $Script_8021F5EC 
	      Wait     00000005 
	      Wait     00000014 
	      Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Wait     0000000F 
	      Call     8027D7F0 ( )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Wait     00000014 
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Thread
	   Set  *Var[0]  00000002 
	   Exec     $Script_8021F838 
	   Wait     00000005 
	   Set  *Var[0]  00000003 
	   Exec     $Script_8021F838 
	   Wait     00000005 
	   Set  *Var[0]  00000004 
	   Exec     $Script_8021F838 
	   Wait     00000005 
	   Set  *Var[0]  00000005 
	   Exec     $Script_8021F838 
	   Wait     00000005 
	   Set  *Var[0]  00000006 
	   Exec     $Script_8021F838 
	EndThread
	Wait     00000015 
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000010 )
	Wait     00000005 
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000040 )
	Wait     00000005 
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000040 )
	Wait     00000005 
	Call     SetAnimation 	( .Actor:Self 00000001 005A0002 )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000040 )
	Wait     00000005 
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80080332 00000002 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Wait     00000014 
	      Call     8027D7F0 ( )
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_8022028C
	Call     GetActorHP  	( .Actor:Self *Var[0] )
	Call     GetEnemyMaxHP 	( .Actor:Self *Var[1] )
	MulF  *Var[0]  *Fixed[100.0] 
	DivF  *Var[0]  *Var[1] 
	If  *Var[0]  >  00000022 
	   ExecWait $Script_8021ED74 
	Else
	   ExecWait $Script_8021FA30 
	EndIf
	Return
	End

PADDING: 8022031C to 80220320 (0068CD4C to 0068CD50)
00000000 

#new:IdleAnimations $IdleAnimations_80220320
.Status:Normal    00590001
.Status:Stone     00590000
.Status:Sleep     00590011
.Status:Poison    00590001
.Status:Stop      00590000
.Status:Static    00590001
.Status:Paralyze  00590000
.Status:Dizzy     00590013
.Status:Fear      00590013
.Status:End

#new:IdleAnimations $IdleAnimations_8022036C
.Status:Normal    00590003
.Status:Stone     00590000
.Status:Sleep     00590011
.Status:Poison    00590003
.Status:Stop      00590000
.Status:Static    00590003
.Status:Paralyze  00590000
.Status:Dizzy     00590013
.Status:Fear      00590013
.Status:End

#new:IdleAnimations $IdleAnimations_802203B8
.Status:Normal    0059000F
.Status:Stone     00590010
.Status:Sleep     00590012
.Status:Poison    0059000F
.Status:Stop      00590010
.Status:Static    0059000F
.Status:Paralyze  00590010
.Status:Dizzy     00590014
.Status:Fear      00590014
.Status:End

#new:IdleAnimations $IdleAnimations_80220404
.Status:Normal    00590006
.Status:Stone     00590006
.Status:Sleep     00590006
.Status:Poison    00590006
.Status:Stop      00590006
.Status:Static    00590006
.Status:Paralyze  00590006
.Status:Dizzy     00590006
.Status:Fear      00590006
.Status:End

#new:DefenseTable $DefenseTable_80220450
.Element:Normal 00000003
.Element:Shock  00000003
.Element:End

#new:DefenseTable $DefenseTable_80220464
.Element:Normal 00000000
.Element:End

#new:DefenseTable $DefenseTable_80220470
.Element:Normal 00000003
.Element:Fire   00000003
.Element:End

#new:StatusTable $StatusTable_80220484
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      50`
.Status:Poison     60`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     80`
.Status:Paralyze   75`
.Status:Shrink     70`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:StatusTable $StatusTable_80220530
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_802205CC
00800000 01000000 002000FF $IdleAnimations_80220320 $DefenseTable_80220450 00001010 00000000 00F40000 00000000 

#new:Actor $Koopatrol
% stats
[Index]        4Cb 
[Level]        25`b 
[MaxHP]         8`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80220484 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_802205CC 
[Script]      $Script_Init_80220618 
% move effectiveness
[Escape]       50`b 
[Item]         60`b 
[AirLift]      75`b 
[Hurricane]    65`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  85`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         32`b  42`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -15`b  32`b % dx dy
[StatusIcon]    5`b  32`b % dx dy

#new:Script $Script_Init_80220618
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80224684 )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8022098C )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80220E74 )
	Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_80220768 )
	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
	Call     GetIndexFromHome 	( .Actor:Self *Var[0] )
	Call     SetActorVar 	( .Actor:Self 00000002 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      Call     SetBattleVar 	( 00000004 00000000 )
	   Case  ==  00000001 
	      Call     SetBattleVar 	( 00000005 00000000 )
	   Case  ==  00000002 
	      Call     SetBattleVar 	( 00000006 00000000 )
	   Case  ==  00000003 
	      Call     SetBattleVar 	( 00000007 00000000 )
	EndSwitch
	Return
	End

#new:Script $Script_NextTurn_80220768
	Call     GetBattlePhase ( *Var[0] )
	Switch  *Var[0] 
	   Case  ==  .Phase:PlayerBegin
	   Case  ==  .Phase:EnemyBegin
	   Case  ==  .Phase:EnemyEnd
	      Call     SetBattleVar 	( 00000001 00000000 )
	EndSwitch
	Return
	End

#new:Script $Script_802207D4
	Switch  *Var[0] 
	   Case  ==  00000000 
	      If  *Var[1]  &  00041000 
	         Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
	         Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
	         Call     $Function_802180D0 ( FFFFFFF6 00000014 0000000A 00000014 )
	      Else
	         Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 00000020 )
	         Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
	         Call     $Function_802180D0 ( FFFFFFF1 00000020 00000005 00000020 )
	      EndIf
	   Case  ==  00000001 
	      Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
	      Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
	      Call     $Function_802180D0 ( FFFFFFF6 00000014 0000000A 00000014 )
	   Case  ==  00000002 
	      Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 00000014 )
	      Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFFA )
	      Call     $Function_802180D0 ( FFFFFFF1 00000016 00000005 00000016 )
	EndSwitch
	Return
	End

#new:Script $Script_Idle_8022098C
	Label    00000000 
	Call     RandInt     	( 00000050 *Var[A] )
	Add  *Var[A]  00000050 
	Loop     *Var[A] 
	   Label    00000001 
	   Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	   Call     GetStatusFlags ( .Actor:Self *Var[1] )
	   ExecWait $Script_802207D4 
	   If  *Var[0]  ==  00000001 
	      Wait     00000001 
	      Goto     00000001 
	   EndIf
	   If  *Var[1]  &  0235D000 
	      Wait     00000001 
	      Goto     00000001 
	   EndIf
	   Wait     00000001 
	EndLoop
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  00000005 
	Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022036C )
	Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	Call     8027A264 ( FFFFFF81 00000000 )
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80220320 )
	   Case  ==  00000001 
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802203B8 )
	EndSwitch
	Loop     00000014 
	   Label    00000002 
	   Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	   Call     GetStatusFlags ( .Actor:Self *Var[1] )
	   ExecWait $Script_802207D4 
	   If  *Var[0]  ==  00000001 
	      Wait     00000001 
	      Goto     00000002 
	   EndIf
	   If  *Var[1]  &  0235D000 
	      Wait     00000001 
	      Goto     00000002 
	   EndIf
	   Wait     00000001 
	EndLoop
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub  *Var[0]  00000005 
	Call     8026B6D0 ( FFFFFF81 *Fixed[1.0] )
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022036C )
	Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	Call     8027A264 ( FFFFFF81 00000000 )
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80220320 )
	   Case  ==  00000001 
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802203B8 )
	EndSwitch
	Loop     00000050 
	   Label    00000003 
	   Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	   Call     GetStatusFlags ( .Actor:Self *Var[1] )
	   ExecWait $Script_802207D4 
	   If  *Var[0]  ==  00000001 
	      Wait     00000001 
	      Goto     00000003 
	   EndIf
	   If  *Var[1]  &  0235D000 
	      Wait     00000001 
	      Goto     00000003 
	   EndIf
	   Wait     00000001 
	EndLoop
	Goto     00000000 
	Return
	End

#new:IntTable $IntTable_80220E1C
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 

#new:Script $Script_HandleEvent_80220E74
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetActorAngle 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         CaseOR  ==  00000000 
	         CaseOR  ==  00000001 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000B 
	            ExecWait DoNormalHit 
	         EndCaseGroup
	         Case  ==  00000002 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  00590006 
	            ExecWait DoNormalHit 
	      EndSwitch
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0059000C 
	      SetConst  *Var[2]  0059000D 
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0059000C 
	      SetConst  *Var[2]  0059000D 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0059000D 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         CaseOR  ==  00000000 
	         CaseOR  ==  00000001 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000B 
	            ExecWait 8029B998 
	         EndCaseGroup
	         Case  ==  00000002 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  00590006 
	            ExecWait 8029B998 
	      EndSwitch
	   Case  ==  .Event:MultibounceDeath
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         CaseOR  ==  00000000 
	         CaseOR  ==  00000001 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000B 
	            ExecWait 8029B998 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000B 
	            ExecWait DoDeath 
	         EndCaseGroup
	         Case  ==  00000002 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  00590006 
	            ExecWait 8029B998 
	            Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
	            Wait     00000005 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000B 
	            ExecWait DoDeath 
	      EndSwitch
	   Case  ==  .Event:FlipTrigger
	      Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
	      Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
	      Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80220464 )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802203B8 )
	      Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFB 0000000F )
	      Call     8027D4C8 ( FFFFFF81 00000001 00000000 00000000 )
	      Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .False )
	      Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
	      Call     SetAnimation 	( .Actor:Self 00000001 0059000B )
	      Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
	      Thread
	         Wait     00000004 
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 0000001E )
	         Wait     00000001 
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	         Wait     00000001 
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFE2 )
	         Wait     00000001 
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFC4 )
	         Wait     00000001 
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFB5 )
	         Wait     00000001 
	      EndThread
	      UseIntBuffer $IntTable_80220E1C 
	      Loop     00000016 
	         Get1Int  *Var[0] 
	         Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
	         Wait     00000001 
	      EndLoop
	      Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 0059000F )
	   Case  ==  .Event:ShockHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0059000B 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0059000B 
	      ExecWait 8029BD70 
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00590004 
	      ExecWait DoReturnHome 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	   Case  ==  .Event:ShockDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0059000B 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0059000B 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:StarBeam
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      If  *Var[0]  ==  00000002 
	         Call     SetStatusTable ( .Actor:Self $StatusTable_80220484 )
	         Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80220450 )
	         Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .True )
	         Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	         Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80220320 )
	         Call     GetStatusFlags ( .Actor:Self *Var[A] )
	         If  *Var[A]  !&  18000000 
	            Call     EnableActorGlow 	( .Actor:Self .False )
	         EndIf
	         Call     SetSpriteEventBits 	( .Actor:Self 00000001 00400000 .False )
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00590008 
	         ExecWait DoImmune 
	      EndIf
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         Case  ==  00000000 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  00590007 
	            ExecWait DoImmune 
	            Call     GetStatusFlags ( .Actor:Self *Var[0] )
	            If  *Var[0]  !&  0035D000 
	               Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
	               Wait     0000000A 
	            EndIf
	         Case  ==  00000001 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000F 
	            ExecWait DoImmune 
	         Case  ==  00000002 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  00590006 
	            ExecWait DoImmune 
	      EndSwitch
	   EndCaseGroup
	   Case  ==  .Event:SpikeTaunt
	      Wait     0000000A 
	      Set  *Flag[00]  00000000 
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     GetStatusFlags ( .Actor:Self *Var[3] )
	      If  *Var[3]  &  00080000 
	         Add  *Var[1]  00000010 
	         Set  *Flag[00]  00000001 
	      EndIf
	      If  *Var[3]  &  00040000 
	         Add  *Var[0]  FFFFFFF2 
	         Add  *Var[1]  00000014 
	         Set  *Flag[00]  00000001 
	      EndIf
	      If  *Var[3]  &  00001000 
	         Add  *Var[0]  FFFFFFF2 
	         Add  *Var[1]  00000014 
	         Set  *Flag[00]  00000001 
	      EndIf
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
	      If  *Var[A]  ==  00000002 
	         Add  *Var[1]  00000017 
	         Set  *Flag[00]  00000001 
	      EndIf
	      If  *Flag[00]  ==  00000000 
	         Add  *Var[1]  0000002A 
	      EndIf
	      Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	      Wait     00000014 
	   Case  ==  .Event:Death
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         CaseOR  ==  00000000 
	         CaseOR  ==  00000001 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000B 
	            ExecWait DoNormalHit 
	            Wait     0000000A 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000B 
	            ExecWait DoDeath 
	            Return
	         EndCaseGroup
	         Case  ==  00000002 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  00590006 
	            ExecWait DoNormalHit 
	            Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
	            Wait     00000005 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000B 
	            ExecWait DoDeath 
	            Return
	      EndSwitch
	   Case  ==  .Event:RecoverStatus
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         Case  ==  00000000 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  00590001 
	            ExecWait DoRecover 
	         Case  ==  00000001 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000F 
	            ExecWait DoImmune 
	         Case  ==  00000002 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  00590006 
	            ExecWait DoRecover 
	      EndSwitch
	   Case  ==  .Event:ScareAway
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         CaseOR  ==  00000000 
	         CaseOR  ==  00000002 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  00590004 
	            SetConst  *Var[2]  0059000B 
	            ExecWait DoScareAway 
	            Return
	         EndCaseGroup
	         Case  ==  00000001 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000F 
	            ExecWait DoImmune 
	      EndSwitch
	   Case  ==  .Event:BeginAirLift
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         Case  ==  00000000 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  00590016 
	            ExecWait DoAirLift 
	         Case  ==  00000001 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000F 
	            ExecWait DoAirLift 
	         Case  ==  00000002 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000F 
	            ExecWait DoAirLift 
	      EndSwitch
	   Case  ==  .Event:BlowAway
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         Case  ==  00000000 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  00590016 
	         Case  ==  00000001 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000F 
	         Case  ==  00000002 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000F 
	      EndSwitch
	      ExecWait DoBlowAway 
	      Return
	   Case  ==  .Event:AirLiftFailed
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         Case  ==  00000000 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  00590001 
	         Case  ==  00000001 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000F 
	         Case  ==  00000002 
	            SetConst  *Var[0]  00000001 
	            SetConst  *Var[1]  0059000F 
	      EndSwitch
	      ExecWait DoImmune 
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_ShellToss
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     SetAnimation 	( .Actor:Self 00000001 00590006 )
	Else
	   Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	   If  *Var[0]  ==  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
	      Sub  *Var[0]  00000001 
	      If  *Var[0]  >  00000000 
	         Call     SetActorVar 	( .Actor:Self 00000009 *Var[0] )
	         Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	         Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[3.0] )
	         Wait     0000000F 
	         Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
	         Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Else
	         Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	         Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[3.0] )
	         Wait     0000000A 
	         Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
	         Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	         Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
	         Call     PlaySoundAtActor 	( .Actor:Self .Sound:Jump )
	         Call     SetAnimation 	( .Actor:Self 00000001 0059000F )
	         Set  *Var[0]  00000000 
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
	         Thread
	            Loop     00000005 
	               Add  *Var[0]  0000000F 
	               Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	               Wait     00000001 
	            EndLoop
	         EndThread
	         Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     SetActorJumpscale 	( .Actor:Self *Fixed[3.0] )
	         Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	         Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	         Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	         Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
	         Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	         Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80220320 )
	         Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80220450 )
	         Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFC 00000020 )
	         Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
	         Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .True )
	         Call     SetActorFlagBits 	( .Actor:Self 00000400 .False )
	      EndIf
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndIf
	   Call     UseCamPreset 	( 0000003F )
	   Call     CamTargetActor ( .Actor:Self )
	   Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	   Wait     0000000A 
	   Call     SetAnimation 	( .Actor:Self 00000001 00590007 )
	   Wait     0000000A 
	   Thread
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[1]  00000004 
	      Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
	      Wait     00000003 
	      Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
	      Wait     00000002 
	      Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
	   EndThread
	   Call     PlaySoundAtActor 	( .Actor:Self 00002021 )
	   Call     SetAnimation 	( .Actor:Self 00000001 00590006 )
	   Wait     0000000A 
	   Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	EndIf
	Call     PlaySoundAtActor 	( .Actor:Self 000020D3 )
	Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000004 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     AddToGoalPos 	( .Actor:Self FFFFFFD8 00000000 00000000 )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Call     GetBattlePhase ( *Var[0] )
	      If  *Var[0]  ==  .Phase:FirstStrike
	         Call     UseCamPreset 	( 00000005 )
	         Call     SetCamZoom  	( 0000012C )
	         Call     SetCamOffsetZ 	( 00000014 )
	         Call     MoveCamOver 	( 0000000A )
	         Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	      EndIf
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
	      Wait     00000008 
	      Call     8026F6EC ( FFFFFF81 )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      Wait     00000004 
	      Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
	      Wait     00000001 
	      Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[1]  00000014 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
	      Wait     00000006 
	      Sub  *Var[1]  00000014 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	      Call     UseCamPreset 	( 00000002 )
	      Call     8027D7F0 ( )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     8026B438 ( FFFFFF81 00000001 00000000 )
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Call     8026F6EC ( FFFFFF81 )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000004 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[0]  00000028 
	      Set  *Var[1]  00000000 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	      Add  *Var[0]  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	      Add  *Var[0]  00000014 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
	      Wait     00000008 
	      Call     8027D7F0 ( )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00590004 
	      ExecWait DoReturnHome 
	      Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_SuperShellToss
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	If  *Var[0]  ==  00000000 
	   Call     UseCamPreset 	( 0000000E )
	   Call     CamTargetActor ( .Actor:Self )
	   Call     MoveCamOver 	( 00000014 )
	   Call     PlaySoundAtActor 	( .Actor:Self .Sound:PowerUp )
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Add  *Var[1]  0000000A 
	   Call     PlayEffect  	( {FX:EnergyIn:LongStreaks1} *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000002D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Call     SetAnimation 	( .Actor:Self 00000001 00590015 )
	   Wait     0000001E 
	   Call     UseCamPreset 	( 00000002 )
	   Call     MoveCamOver 	( 00000014 )
	   Thread
	      Wait     00000008 
	      Call     SetAnimation 	( .Actor:Self 00000001 00590007 )
	   EndThread
	   Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
	   Call     PlaySoundAtActor 	( .Actor:Self 000020BA )
	   Call     $Function_8021819C ( 00000080 0000000A )
	   Thread
	      Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.5] )
	   EndThread
	   Call     SetAnimation 	( .Actor:Self 00000001 00590006 )
	   Call     SetStatusTable ( .Actor:Self $StatusTable_80220530 )
	   Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80220470 )
	   Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .False )
	   Call     SetActorVar 	( .Actor:Self 00000000 00000002 )
	   Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80220404 )
	   Call     EnableActorGlow 	( .Actor:Self .True )
	   Call     SetSpriteEventBits 	( .Actor:Self 00000001 00400000 .True )
	   Wait     0000000A 
	   Call     UseIdleAnimation 	( .Actor:Self .True )
	   Call     EnableIdleScript 	( .Actor:Self 00000001 )
	   Return
	EndIf
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Loop     00000014 
	   Call     8026BA04 ( FFFFFF81 00000001 00000000 00000000 )
	   Wait     00000001 
	   Call     8026BA04 ( FFFFFF81 FFFFFFFF 00000000 00000000 )
	   Wait     00000001 
	EndLoop
	Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	Call     PlaySoundAtActor 	( .Actor:Self 0000037C )
	Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000004 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Thread
	         Loop     
	            Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Add  *Var[0]  0000001E 
	            Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	            If  *Var[0]  >  *Var[3] 
	               BreakLoop
	            EndIf
	            Wait     00000001 
	         EndLoop
	         Call     UseCamPreset 	( 00000001 )
	         If  *Var[A]  ==  00000005 
	            Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	         EndIf
	         Wait     0000000F 
	         Call     UseCamPreset 	( 00000002 )
	      EndThread
	      Thread
	         Loop     0000001E 
	            Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	            Call     PlayEffect  	( {FX:Steam:Ring} *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	            Wait     00000001 
	         EndLoop
	      EndThread
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     AddToGoalPos 	( .Actor:Self FFFFFF38 00000000 00000000 )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Wait     0000000F 
	      Call     GetStatusFlags ( .Actor:Self *Var[A] )
	      If  *Var[A]  !&  18000000 
	         Call     EnableActorGlow 	( .Actor:Self .False )
	      EndIf
	      Call     SetSpriteEventBits 	( .Actor:Self 00000001 00400000 .False )
	      Call     8027D7F0 ( )
	      Call     8026F6EC ( FFFFFF81 )
	      Call     SetActorPos 	( .Actor:Self 0000012C 00000000 00000000 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Call     SetAnimation 	( .Actor:Self 00000001 00590008 )
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     SetStatusTable ( .Actor:Self $StatusTable_80220484 )
	      Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80220450 )
	      Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .True )
	      Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80220320 )
	      Wait     0000000A 
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Thread
	   Loop     0000001E 
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     PlayEffect  	( {FX:Steam:Ring} *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	      Wait     00000001 
	   EndLoop
	EndThread
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[16.0] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[A] 00000000 0000FFFF 00000000 0000000A 00000020 )
	Switch  *Var[A] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Thread
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000010 00000000 )
	         Set  *Var[0]  00000000 
	         Loop     0000003C 
	            Add  *Var[0]  00000012 
	            Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	            Wait     00000001 
	         EndLoop
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      EndThread
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000032 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000001E 00000000 00000001 00000000 )
	      Sub  *Var[0]  00000028 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000001 00000000 )
	      Sub  *Var[0]  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	      Wait     00000014 
	      Call     8027D7F0 ( )
	      Call     GetStatusFlags ( .Actor:Self *Var[A] )
	      If  *Var[A]  !&  18000000 
	         Call     EnableActorGlow 	( .Actor:Self .False )
	      EndIf
	      Call     SetSpriteEventBits 	( .Actor:Self 00000001 00400000 .False )
	      Call     8026F6EC ( FFFFFF81 )
	      Call     SetActorPos 	( .Actor:Self 0000012C 00000000 00000000 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00590004 
	      ExecWait DoReturnHome 
	      Call     SetAnimation 	( .Actor:Self 00000001 00590001 )
	      Call     SetStatusTable ( .Actor:Self $StatusTable_80220484 )
	      Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_80220450 )
	      Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .True )
	      Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80220320 )
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_80223ADC
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000001 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetActorType 	( *Var[0] *Var[2] )
	Switch  *Var[2] 
	   CaseOR  ==  00000010 
	   CaseOR  ==  00000049 
	      Set  *Var[A]  FFFFFFFF 
	      Return
	   EndCaseGroup
	EndSwitch
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000001 
	EndIf
	Set  *Flag[01]  00000000 
	Set  *Flag[02]  00000000 
	Set  *Flag[03]  00000000 
	Set  *Flag[04]  00000000 
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetIndexFromHome 	( *Var[0] *Var[1] )
	Mod  *Var[1]  00000004 
	Switch  *Var[1] 
	   Case  ==  00000000 
	      Set  *Flag[01]  00000001 
	   Case  ==  00000001 
	      Set  *Flag[02]  00000001 
	   Case  ==  00000002 
	      Set  *Flag[03]  00000001 
	   Case  ==  00000003 
	      Set  *Flag[04]  00000001 
	EndSwitch
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	If  *Flag[01]  ==  00000000 
	   Set  *Var[A]  00000000 
	   Return
	EndIf
	If  *Flag[02]  ==  00000000 
	   Set  *Var[A]  00000001 
	   Return
	EndIf
	If  *Flag[03]  ==  00000000 
	   Set  *Var[A]  00000002 
	   Return
	EndIf
	If  *Flag[04]  ==  00000000 
	   Set  *Var[A]  00000003 
	   Return
	EndIf
	Set  *Var[A]  FFFFFFFF 
	Return
	End

#new:Vector3D $Vector3D_80223DEC
0` -1000` 0`

#new:SpecialFormation $SpecialFormation_80223DF8
$Koopatrol $Vector3D_80223DEC 00000064 00000000 00000000 00000000 00000000 

#new:Script $Script_SummonBackup
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     UseCamPreset 	( 0000000E )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 00000014 )
	Call     PlaySoundAtActor 	( .Actor:Self 000002E5 )
	Call     SetAnimation 	( .Actor:Self 00000001 00590002 )
	Wait     00000014 
	Loop     00000002 
	   Call     SetAnimation 	( .Actor:Self 00000001 00590002 )
	   Wait     00000008 
	   Call     PlaySoundAtActor 	( .Actor:Self 000002E5 )
	   Call     SetActorAngle 	( .Actor:Self 000000B4 )
	   Call     SetAnimation 	( .Actor:Self 00000001 00590009 )
	   Wait     00000008 
	   Call     SetAnimation 	( .Actor:Self 00000001 00590002 )
	   Wait     00000008 
	   Call     PlaySoundAtActor 	( .Actor:Self 000002E5 )
	   Call     SetActorAngle 	( .Actor:Self 00000000 )
	   Call     SetAnimation 	( .Actor:Self 00000001 00590009 )
	   Wait     00000008 
	EndLoop
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 0000000F )
	Thread
	   Wait     00000008 
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     PlayEffect  	( {FX:Sparkles:Star} *Var[0] *Var[1] *Var[2] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Call     PlaySoundAtActor 	( .Actor:Self 0000206D )
	EndThread
	Call     SetAnimation 	( .Actor:Self 00000001 00590016 )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 00000010 00000000 00000001 00000000 )
	Call     SummonEnemy 	( $SpecialFormation_80223DF8 00000000 )
	Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
	Add  *Var[1]  000000C8 
	Call     SetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
	Call     SetGoalToIndex ( *Var[0] *Var[A] )
	Call     PlaySoundAtActor 	( *Var[0] 000020D3 )
	Call     8026F740 ( *Var[0] 00000000 00000000 00000000 )
	Call     SetAnimation 	( *Var[0] 00000001 00590006 )
	Call     SetActorSpeed 	( *Var[0] *Fixed[6.0] )
	Call     RunToGoal   	( *Var[0] 00000000 .False )
	Call     SetAnimation 	( *Var[0] 00000001 00590008 )
	Wait     0000000A 
	Call     SetAnimation 	( *Var[0] 00000001 00590001 )
	Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
	Call     ForceHomePos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
	Call     HPBarToHome 	( *Var[0] )
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
	Switch  *Var[1] 
	   Case  ==  00000000 
	      Call     SetActorVar 	( *Var[0] 00000001 00000001 )
	   Case  ==  00000001 
	      Call     SetActorVar 	( *Var[0] 00000001 00000002 )
	EndSwitch
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[1] )
	Call     SetActorVar 	( *Var[0] 00000002 *Var[1] )
	Switch  *Var[1] 
	   Case  ==  00000000 
	      Call     GetBattleVar 	( 00000004 *Var[0] )
	      Add  *Var[0]  00000001 
	      Call     SetBattleVar 	( 00000004 *Var[0] )
	   Case  ==  00000001 
	      Call     GetBattleVar 	( 00000005 *Var[0] )
	      Add  *Var[0]  00000001 
	      Call     SetBattleVar 	( 00000005 *Var[0] )
	   Case  ==  00000002 
	      Call     GetBattleVar 	( 00000006 *Var[0] )
	      Add  *Var[0]  00000001 
	      Call     SetBattleVar 	( 00000006 *Var[0] )
	   Case  ==  00000003 
	      Call     GetBattleVar 	( 00000007 *Var[0] )
	      Add  *Var[0]  00000001 
	      Call     SetBattleVar 	( 00000007 *Var[0] )
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_80224434
	Set  *Var[9]  00000000 
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetActorType 	( *Var[0] *Var[2] )
	Switch  *Var[2] 
	   Case  ==  0000004C 
	      Call     GetStatusFlags ( *Var[0] *Var[3] )
	      If  *Var[3]  !&  0035D000 
	         Call     GetActorVar 	( *Var[0] 00000000 *Var[3] )
	         If  *Var[3]  ==  00000000 
	            Call     GetActorVar 	( *Var[0] 00000001 *Var[3] )
	            Switch  *Var[3] 
	               CaseOR  ==  00000000 
	               CaseOR  ==  00000001 
	                  Call     GetActorVar 	( .Actor:Self 00000002 *Var[3] )
	                  Switch  *Var[3] 
	                     Case  ==  00000000 
	                        Call     GetBattleVar 	( 00000004 *Var[4] )
	                     Case  ==  00000001 
	                        Call     GetBattleVar 	( 00000005 *Var[4] )
	                     Case  ==  00000002 
	                        Call     GetBattleVar 	( 00000006 *Var[4] )
	                     Case  ==  00000003 
	                        Call     GetBattleVar 	( 00000007 *Var[4] )
	                  EndSwitch
	                  If  *Var[4]  <  00000002 
	                     Add  *Var[9]  00000001 
	                  EndIf
	               EndCaseGroup
	               Case  ==  00000002 
	            EndSwitch
	         EndIf
	      EndIf
	EndSwitch
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	Return
	End

#new:Script $Script_TakeTurn_80224684
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     SetBattleVar 	( 00000001 00000001 )
	   ExecWait $Script_ShellToss 
	   Return
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      Call     GetBattleVar 	( 00000001 *Var[0] )
	      Switch  *Var[0] 
	         Case  ==  00000000 
	            Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	            Switch  *Var[0] 
	               CaseOR  ==  00000000 
	               CaseOR  ==  00000001 
	                  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	                  Switch  *Var[0] 
	                     Case  ==  00000000 
	                        Call     GetBattleVar 	( 00000004 *Var[1] )
	                     Case  ==  00000001 
	                        Call     GetBattleVar 	( 00000005 *Var[1] )
	                     Case  ==  00000002 
	                        Call     GetBattleVar 	( 00000006 *Var[1] )
	                     Case  ==  00000003 
	                        Call     GetBattleVar 	( 00000007 *Var[1] )
	                  EndSwitch
	                  If  *Var[1]  >=  00000002 
	                     Call     RandInt     	( 000003E8 *Var[0] )
	                     If  *Var[0]  <  0000012C 
	                        Call     SetBattleVar 	( 00000001 00000002 )
	                        ExecWait $Script_SuperShellToss 
	                     Else
	                        Call     SetBattleVar 	( 00000001 00000001 )
	                        ExecWait $Script_ShellToss 
	                     EndIf
	                     Return
	                  EndIf
	               EndCaseGroup
	               Case  ==  00000002 
	                  Call     RandInt     	( 000003E8 *Var[0] )
	                  If  *Var[0]  <  0000012C 
	                     Call     SetBattleVar 	( 00000001 00000002 )
	                     ExecWait $Script_SuperShellToss 
	                  Else
	                     Call     SetBattleVar 	( 00000001 00000001 )
	                     ExecWait $Script_ShellToss 
	                  EndIf
	                  Return
	            EndSwitch
	            ExecWait $Script_80223ADC 
	            If  *Var[A]  ==  FFFFFFFF 
	               Call     RandInt     	( 000003E8 *Var[0] )
	               If  *Var[0]  <  0000012C 
	                  Call     SetBattleVar 	( 00000001 00000002 )
	                  ExecWait $Script_SuperShellToss 
	               Else
	                  Call     SetBattleVar 	( 00000001 00000001 )
	                  ExecWait $Script_ShellToss 
	               EndIf
	               Return
	            EndIf
	            ExecWait $Script_80224434 
	            Switch  *Var[9] 
	               Case  ==  00000001 
	                  Call     RandInt     	( 000003E8 *Var[0] )
	                  If  *Var[0]  <  00000190 
	                     Call     SetBattleVar 	( 00000001 00000001 )
	                     ExecWait $Script_SummonBackup 
	                     Return
	                  EndIf
	               Case  ==  00000002 
	                  Call     RandInt     	( 000003E8 *Var[0] )
	                  If  *Var[0]  <  000000C8 
	                     Call     SetBattleVar 	( 00000001 00000001 )
	                     ExecWait $Script_SummonBackup 
	                     Return
	                  EndIf
	               Case  ==  00000003 
	                  Call     RandInt     	( 000003E8 *Var[0] )
	                  If  *Var[0]  <  00000064 
	                     Call     SetBattleVar 	( 00000001 00000001 )
	                     ExecWait $Script_SummonBackup 
	                     Return
	                  EndIf
	            EndSwitch
	            Call     RandInt     	( 000003E8 *Var[0] )
	            If  *Var[0]  <  0000012C 
	               Call     SetBattleVar 	( 00000001 00000002 )
	               ExecWait $Script_SuperShellToss 
	            Else
	               Call     SetBattleVar 	( 00000001 00000001 )
	               ExecWait $Script_ShellToss 
	            EndIf
	         Case  ==  00000001 
	            Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	            Switch  *Var[0] 
	               CaseOR  ==  00000000 
	               CaseOR  ==  00000001 
	                  Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	                  Switch  *Var[0] 
	                     Case  ==  00000000 
	                        Call     GetBattleVar 	( 00000004 *Var[1] )
	                     Case  ==  00000001 
	                        Call     GetBattleVar 	( 00000005 *Var[1] )
	                     Case  ==  00000002 
	                        Call     GetBattleVar 	( 00000006 *Var[1] )
	                     Case  ==  00000003 
	                        Call     GetBattleVar 	( 00000007 *Var[1] )
	                  EndSwitch
	                  If  *Var[1]  >=  00000002 
	                     Call     RandInt     	( 000003E8 *Var[0] )
	                     If  *Var[0]  <  0000012C 
	                        Call     SetBattleVar 	( 00000001 00000002 )
	                        ExecWait $Script_SuperShellToss 
	                     Else
	                        Call     SetBattleVar 	( 00000001 00000001 )
	                        ExecWait $Script_ShellToss 
	                     EndIf
	                     Return
	                  EndIf
	               EndCaseGroup
	               Case  ==  00000002 
	                  ExecWait $Script_ShellToss 
	                  Return
	            EndSwitch
	            ExecWait $Script_80223ADC 
	            If  *Var[A]  ==  FFFFFFFF 
	               ExecWait $Script_ShellToss 
	               Return
	            EndIf
	            ExecWait $Script_80224434 
	            Switch  *Var[9] 
	               Case  ==  00000001 
	                  Call     RandInt     	( 000003E8 *Var[0] )
	                  If  *Var[0]  <  00000190 
	                     ExecWait $Script_SummonBackup 
	                     Return
	                  EndIf
	               Case  ==  00000002 
	                  Call     RandInt     	( 000003E8 *Var[0] )
	                  If  *Var[0]  <  000000C8 
	                     ExecWait $Script_SummonBackup 
	                     Return
	                  EndIf
	               Case  ==  00000003 
	                  Call     RandInt     	( 000003E8 *Var[0] )
	                  If  *Var[0]  <  00000064 
	                     ExecWait $Script_SummonBackup 
	                     Return
	                  EndIf
	            EndSwitch
	            ExecWait $Script_ShellToss 
	         Case  ==  00000002 
	            ExecWait $Script_SuperShellToss 
	      EndSwitch
	   Case  ==  00000001 
	      Call     SetBattleVar 	( 00000001 00000001 )
	      ExecWait $Script_ShellToss 
	   Case  ==  00000002 
	      ExecWait $Script_SuperShellToss 
	EndSwitch
	Return
	End

PADDING: 80224F14 to 80224F20 (00691944 to 00691950)
00000000 00000000 00000000 

#new:DefenseTable $DefenseTable_80224F20
.Element:Normal 00000000
.Element:End

#new:DefenseTable $DefenseTable_80224F2C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80224F38
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      40`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     60`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End

#new:StatusTable $StatusTable_80224FE4
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      40`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     60`
.Status:Stop       80`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End

#new:SpriteTable $SpriteTable_80225090
00800000 01000000 022300FF $IdleAnimations_80225170 $DefenseTable_80224F20 00000000 00000000 FBF40000 00000000 

#new:SpriteTable $SpriteTable_802250B4
00020001 01000000 022300FF $IdleAnimations_80225170 $DefenseTable_80224F2C 00000000 00000000 FBF40000 00000000 
00800000 02000000 F62300FF $IdleAnimations_802251BC $DefenseTable_80224F2C 00800000 00000000 00F80000 00000000 
00020001 03000000 000000FF $IdleAnimations_80225208 $DefenseTable_80224F2C 00000000 00000000 00000000 00000000 

#new:Actor $Magikoopa
% stats
[Index]        4Db 
[Level]        26`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80224F38 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80225090 
[Script]      $Script_Init_80225D60 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      80`b 
[Hurricane]    70`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  32`b % dx dy

#new:Actor $FlyingMagikoopa
% stats
[Index]        4Eb 
[Level]        26`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80224FE4 
% ai
[SpriteCount]   3`s 
[SpriteTable] $SpriteTable_802250B4 
[Script]      $Script_Init_80225F20 
% move effectiveness
[Escape]       40`b 
[Item]         40`b 
[AirLift]      85`b 
[Hurricane]    75`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         48`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -25`b  20`b % dx dy
[StatusIcon]    1`b  34`b % dx dy

#new:IdleAnimations $IdleAnimations_80225170
.Status:Normal    00560001
.Status:Stone     00560000
.Status:Sleep     00560008
.Status:Poison    00560001
.Status:Stop      00560000
.Status:Static    00560001
.Status:Paralyze  00560000
.Status:Dizzy     00560007
.Status:Fear      00560007
.Status:End

#new:IdleAnimations $IdleAnimations_802251BC
.Status:Normal    00570001
.Status:Stone     00570000
.Status:Sleep     00570008
.Status:Poison    00570001
.Status:Stop      00570000
.Status:Static    00570001
.Status:Paralyze  00570000
.Status:Dizzy     00570007
.Status:Fear      00570007
.Status:End

#new:IdleAnimations $IdleAnimations_80225208
.Status:Normal    0057000A
.Status:End

#new:Script $Script_Idle_80225214
	Set  *Var[F]  00000000 
	Label    00000000 
	Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
	Call     ActorExists 	( *Var[0] *Var[1] )
	If  *Var[1]  ==  00000001 
	   Call     $Function_80218358 ( *Var[F] *Var[1] *Fixed[254.0] *Fixed[100.0] 00000014 00000000 00000000 )
	   Add  *Var[F]  00000001 
	   Call     GetActorFlags 	( .Actor:Self *Var[2] )
	   If  *Var[2]  &  00000200 
	      Call     SetSpriteAlpha ( .Actor:Self 00000002 *Var[1] )
	      Call     SetSpriteAlpha ( *Var[0] 00000001 *Var[1] )
	   Else
	      Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[1] )
	      Call     SetSpriteAlpha ( *Var[0] 00000001 *Var[1] )
	   EndIf
	Else
	   Set  *Var[F]  00000000 
	   Call     GetActorFlags 	( .Actor:Self *Var[2] )
	   If  *Var[2]  &  00000200 
	      Call     SetSpriteAlpha ( .Actor:Self 00000002 000000FF )
	   Else
	      Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
	   EndIf
	EndIf
	Wait     00000001 
	Goto     00000000 
	Return
	End

#new:Script $Script_802253E4
	Call     GetBattleFlags ( *Var[0] )
	If  *Var[0]  !&  00080000 
	   If  *Var[0]  &  00000240 
	      Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
	   EndIf
	Else
	   Call     $Function_802184E8 ( *Var[0] )
	   Switch  *Var[0] 
	      CaseOR  ==  00000083 
	      CaseOR  ==  00000084 
	      CaseOR  ==  00000085 
	      CaseOR  ==  00000088 
	         Call     GetBattleFlags ( *Var[0] )
	         If  *Var[0]  &  00000240 
	            Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
	         EndIf
	      EndCaseGroup
	   EndSwitch
	EndIf
	Return
	End

#new:Script $Script_802254F0
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	If  *Var[0]  ==  00000001 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560004 )
	   Goto     00000000 
	EndIf
	Call     GetLastElement ( *Var[0] )
	If  *Var[0]  &  00000400 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560004 )
	   Goto     00000000 
	EndIf
	Return
	Label    00000000 
	Call     8027D32C ( FFFFFF81 )
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  &  00080000 
	   Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	EndIf
	Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00800000 .True )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020001 .False )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020001 .True )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .False )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00100000 .True )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub  *Var[2]  00000001 
	Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
	Call     PlaySoundAtActor 	( .Actor:Self 00000301 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Set  *Var[1]  00000000 
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
	Call     $Function_802185E0 ( 00000096 0000000A )
	Thread
	   Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.7001953] )
	EndThread
	Call     GetEventType 	( .Actor:Self *Var[3] )
	If  *Var[3]  ==  0000000F
	   Call     SetAnimation 	( .Actor:Self 00000001 00560004 )
	   Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	   Add  *Var[4]  0000000A 
	   Add  *Var[5]  00000005 
	   Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	EndIf
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	Loop     00000014 
	   Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
	   Wait     00000001 
	   Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
	   Wait     00000001 
	EndLoop
	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
	Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
	Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80226338 )
	Call     SetActorType 	( FFFFFF81 0000004D )
	Call     SetStatusTable ( .Actor:Self $StatusTable_80224F38 )
	Call     $Function_80218514 ( FFFFFFF6 00000014 0000000A 00000020 )
	Call     SetActorFlagBits 	( .Actor:Self 00001000 .True )
	Call     8026F6EC ( FFFFFF81 )
	Call     GetIndexFromPos 	( .Actor:Self *Var[0] )
	Mod  *Var[0]  00000004 
	Call     SetGoalToIndex ( .Actor:Self *Var[0] )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     HPBarToHome 	( .Actor:Self )
	Return
	End

#new:Script $Script_RunAway
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     8027D32C ( FFFFFF81 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	If  *Var[0]  !=  .Event:ScareAway
	   Call     UseCamPreset 	( 0000000E )
	   Call     CamTargetActor ( .Actor:Self )
	   Call     MoveCamOver 	( 0000000F )
	   Wait     0000000F 
	   Call     UseCamPreset 	( 00000001 )
	EndIf
	Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  00000014 
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Wait     0000000A 
	Call     SetActorAngle 	( .Actor:Self 000000B4 )
	Call     EnableActorBlur 	( .Actor:Self 00000001 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  000000C8 
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Call     8027D7F0 ( )
	Call     UseCamPreset 	( 00000002 )
	ExecWait 80298BF0 
	Call     8027D32C ( FFFFFF81 )
	Call     RemoveActor 	( .Actor:Self )
	Return
	End

#new:Script $Script_NextTurn_80225D10
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	ConstAND *Var[0] FFFFFFFE 
	Call     SetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Return
	End

#new:Script $Script_Init_80225D60
	Call     BindIdle    	( .Actor:Self $Script_Idle_80225214 )
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022B784 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80226338 )
	Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_80225D10 )
	Call     GetBattleVar 	( 00000002 *Var[0] )
	If  *Var[0]  ==  00000000 
	   Call     SetBattleVar 	( 00000002 FFFFFFFF )
	EndIf
	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000004 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000005 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000006 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000007 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000009 FFFFFFFF )
	Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
	Call     SetActorVar 	( .Actor:Self 0000000B FFFFFFFF )
	Return
	End

#new:Script $Script_Init_80225F20
	Call     BindIdle    	( .Actor:Self $Script_Idle_80225214 )
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022B784 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80226A50 )
	Call     GetBattleVar 	( 00000002 *Var[0] )
	If  *Var[0]  ==  00000000 
	   Call     SetBattleVar 	( 00000002 FFFFFFFF )
	EndIf
	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000004 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000005 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000006 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000007 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000009 FFFFFFFF )
	Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
	Call     SetActorVar 	( .Actor:Self 0000000B FFFFFFFF )
	Return
	End

#new:Script $Script_802260CC
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	If  *Var[0]  ==  00000001 
	   Return
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
	Call     ActorExists 	( *Var[0] *Var[1] )
	If  *Var[1]  ==  00000000 
	   Return
	EndIf
	Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
	Call     GetLastElement ( *Var[A] )
	If  *Var[A]  &  20000000 
	   Label    00000000 
	   Call     GetBattleFlags ( *Var[A] )
	   If  *Var[A]  &  00000100 
	      Wait     00000001 
	      Goto     00000000 
	   EndIf
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
	Call     SetActorVar 	( .Actor:Self 00000009 FFFFFFFF )
	Call     GetActorFlags 	( .Actor:Self *Var[A] )
	If  *Var[A]  &  00000200 
	   Call     SetSpriteEventBits 	( .Actor:Self 00000002 00400000 .False )
	Else
	   Call     SetSpriteEventBits 	( .Actor:Self 00000001 00400000 .False )
	EndIf
	Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
	Call     RemoveActor 	( *Var[0] )
	Thread
	   Add  *Var[3]  00000002 
	   Loop     00000002 
	      Call     PlayEffect  	( {FX:BigSmokePuff} *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	      Wait     00000002 
	   EndLoop
	EndThread
	Return
	End

#new:Script $Script_HandleEvent_80226338
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   Case  ==  .Event:HitCombo
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      ConstOR  *Var[0] 00000001 
	      Call     SetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560004 
	      ExecWait DoNormalHit 
	   CaseOR  ==  .Event:Hit
	   CaseOR  ==  .Event:UpAndAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560004 
	      ExecWait DoNormalHit 
	      ExecWait $Script_802260CC 
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560005 
	      SetConst  *Var[2]  00560006 
	      ExecWait DoBurnHit 
	      ExecWait $Script_802260CC 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560005 
	      SetConst  *Var[2]  00560006 
	      ExecWait DoBurnHit 
	      ExecWait $Script_802260CC 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560006 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560004 
	      ExecWait 8029B998 
	      ExecWait $Script_802260CC 
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560004 
	      ExecWait 8029B998 
	      ExecWait $Script_802260CC 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560004 
	      ExecWait DoDeath 
	      Return
	   Case  ==  00000017
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560001 
	      ExecWait DoImmune 
	   Case  ==  .Event:Immune
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560001 
	      ExecWait DoImmune 
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      If  *Var[0]  &  00000001 
	         ExecWait $Script_802260CC 
	         Return
	      EndIf
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  !=  00000000 
	         ExecWait $Script_802260CC 
	      EndIf
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560004 
	      ExecWait DoNormalHit 
	      ExecWait $Script_802260CC 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560004 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560001 
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      ExecWait $Script_802260CC 
	      Call     SetAnimation 	( .Actor:Self 00000001 00560004 )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
	      Wait     0000000F 
	      Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
	      ExecWait $Script_RunAway 
	      Return
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560002 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      ExecWait $Script_802260CC 
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  !&  0035D000 
	         If  *Var[0]  &  00080000 
	            Call     SetSpriteOffset 	( .Actor:Self 00000001 00000000 00000002 00000000 )
	         Else
	            Call     SetSpriteOffset 	( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
	         EndIf
	      EndIf
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560004 
	      ExecWait DoBlowAway 
	      Return
	   Case  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560001 
	      ExecWait DoImmune 
	   Case  ==  .Event:StarBeam
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560004 
	      ExecWait DoNormalHit 
	      ExecWait $Script_802260CC 
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_HandleEvent_80226A50
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetSpriteAlpha ( .Actor:Self 00000002 000000FF )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   Case  ==  .Event:HitCombo
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      ConstOR  *Var[0] 00000001 
	      Call     SetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      ExecWait $Script_802253E4 
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570004 
	      ExecWait DoNormalHit 
	   CaseOR  ==  .Event:Hit
	   CaseOR  ==  .Event:FallTrigger
	      ExecWait $Script_802253E4 
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570004 
	      ExecWait DoNormalHit 
	      ExecWait $Script_802260CC 
	      ExecWait $Script_802254F0 
	   EndCaseGroup
	   Case  ==  .Event:UpAndAway
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570004 
	      ExecWait DoNormalHit 
	      ExecWait $Script_802260CC 
	   CaseOR  ==  .Event:BurnHit
	   CaseOR  ==  0000000F
	      ExecWait $Script_802253E4 
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570005 
	      SetConst  *Var[2]  00570006 
	      ExecWait DoBurnHit 
	      ExecWait $Script_802260CC 
	      ExecWait $Script_802254F0 
	   EndCaseGroup
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570005 
	      SetConst  *Var[2]  00570006 
	      ExecWait DoBurnHit 
	      ExecWait $Script_802260CC 
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570006 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570004 
	      ExecWait 8029B998 
	      ExecWait $Script_802260CC 
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570004 
	      ExecWait 8029B998 
	      ExecWait $Script_802260CC 
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570004 
	      ExecWait DoDeath 
	      Return
	   Case  ==  00000017
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570001 
	      ExecWait DoImmune 
	   Case  ==  .Event:Immune
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570001 
	      ExecWait DoImmune 
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      If  *Var[0]  &  00000001 
	         ExecWait $Script_802260CC 
	         Return
	      EndIf
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  !=  00000000 
	         ExecWait $Script_802260CC 
	      EndIf
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570004 
	      ExecWait DoNormalHit 
	      ExecWait $Script_802260CC 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570004 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:BeginFirstStrike
	      Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
	      Call     HPBarToCurrent ( .Actor:Self )
	   Case  ==  .Event:EndFirstStrike
	      Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	      Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:Linear )
	      Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
	      Call     HPBarToHome 	( .Actor:Self )
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570001 
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      ExecWait $Script_802260CC 
	      Call     SetAnimation 	( .Actor:Self 00000002 00570004 )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
	      Wait     0000000F 
	      Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
	      ExecWait $Script_RunAway 
	      Return
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570002 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      ExecWait $Script_802260CC 
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  !&  0035D000 
	         If  *Var[0]  &  00080000 
	            Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
	         Else
	            Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
	         EndIf
	      EndIf
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570004 
	      ExecWait DoBlowAway 
	      Return
	   Case  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570001 
	      ExecWait DoImmune 
	   Case  ==  .Event:StarBeam
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570004 
	      ExecWait DoNormalHit 
	      ExecWait $Script_802260CC 
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_HealOne
	Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
	Call     SetActorVar 	( .Actor:Self 0000000B 00000000 )
	Call     ActorVarAdd 	( .Actor:Self 00000004 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000000E )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 0000000F )
	Wait     0000000F 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
	EndIf
	Wait     00000005 
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      Sub  *Var[0]  00000006 
	      Add  *Var[1]  0000000C 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Else
	      Sub  *Var[0]  00000010 
	      Add  *Var[1]  0000001F 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	Else
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      Sub  *Var[0]  0000000C 
	      Add  *Var[1]  0000000E 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Else
	      Sub  *Var[0]  0000001E 
	      Add  *Var[1]  00000024 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	EndIf
	Wait     0000001E 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
	EndIf
	Wait     00000005 
	Thread
	   Wait     00000005 
	   Call     PlaySoundAtActor 	( *Var[B] 0000206D )
	   Call     PlaySoundAtActor 	( *Var[B] 00000214 )
	   Wait     0000001E 
	   Call     PlaySoundAtActor 	( *Var[B] 0000025C )
	EndThread
	Thread
	   Call     8026BF48 ( 00000001 )
	   Call     HealActor   	( *Var[B] 00000005 00000000 )
	   Call     8026BF48 ( 00000000 )
	EndThread
	Call     8027114C ( )
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 0000000A )
	Wait     0000000A 
	Call     8027D7F0 ( )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_HealAll
	Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
	Call     SetActorVar 	( .Actor:Self 0000000B 00000001 )
	Call     ActorVarAdd 	( .Actor:Self 00000003 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000000E )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 0000000F )
	Wait     0000000F 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
	EndIf
	Wait     00000005 
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      Sub  *Var[0]  00000006 
	      Add  *Var[1]  0000000C 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Else
	      Sub  *Var[0]  00000010 
	      Add  *Var[1]  0000001F 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	Else
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      Sub  *Var[0]  0000000C 
	      Add  *Var[1]  0000000E 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Else
	      Sub  *Var[0]  0000001E 
	      Add  *Var[1]  00000024 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	EndIf
	Wait     0000001E 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
	EndIf
	Wait     00000005 
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Set  *Flag[00]  00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetActorType 	( *Var[0] *Var[1] )
	If  *Var[1]  ==  00000047 
	   Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
	   If  *Var[1]  ==  00000001 
	      Set  *Flag[00]  00000001 
	   EndIf
	EndIf
	If  *Flag[00]  ==  00000000 
	   Thread
	      Wait     00000005 
	      Call     PlaySoundAtActor 	( *Var[0] 0000206D )
	      Call     PlaySoundAtActor 	( *Var[0] 00000214 )
	      Wait     0000001E 
	      Call     PlaySoundAtActor 	( *Var[0] 0000025C )
	   EndThread
	   Thread
	      Call     8026BF48 ( 00000001 )
	      Call     HealActor   	( *Var[0] 00000003 00000001 )
	      Call     8026BF48 ( 00000000 )
	   EndThread
	EndIf
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	Call     8027114C ( )
	Wait     00000001 
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 0000000A )
	Wait     0000000A 
	Call     8027D7F0 ( )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_ShapeSpell
	Call     SetActorVar 	( .Actor:Self 0000000B 00000002 )
	Set  *Flag[00]  00000000 
	Set  *Flag[01]  00000000 
	Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
	If  *Var[0]  ==  00000001 
	   Set  *Flag[00]  00000001 
	   Call     GetActorVar 	( .Actor:Self 00000009 *Var[A] )
	EndIf
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  &  00000200 
	   Set  *Flag[01]  00000001 
	EndIf
	Call     UseIdleAnimation 	( .Actor:Self .False )
	If  *Flag[00]  ==  00000001 
	   Call     UseIdleAnimation 	( *Var[A] .False )
	EndIf
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     UseCamPreset 	( 00000002 )
	   Call     MoveCamOver 	( 00000001 )
	Else
	   Call     UseCamPreset 	( 00000002 )
	   Call     MoveCamOver 	( 0000000A )
	EndIf
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
	If  *Flag[01]  ==  00000000 
	   If  *Flag[00]  ==  00000001 
	      Call     SetAnimation 	( *Var[A] 00000001 00560002 )
	      Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000011 
	      Add  *Var[1]  00000021 
	      Call     PlayEffect  	( {FX:GatherMagic:Pink} *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	   Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[3] )
	   If  *Var[3]  &  00080000 
	      Sub  *Var[0]  00000006 
	      Add  *Var[1]  0000000D 
	   Else
	      Sub  *Var[0]  00000011 
	      Add  *Var[1]  00000021 
	   EndIf
	   Call     PlayEffect  	( {FX:GatherMagic:Pink} *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Else
	   If  *Flag[00]  ==  00000001 
	      Call     SetAnimation 	( *Var[A] 00000001 00570002 )
	      Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  0000001E 
	      Add  *Var[1]  00000024 
	      Call     PlayEffect  	( {FX:GatherMagic:Pink} *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	   Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[3] )
	   If  *Var[3]  &  00080000 
	      Sub  *Var[0]  0000000C 
	      Add  *Var[1]  0000000E 
	   Else
	      Sub  *Var[0]  0000001E 
	      Add  *Var[1]  00000024 
	   EndIf
	   Call     PlayEffect  	( {FX:GatherMagic:Pink} *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	EndIf
	Wait     0000001E 
	Call     CheckPlayerHit ( .Actor:Self *Var[9] 00000000 00000000 00000001 00000010 )
	Switch  *Var[9] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      If  *Flag[00]  ==  00000001 
	         Call     PlaySoundAtActor 	( *Var[A] .Sound:SpellCast2 )
	      EndIf
	      Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
	      If  *Flag[01]  ==  00000000 
	         If  *Flag[00]  ==  00000001 
	            Call     SetAnimation 	( *Var[A] 00000001 00560003 )
	         EndIf
	         Call     SetAnimation 	( .Actor:Self 00000001 00560003 )
	      Else
	         If  *Flag[00]  ==  00000001 
	            Call     SetAnimation 	( *Var[A] 00000001 00570003 )
	         EndIf
	         Call     SetAnimation 	( .Actor:Self 00000002 00570003 )
	      EndIf
	      Wait     00000005 
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[4] *Var[5] *Var[6] )
	      Sub  *Var[4]  00000032 
	      Set  *Var[5]  00000000 
	      If  *Flag[01]  ==  00000000 
	         If  *Flag[00]  ==  00000001 
	            Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
	            Sub  *Var[0]  00000014 
	            Add  *Var[1]  00000014 
	            Call     $Function_80218200 ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 0000001E )
	         EndIf
	         Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     GetStatusFlags ( .Actor:Self *Var[3] )
	         If  *Var[3]  &  00080000 
	            Sub  *Var[0]  00000008 
	            Add  *Var[1]  00000008 
	         Else
	            Sub  *Var[0]  00000014 
	            Add  *Var[1]  00000014 
	         EndIf
	         Call     $Function_80218200 ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 0000001E )
	      Else
	         If  *Flag[00]  ==  00000001 
	            Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
	            Sub  *Var[0]  00000014 
	            Add  *Var[1]  00000014 
	            Call     $Function_80218200 ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 0000001E )
	         EndIf
	         Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     GetStatusFlags ( .Actor:Self *Var[3] )
	         If  *Var[3]  &  00080000 
	            Sub  *Var[0]  00000008 
	            Add  *Var[1]  00000008 
	         Else
	            Sub  *Var[0]  00000014 
	            Add  *Var[1]  00000014 
	         EndIf
	         Call     $Function_80218200 ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 0000001E )
	      EndIf
	      Wait     00000032 
	      If  *Var[9]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Wait     0000000F 
	      Call     8027D7F0 ( )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      If  *Flag[00]  ==  00000001 
	         Call     UseIdleAnimation 	( *Var[A] .True )
	      EndIf
	      Return
	   EndCaseGroup
	EndSwitch
	If  *Flag[00]  ==  00000001 
	   Call     PlaySoundAtActor 	( *Var[A] .Sound:SpellCast2 )
	EndIf
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
	If  *Flag[01]  ==  00000000 
	   If  *Flag[00]  ==  00000001 
	      Call     SetAnimation 	( *Var[A] 00000001 00560003 )
	   EndIf
	   Call     SetAnimation 	( .Actor:Self 00000001 00560003 )
	Else
	   If  *Flag[00]  ==  00000001 
	      Call     SetAnimation 	( *Var[A] 00000001 00570003 )
	   EndIf
	   Call     SetAnimation 	( .Actor:Self 00000002 00570003 )
	EndIf
	Wait     00000005 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[4] *Var[5] *Var[6] )
	If  *Flag[01]  ==  00000000 
	   If  *Flag[00]  ==  00000001 
	      Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000014 
	      Add  *Var[1]  00000014 
	      Call     $Function_80218200 ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 00000014 )
	   EndIf
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[3] )
	   If  *Var[3]  &  00080000 
	      Sub  *Var[0]  00000008 
	      Add  *Var[1]  00000008 
	   Else
	      Sub  *Var[0]  00000014 
	      Add  *Var[1]  00000014 
	   EndIf
	   Call     $Function_80218200 ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 00000014 )
	Else
	   If  *Flag[00]  ==  00000001 
	      Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000014 
	      Add  *Var[1]  00000014 
	      Call     $Function_80218200 ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 00000014 )
	   EndIf
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[3] )
	   If  *Var[3]  &  00080000 
	      Sub  *Var[0]  00000008 
	      Add  *Var[1]  00000008 
	   Else
	      Sub  *Var[0]  00000014 
	      Add  *Var[1]  00000014 
	   EndIf
	   Call     $Function_80218200 ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 00000014 )
	EndIf
	Wait     00000012 
	If  *Flag[00]  ==  00000001 
	   Wait     00000002 
	   Call     DamageTarget 	( .Actor:Self *Var[0] 10000010 00000000 00000000 00000006 00000020 )
	Else
	   Wait     00000002 
	   Call     DamageTarget 	( .Actor:Self *Var[0] 10000010 00000000 00000000 00000006 00000020 )
	EndIf
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Wait     00000014 
	      Call     8027D7F0 ( )
	   EndCaseGroup
	EndSwitch
	Call     UseIdleAnimation 	( .Actor:Self .True )
	If  *Flag[00]  ==  00000001 
	   Call     UseIdleAnimation 	( *Var[A] .True )
	EndIf
	Return
	End

#new:Script $Script_80228DA4
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetIndexFromHome 	( *Var[0] *Var[1] )
	Mod  *Var[1]  00000004 
	Switch  *Var[1] 
	   Case  ==  00000000 
	      Set  *Flag[0B]  00000001 
	   Case  ==  00000001 
	      Set  *Flag[0C]  00000001 
	   Case  ==  00000002 
	      Set  *Flag[0D]  00000001 
	   Case  ==  00000003 
	      Set  *Flag[0E]  00000001 
	EndSwitch
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	Set  *Var[0]  FFFFFFFF 
	Call     GetIndexFromHome 	( .Actor:Self *Var[1] )
	Mod  *Var[1]  00000004 
	Switch  *Var[1] 
	   Case  ==  00000000 
	      If  *Flag[0C]  ==  00000000 
	         Set  *Var[0]  00000001 
	      EndIf
	   Case  ==  00000001 
	      If  *Flag[0B]  ==  00000000 
	         Set  *Var[0]  00000000 
	      EndIf
	      If  *Flag[0D]  ==  00000000 
	         Set  *Var[0]  00000002 
	      EndIf
	   Case  ==  00000002 
	      If  *Flag[0C]  ==  00000000 
	         Set  *Var[0]  00000001 
	      EndIf
	      If  *Flag[0E]  ==  00000000 
	         Set  *Var[0]  00000003 
	      EndIf
	   Case  ==  00000003 
	      If  *Flag[0D]  ==  00000000 
	         Set  *Var[0]  00000002 
	      EndIf
	EndSwitch
	If  *Var[0]  !=  FFFFFFFF 
	   Call     GetActorFlags 	( .Actor:Self *Var[1] )
	   If  *Var[1]  &  00000200 
	      Add  *Var[0]  00000004 
	   EndIf
	EndIf
	Return
	End

#new:Script $Script_HandleEvent_8022908C
	Return
	End

#new:Script $Script_Init_8022909C
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022908C )
	Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
	Return
	End

#new:Script $Script_Init_802290D8
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022908C )
	Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
	Return
	End

#new:DefenseTable $DefenseTable_80229114
.Element:Normal 00000000
.Element:End

#new:DefenseTable $DefenseTable_80229120
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8022912C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:StatusTable $StatusTable_802291D8
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_80229284
00800000 01000000 022300FF $IdleAnimations_80225170 $DefenseTable_80229114 00000020 00000000 FBF40000 00000000 

#new:SpriteTable $SpriteTable_802292A8
00800000 01000000 F62300FF $IdleAnimations_802251BC $DefenseTable_80229120 00000020 00000000 00F80000 00000000 

#new:Actor $Magiclone
% stats
[Index]        4Fb 
[Level]        26`b 
[MaxHP]        11`b 
[Coins]         0`b 
[Flags]       00200000 
[StatusTable] $StatusTable_8022912C 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80229284 
[Script]      $Script_Init_8022909C 
% move effectiveness
[Escape]       40`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  75`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  32`b % dx dy

#new:Actor $FlyingMagiclone
% stats
[Index]        50b 
[Level]        26`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00200200 
[StatusTable] $StatusTable_802291D8 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_802292A8 
[Script]      $Script_Init_802290D8 
% move effectiveness
[Escape]       40`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  75`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         48`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -25`b  20`b % dx dy
[StatusIcon]    1`b  34`b % dx dy

#new:Vector3D $Vector3D_8022931C
0` -1000` 0`

#new:SpecialFormation $SpecialFormation_80229328
$Magiclone $Vector3D_8022931C 00000000 00000000 00000000 00000000 00000000 

#new:SpecialFormation $SpecialFormation_80229344
$FlyingMagiclone $Vector3D_8022931C 00000000 00000000 00000000 00000000 00000000 

#new:Script $Script_MakeCopy
	Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
	If  *Var[0]  ==  00000001 
	   ExecWait $Script_RunAway 
	   Return
	EndIf
	Call     SetActorVar 	( .Actor:Self 0000000A 00000001 )
	Call     SetActorVar 	( .Actor:Self 0000000B 00000003 )
	Set  *Flag[00]  00000000 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  &  00000200 
	   Set  *Flag[00]  00000001 
	EndIf
	If  *Flag[00]  ==  00000000 
	   Call     SummonEnemy 	( $SpecialFormation_80229328 00000000 )
	Else
	   Call     SummonEnemy 	( $SpecialFormation_80229344 00000000 )
	EndIf
	Call     SetActorVar 	( .Actor:Self 00000009 *Var[0] )
	Set  *Var[A]  *Var[0] 
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     EnableIdleScript 	( *Var[A] 00000000 )
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     UseIdleAnimation 	( *Var[A] .False )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000000E )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 00000019 )
	Wait     00000019 
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast3 )
	If  *Flag[00]  ==  00000000 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
	   Call     SetAnimation 	( *Var[A] 00000001 00560002 )
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Add  *Var[1]  00000017 
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
	   Call     SetAnimation 	( *Var[A] 00000001 00570002 )
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Add  *Var[1]  00000017 
	EndIf
	Call     PlayEffect  	( {FX:EnergyIn:Stars} *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Wait     0000000A 
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     EnableIdleScript 	( *Var[9] 00000001 )
	Wait     0000001E 
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[2]  FFFFFFFD 
	Call     SetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
	Set  *Var[9]  *Var[A] 
	Wait     0000000F 
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 0000001E )
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast4 )
	Call     PlaySoundAtActor 	( *Var[9] .Sound:SpellCast4 )
	Call     SetSpriteFlagBits 	( *Var[9] 00000001 00800000 .False )
	Call     RandInt     	( 000003E8 *Var[0] )
	If  *Var[0]  <  000001F4 
	   Call     SetActorSpeed 	( .Actor:Self *Fixed[2.0] )
	   ExecWait $Script_80228DA4 
	   Call     SetGoalToIndex ( .Actor:Self *Var[0] )
	   Call     MoveToGoal  	( .Actor:Self 00000000 00000000 .Easing:Linear )
	Else
	   Call     SetActorSpeed 	( *Var[9] *Fixed[2.0] )
	   ExecWait $Script_80228DA4 
	   Call     SetGoalToIndex ( *Var[9] *Var[0] )
	   Call     MoveToGoal  	( *Var[9] 00000000 00000000 .Easing:Linear )
	EndIf
	Call     SetSpriteFlagBits 	( *Var[9] 00000001 00800000 .True )
	Call     GetActorHP  	( .Actor:Self *Var[0] )
	Call     SetEnemyHP  	( *Var[9] *Var[0] )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     HPBarToHome 	( .Actor:Self )
	Call     GetActorPos 	( *Var[9] *Var[0] *Var[1] *Var[2] )
	Call     ForceHomePos 	( *Var[9] *Var[0] *Var[1] *Var[2] )
	Call     HPBarToHome 	( *Var[9] )
	If  *Flag[00]  ==  00000000 
	   Call     SetSpriteEventBits 	( .Actor:Self 00000001 00400000 .True )
	Else
	   Call     SetSpriteEventBits 	( .Actor:Self 00000002 00400000 .True )
	EndIf
	If  *Flag[00]  ==  00000000 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
	   Call     SetAnimation 	( *Var[9] 00000001 00560001 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
	   Call     SetAnimation 	( *Var[9] 00000001 00570001 )
	EndIf
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Call     UseIdleAnimation 	( *Var[9] .True )
	Return
	End

#new:Script $Script_BoostAttack
	Set  *Flag[00]  00000000 
	Label    0000000A 
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetIndexFromHome 	( *Var[0] *Var[1] )
	Call     GetBattleVar 	( 00000002 *Var[2] )
	If  *Var[1]  >  *Var[2] 
	   Call     $Function_80218638 ( *Var[0] *Var[3] )
	   If  *Var[3]  ==  00000000 
	      Call     GetActorAttackBoost 	( *Var[0] *Var[4] )
	      If  *Var[4]  <  00000003 
	         Set  *Var[8]  *Var[0] 
	         Call     SetBattleVar 	( 00000002 *Var[1] )
	         Goto     00000064 
	      EndIf
	   EndIf
	EndIf
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	If  *Flag[00]  ==  00000000 
	   Set  *Flag[00]  00000001 
	   Call     SetBattleVar 	( 00000002 FFFFFFFF )
	   Goto     0000000A 
	EndIf
	Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
	If  *Var[0]  ==  00000001 
	   ExecWait $Script_RunAway 
	   Return
	EndIf
	ExecWait $Script_ShapeSpell 
	Return
	Label    00000064 
	Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
	Call     SetActorVar 	( .Actor:Self 0000000B 00000004 )
	Call     ActorVarAdd 	( .Actor:Self 00000005 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000000E )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 0000000F )
	Wait     0000000F 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
	EndIf
	Wait     00000005 
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      Sub  *Var[0]  00000006 
	      Add  *Var[1]  0000000C 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Else
	      Sub  *Var[0]  00000010 
	      Add  *Var[1]  0000001F 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	Else
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      Sub  *Var[0]  0000000C 
	      Add  *Var[1]  0000000E 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Else
	      Sub  *Var[0]  0000001E 
	      Add  *Var[1]  00000024 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	EndIf
	Wait     0000001E 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
	EndIf
	Wait     00000005 
	Thread
	   Wait     0000000A 
	   Call     PlaySoundAtActor 	( *Var[8] 000002DD )
	EndThread
	Thread
	   Call     8026BF48 ( 00000001 )
	   Call     BoostAttack 	( *Var[8] 00000001 )
	   Call     8026BF48 ( 00000000 )
	EndThread
	Call     8027114C ( )
	Call     UseCamPreset 	( 00000002 )
	Wait     0000000A 
	Call     8027D7F0 ( )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_BoostDefense
	Set  *Flag[00]  00000000 
	Label    0000000A 
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetIndexFromHome 	( *Var[0] *Var[1] )
	Call     GetBattleVar 	( 00000002 *Var[2] )
	If  *Var[1]  >  *Var[2] 
	   Call     $Function_80218638 ( *Var[0] *Var[3] )
	   If  *Var[3]  ==  00000000 
	      Call     GetActorDefenseBoost 	( *Var[0] *Var[4] )
	      If  *Var[4]  <  00000003 
	         Set  *Var[8]  *Var[0] 
	         Call     SetBattleVar 	( 00000002 *Var[1] )
	         Goto     00000064 
	      EndIf
	   EndIf
	EndIf
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	If  *Flag[00]  ==  00000000 
	   Set  *Flag[00]  00000001 
	   Call     SetBattleVar 	( 00000002 FFFFFFFF )
	   Goto     0000000A 
	EndIf
	Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
	If  *Var[0]  ==  00000001 
	   ExecWait $Script_RunAway 
	   Return
	EndIf
	ExecWait $Script_ShapeSpell 
	Return
	Label    00000064 
	Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
	Call     SetActorVar 	( .Actor:Self 0000000B 00000005 )
	Call     ActorVarAdd 	( .Actor:Self 00000006 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000000E )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 0000000F )
	Wait     0000000F 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
	EndIf
	Wait     00000005 
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      Sub  *Var[0]  00000006 
	      Add  *Var[1]  0000000C 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Else
	      Sub  *Var[0]  00000010 
	      Add  *Var[1]  0000001F 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	Else
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      Sub  *Var[0]  0000000C 
	      Add  *Var[1]  0000000E 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Else
	      Sub  *Var[0]  0000001E 
	      Add  *Var[1]  00000024 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	EndIf
	Wait     0000001E 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
	EndIf
	Wait     00000005 
	Thread
	   Wait     0000000A 
	   Call     PlaySoundAtActor 	( *Var[8] 000002DD )
	EndThread
	Thread
	   Call     8026BF48 ( 00000001 )
	   Call     BoostDefense 	( *Var[8] 00000001 )
	   Call     8026BF48 ( 00000000 )
	EndThread
	Call     8027114C ( )
	Call     UseCamPreset 	( 00000002 )
	Wait     0000000A 
	Call     8027D7F0 ( )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_Electrify
	Set  *Flag[00]  00000000 
	Label    0000000A 
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetIndexFromHome 	( *Var[0] *Var[1] )
	Call     GetBattleVar 	( 00000002 *Var[2] )
	If  *Var[1]  >  *Var[2] 
	   Call     $Function_80218638 ( *Var[0] *Var[3] )
	   If  *Var[3]  ==  00000000 
	      Call     GetStatusFlags ( *Var[0] *Var[4] )
	      If  *Var[4]  !&  04002000 
	         Set  *Var[8]  *Var[0] 
	         Call     SetBattleVar 	( 00000002 *Var[1] )
	         Goto     00000064 
	      EndIf
	   EndIf
	EndIf
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	If  *Flag[00]  ==  00000000 
	   Set  *Flag[00]  00000001 
	   Call     SetBattleVar 	( 00000002 FFFFFFFF )
	   Goto     0000000A 
	EndIf
	Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
	If  *Var[0]  ==  00000001 
	   ExecWait $Script_RunAway 
	   Return
	EndIf
	ExecWait $Script_ShapeSpell 
	Return
	Label    00000064 
	Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
	Call     SetActorVar 	( .Actor:Self 0000000B 00000006 )
	Call     ActorVarAdd 	( .Actor:Self 00000007 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000000E )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 0000000F )
	Wait     0000000F 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
	EndIf
	Wait     00000005 
	Call     PlaySoundAtActor 	( .Actor:Self 000002F0 )
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      Sub  *Var[0]  00000006 
	      Add  *Var[1]  0000000C 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:SnakingStatic} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Else
	      Sub  *Var[0]  00000010 
	      Add  *Var[1]  0000001F 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:SnakingStatic} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	Else
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      Sub  *Var[0]  0000000C 
	      Add  *Var[1]  0000000E 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:SnakingStatic} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Else
	      Sub  *Var[0]  0000001E 
	      Add  *Var[1]  00000024 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:SnakingStatic} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	EndIf
	Wait     0000001E 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
	EndIf
	Wait     00000005 
	Thread
	   Wait     0000000A 
	   Loop     00000004 
	      Call     PlaySoundAtActor 	( *Var[8] 000003D2 )
	      Call     RandInt     	( 00000003 *Var[0] )
	      Add  *Var[0]  00000003 
	      Wait     *Var[0] 
	   EndLoop
	EndThread
	Thread
	   Call     8026BF48 ( 00000001 )
	   Call     ElectrifyActor ( *Var[8] 00000003 )
	   Call     8026BF48 ( 00000000 )
	EndThread
	Call     8027114C ( )
	Call     UseCamPreset 	( 00000002 )
	Wait     0000000A 
	Call     8027D7F0 ( )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_Vanish
	Set  *Flag[00]  00000000 
	Label    0000000A 
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetIndexFromHome 	( *Var[0] *Var[1] )
	Call     GetBattleVar 	( 00000002 *Var[2] )
	If  *Var[1]  >  *Var[2] 
	   Call     $Function_80218638 ( *Var[0] *Var[3] )
	   If  *Var[3]  ==  00000000 
	      Call     GetStatusFlags ( *Var[0] *Var[4] )
	      If  *Var[4]  !&  04002000 
	         Set  *Var[8]  *Var[0] 
	         Call     SetBattleVar 	( 00000002 *Var[1] )
	         Goto     00000064 
	      EndIf
	   EndIf
	EndIf
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	If  *Flag[00]  ==  00000000 
	   Set  *Flag[00]  00000001 
	   Call     SetBattleVar 	( 00000002 FFFFFFFF )
	   Goto     0000000A 
	EndIf
	Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
	If  *Var[0]  ==  00000001 
	   ExecWait $Script_RunAway 
	   Return
	EndIf
	ExecWait $Script_ShapeSpell 
	Return
	Label    00000064 
	Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
	Call     SetActorVar 	( .Actor:Self 0000000B 00000007 )
	Call     ActorVarAdd 	( .Actor:Self 00000008 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000000E )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 0000000F )
	Wait     0000000F 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
	EndIf
	Wait     00000005 
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      Sub  *Var[0]  00000006 
	      Add  *Var[1]  0000000C 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:WhiteWaves} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Else
	      Sub  *Var[0]  00000010 
	      Add  *Var[1]  0000001F 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:WhiteWaves} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	Else
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      Sub  *Var[0]  0000000C 
	      Add  *Var[1]  0000000E 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:WhiteWaves} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Else
	      Sub  *Var[0]  0000001E 
	      Add  *Var[1]  00000024 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:WhiteWaves} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	EndIf
	Wait     0000001E 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
	EndIf
	Wait     00000005 
	Thread
	   Wait     0000000A 
	   Call     PlaySoundAtActor 	( *Var[8] 000002DB )
	EndThread
	Thread
	   Call     8026BF48 ( 00000001 )
	   Call     VanishActor 	( *Var[8] 00000002 )
	   Call     8026BF48 ( 00000000 )
	EndThread
	Call     8027114C ( )
	Call     UseCamPreset 	( 00000002 )
	Wait     0000000A 
	Call     8027D7F0 ( )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_8022B784
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   ExecWait $Script_ShapeSpell 
	   Return
	EndIf
	Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
	If  *Var[0]  ==  00000001 
	   Goto     00000014 
	EndIf
	Set  *Var[A]  00000000 
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Set  *Flag[00]  00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetActorType 	( *Var[0] *Var[1] )
	If  *Var[1]  ==  00000047 
	   Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
	   If  *Var[1]  ==  00000001 
	      Set  *Flag[00]  00000001 
	   EndIf
	EndIf
	Call     GetActorHP  	( *Var[0] *Var[2] )
	Call     GetEnemyMaxHP 	( *Var[0] *Var[3] )
	MulF  *Var[2]  *Fixed[100.0] 
	DivF  *Var[2]  *Var[3] 
	If  *Flag[00]  ==  00000000 
	   If  *Var[2]  <=  00000019 
	      Call     RandInt     	( 00000063 *Var[4] )
	      Add  *Var[4]  00000001 
	      If  *Var[4]  <  0000004B 
	         Add  *Var[A]  00000001 
	         Set  *Var[B]  *Var[0] 
	      EndIf
	   EndIf
	EndIf
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	If  *Var[A]  >  00000000 
	   Goto     0000000A 
	EndIf
	Set  *Var[A]  00000000 
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000001 
	Set  *Flag[00]  00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetActorType 	( *Var[0] *Var[1] )
	If  *Var[1]  ==  00000047 
	   Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
	   If  *Var[1]  ==  00000001 
	      Set  *Flag[00]  00000001 
	   EndIf
	EndIf
	Call     GetActorHP  	( *Var[0] *Var[2] )
	Call     GetEnemyMaxHP 	( *Var[0] *Var[3] )
	MulF  *Var[2]  *Fixed[100.0] 
	DivF  *Var[2]  *Var[3] 
	If  *Flag[00]  ==  00000000 
	   If  *Var[2]  <=  00000014 
	      Call     RandInt     	( 00000063 *Var[4] )
	      Add  *Var[4]  00000001 
	      If  *Var[4]  <  00000050 
	         Add  *Var[A]  00000001 
	         Set  *Var[B]  *Var[0] 
	      EndIf
	   EndIf
	EndIf
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000001 
	EndIf
	If  *Var[A]  >  00000000 
	   Goto     0000000A 
	EndIf
	Set  *Var[A]  00000000 
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000002 
	Set  *Flag[00]  00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetActorType 	( *Var[0] *Var[1] )
	If  *Var[1]  ==  00000047 
	   Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
	   If  *Var[1]  ==  00000001 
	      Set  *Flag[00]  00000001 
	   EndIf
	EndIf
	Call     GetActorHP  	( *Var[0] *Var[2] )
	Call     GetEnemyMaxHP 	( *Var[0] *Var[3] )
	MulF  *Var[2]  *Fixed[100.0] 
	DivF  *Var[2]  *Var[3] 
	If  *Flag[00]  ==  00000000 
	   If  *Var[2]  <=  0000000F 
	      Call     RandInt     	( 00000063 *Var[4] )
	      Add  *Var[4]  00000001 
	      If  *Var[4]  <  00000064 
	         Add  *Var[A]  00000001 
	         Set  *Var[B]  *Var[0] 
	      EndIf
	   EndIf
	EndIf
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000002 
	EndIf
	If  *Var[A]  >  00000000 
	   Goto     0000000A 
	EndIf
	Goto     00000014 
	Label    0000000A 
	Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
	If  *Var[0]  ==  00000001 
	   ExecWait $Script_RunAway 
	   Return
	EndIf
	If  *Var[A]  ==  00000001 
	   Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
	   If  *Var[0]  <  00000002 
	      Call     RandInt     	( 000003E8 *Var[0] )
	      If  *Var[0]  <  000001F4 
	         ExecWait $Script_HealOne 
	         Return
	      EndIf
	   Else
	      Call     GetActorVar 	( .Actor:Self 00000003 *Var[0] )
	      If  *Var[0]  <  00000002 
	         Call     RandInt     	( 000003E8 *Var[0] )
	         If  *Var[0]  <  000001F4 
	            ExecWait $Script_HealAll 
	            Return
	         EndIf
	      EndIf
	   EndIf
	Else
	   Call     GetActorVar 	( .Actor:Self 00000003 *Var[0] )
	   If  *Var[0]  <  00000002 
	      Call     RandInt     	( 000003E8 *Var[0] )
	      If  *Var[0]  <  000001F4 
	         ExecWait $Script_HealAll 
	         Return
	      EndIf
	   Else
	      Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
	      If  *Var[0]  <  00000002 
	         SetF  *Var[9]  *Fixed[100.0] 
	         Call     CreateTargetList 	( 00008002 )
	         Call     InitTargetIterator 	( )
	         Label    0000000B 
	         Set  *Flag[00]  00000000 
	         Call     GetOwnerTarget ( *Var[0] *Var[1] )
	         Call     GetActorType 	( *Var[0] *Var[1] )
	         If  *Var[1]  ==  00000047 
	            Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
	            If  *Var[1]  ==  00000001 
	               Set  *Flag[00]  00000001 
	            EndIf
	         EndIf
	         Call     GetActorHP  	( *Var[0] *Var[2] )
	         Call     GetEnemyMaxHP 	( *Var[0] *Var[3] )
	         MulF  *Var[2]  *Fixed[100.0] 
	         DivF  *Var[2]  *Var[3] 
	         If  *Flag[00]  ==  00000000 
	            If  *Var[2]  <=  *Var[9] 
	               SetF  *Var[9]  *Var[2] 
	               Set  *Var[B]  *Var[0] 
	            EndIf
	         EndIf
	         Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	         If  *Var[0]  !=  FFFFFFFF 
	            Goto     0000000B 
	         EndIf
	         Call     RandInt     	( 000003E8 *Var[0] )
	         If  *Var[0]  <  000001F4 
	            ExecWait $Script_HealOne 
	            Return
	         EndIf
	      EndIf
	   EndIf
	EndIf
	Label    00000014 
	Set  *Var[A]  0000000A 
	Set  *Var[B]  0000000A 
	Set  *Var[C]  0000000A 
	Set  *Var[D]  0000000A 
	Set  *Var[E]  0000000A 
	Set  *Var[F]  0000000A 
	Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
	If  *Var[0]  ==  00000001 
	   Set  *Var[A]  00000064 
	   Set  *Var[B]  00000000 
	   Set  *Var[C]  00000000 
	   Set  *Var[D]  00000000 
	   Set  *Var[E]  00000000 
	   Set  *Var[F]  00000000 
	   Goto     0000007B 
	Else
	   ExecWait $Script_80228DA4 
	   If  *Var[0]  ==  FFFFFFFF 
	      Set  *Var[B]  00000000 
	   EndIf
	EndIf
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  !=  00000000 
	   Set  *Var[B]  00000000 
	EndIf
	Call     GetActorVar 	( .Actor:Self 0000000B *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000004 
	      Call     GetActorVar 	( .Actor:Self 00000005 *Var[1] )
	      If  *Var[1]  <  00000003 
	         Call     RandInt     	( 00000063 *Var[0] )
	         Add  *Var[0]  00000001 
	         If  *Var[0]  <=  00000032 
	            Set  *Var[A]  00000000 
	            Set  *Var[B]  00000000 
	            Set  *Var[C]  00000064 
	            Set  *Var[D]  00000000 
	            Set  *Var[E]  00000000 
	            Set  *Var[F]  00000000 
	         EndIf
	      EndIf
	   Case  ==  00000005 
	      Call     GetActorVar 	( .Actor:Self 00000006 *Var[1] )
	      If  *Var[1]  <  00000003 
	         Call     RandInt     	( 00000063 *Var[0] )
	         Add  *Var[0]  00000001 
	         If  *Var[0]  <=  00000032 
	            Set  *Var[A]  00000000 
	            Set  *Var[B]  00000000 
	            Set  *Var[C]  00000000 
	            Set  *Var[D]  00000064 
	            Set  *Var[E]  00000000 
	            Set  *Var[F]  00000000 
	         EndIf
	      EndIf
	EndSwitch
	Call     GetActorVar 	( .Actor:Self 00000005 *Var[0] )
	If  *Var[0]  >=  00000003 
	   Set  *Var[C]  00000000 
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000006 *Var[0] )
	If  *Var[0]  >=  00000003 
	   Set  *Var[D]  00000000 
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000007 *Var[0] )
	If  *Var[0]  >=  00000003 
	   Set  *Var[E]  00000000 
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	If  *Var[0]  >=  00000003 
	   Set  *Var[F]  00000000 
	EndIf
	Label    0000007B 
	Set  *Var[9]  00000000 
	Add  *Var[9]  *Var[A] 
	Add  *Var[9]  *Var[B] 
	Add  *Var[9]  *Var[C] 
	Add  *Var[9]  *Var[D] 
	Add  *Var[9]  *Var[E] 
	Add  *Var[9]  *Var[F] 
	Sub  *Var[9]  00000001 
	Call     RandInt     	( *Var[9] *Var[0] )
	Add  *Var[0]  00000001 
	If  *Var[0]  <=  *Var[A] 
	   ExecWait $Script_ShapeSpell 
	   Return
	EndIf
	Add  *Var[A]  *Var[B] 
	If  *Var[0]  <=  *Var[A] 
	   ExecWait $Script_MakeCopy 
	   Return
	EndIf
	Add  *Var[A]  *Var[C] 
	If  *Var[0]  <=  *Var[A] 
	   ExecWait $Script_BoostAttack 
	   Return
	EndIf
	Add  *Var[A]  *Var[D] 
	If  *Var[0]  <=  *Var[A] 
	   ExecWait $Script_BoostDefense 
	   Return
	EndIf
	Add  *Var[A]  *Var[E] 
	If  *Var[0]  <=  *Var[A] 
	   ExecWait $Script_Electrify 
	   Return
	EndIf
	ExecWait $Script_Vanish 
	Return
	End

PADDING: 8022C80C to 8022C810 (0069923C to 00699240)
00000000 

#new:DefenseTable $DefenseTable_8022C810
.Element:Normal 00000000
.Element:Water  FFFFFFFE
.Element:Ice    FFFFFFFE
.Element:Fire   00000063
.Element:End

#new:StatusTable $StatusTable_8022C834
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze    0`
.Status:Shrink     90`
.Status:Stop       85`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8022C8E0
00800000 01000000 FE1900FF $IdleAnimations_8022C9BC $DefenseTable_8022C810 00000002 00000000 FDF60000 00000000 
00120001 02000000 001800FF $IdleAnimations_8022CA08 $DefenseTable_8022C810 00000000 00000000 FFF60000 00000000 
00120001 03000000 001800FF $IdleAnimations_8022CA08 $DefenseTable_8022C810 00000000 00000000 FFF60000 00000000 
00120001 04000000 001800FF $IdleAnimations_8022CA08 $DefenseTable_8022C810 00000000 00000000 FFF60000 00000000 
00120001 05000000 001800FF $IdleAnimations_8022CA08 $DefenseTable_8022C810 00000000 00000000 FFF60000 00000000 

#new:Actor $Ember
% stats
[Index]        45b 
[Level]        24`b 
[MaxHP]        10`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_8022C834 
% ai
[SpriteCount]   5`s 
[SpriteTable] $SpriteTable_8022C8E0 
[Script]      $Script_Init_8022CA14 
% move effectiveness
[Escape]       60`b 
[Item]         50`b 
[AirLift]      80`b 
[Hurricane]    75`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         33`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_8022C9BC
.Status:Normal    00460101
.Status:Stone     00460100
.Status:Sleep     00460101
.Status:Poison    00460101
.Status:Stop      00460100
.Status:Static    00460101
.Status:Paralyze  00460100
.Status:Dizzy     0046010A
.Status:Fear      0046010A
.Status:End

#new:IdleAnimations $IdleAnimations_8022CA08
.Status:Normal    00460101
.Status:End

#new:Script $Script_Init_8022CA14
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8022EDE4 )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8022CBDC )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022D41C )
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
	   Case  ==  00000001 
	      Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	EndSwitch
	Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
	Call     SetSpriteScale ( .Actor:Self 00000004 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
	Call     SetSpriteScale ( .Actor:Self 00000005 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
	Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[1]  00000005 
	Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     HPBarToHome 	( .Actor:Self )
	Return
	End

#new:Script $Script_Idle_8022CBDC
	Label    00000000 
	Call     MakeLerp    	( 00000000 0000000A 00000019 0000000A )
	Label    00000001 
	Call     UpdateLerp  	( )
	Call     GetHomePos  	( .Actor:Self *Var[2] *Var[3] *Var[4] )
	Add  *Var[0]  *Var[3] 
	Call     SetActorPos 	( .Actor:Self *Var[2] *Var[0] *Var[4] )
	If  *Var[1]  ==  00000001 
	   Label    0000000B 
	   Wait     00000001 
	   Call     GetStatusFlags ( .Actor:Self *Var[0] )
	   If  *Var[0]  &  0035D000 
	      Goto     0000000B 
	   EndIf
	   Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	   If  *Var[0]  ==  00000001 
	      Goto     0000000B 
	   EndIf
	   Goto     00000001 
	EndIf
	Call     MakeLerp    	( 0000000A 00000000 00000019 0000000A )
	Label    00000002 
	Call     UpdateLerp  	( )
	Call     GetHomePos  	( .Actor:Self *Var[2] *Var[3] *Var[4] )
	Add  *Var[0]  *Var[3] 
	Call     SetActorPos 	( .Actor:Self *Var[2] *Var[0] *Var[4] )
	If  *Var[1]  ==  00000001 
	   Label    00000016 
	   Wait     00000001 
	   Call     GetStatusFlags ( .Actor:Self *Var[0] )
	   If  *Var[0]  &  0035D000 
	      Goto     00000016 
	   EndIf
	   Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	   If  *Var[0]  ==  00000001 
	      Goto     00000016 
	   EndIf
	   Goto     00000002 
	EndIf
	Goto     00000000 
	Return
	End

#new:Script $Script_8022CE5C
	Call     SetAnimation 	( .Actor:Self 00000001 00460103 )
	Call     SetGoalToHome 	( .Actor:Self )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	Thread
	   Call     $Function_80218700 ( )
	EndThread
	Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:SinOut )
	Call     SetAnimation 	( .Actor:Self 00000001 00460101 )
	Return
	End

#new:Script $Script_8022CEF8
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[5] )
	Call     GetIndexFromHome 	( *Var[0] *Var[5] )
	Mod  *Var[5]  00000004 
	Switch  *Var[5] 
	   Case  ==  00000000 
	      Set  *Flag[01]  00000001 
	   Case  ==  00000001 
	      Set  *Flag[02]  00000001 
	   Case  ==  00000002 
	      Set  *Flag[03]  00000001 
	   Case  ==  00000003 
	      Set  *Flag[04]  00000001 
	EndSwitch
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	If  *Flag[01]  ==  00000000 
	   Set  *Var[A]  00000000 
	   Return
	EndIf
	If  *Flag[02]  ==  00000000 
	   Set  *Var[A]  00000001 
	   Return
	EndIf
	If  *Flag[03]  ==  00000000 
	   Set  *Var[A]  00000002 
	   Return
	EndIf
	If  *Flag[04]  ==  00000000 
	   Set  *Var[A]  00000003 
	   Return
	EndIf
	Set  *Var[A]  FFFFFFFF 
	Return
	End

#new:Vector3D $Vector3D_8022D0F4
0` -1000` 0`

#new:SpecialFormation $SpecialFormation_8022D100
$Ember $Vector3D_8022D0F4 00000000 00000000 00000000 00000000 00000000 

#new:Script $Script_Split
	Call     GetLastDamage 	( .Actor:Self *Var[0] )
	If  *Var[0]  ==  00000000 
	   Return
	EndIf
	Call     GetActorHP  	( .Actor:Self *Var[0] )
	If  *Var[0]  <=  00000000 
	   Return
	EndIf
	Call     GetLastElement ( *Var[0] )
	If  *Var[0]  &  20000000 
	   Return
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	If  *Var[0]  >=  00000002 
	   Return
	EndIf
	ExecWait $Script_8022CEF8 
	Switch  *Var[A] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000001 
	   CaseOR  ==  00000002 
	   CaseOR  ==  00000003 
	      Call     SummonEnemy 	( $SpecialFormation_8022D100 00000000 )
	      Call     SetActorVar 	( *Var[0] 00000002 00000001 )
	      Call     GetActorHP  	( .Actor:Self *Var[B] )
	      Call     SetEnemyHP  	( *Var[0] *Var[B] )
	      Call     GetActorPos 	( .Actor:Self *Var[B] *Var[C] *Var[D] )
	      Call     SetActorPos 	( *Var[0] *Var[B] *Var[C] *Var[D] )
	      Call     SetGoalToIndex ( *Var[0] *Var[A] )
	      Call     GetGoalPos  	( *Var[0] *Var[B] *Var[C] *Var[D] )
	      Call     SetHomePos  	( *Var[0] *Var[B] *Var[C] *Var[D] )
	      Call     SetActorJumpscale 	( *Var[0] *Fixed[1.2001953] )
	      Call     JumpToGoal  	( *Var[0] 00000014 00000000 00000001 00000000 )
	      Call     HPBarToHome 	( *Var[0] )
	      Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
	      Switch  *Var[1] 
	         Case  ==  00000000 
	            Call     SetActorVar 	( *Var[0] 00000001 00000001 )
	         Case  ==  00000001 
	            Call     SetActorVar 	( *Var[0] 00000001 00000002 )
	      EndSwitch
	      Call     SetActorVar 	( .Actor:Self 00000001 00000003 )
	      Call     SetActorVar 	( *Var[0] 00000002 00000000 )
	   EndCaseGroup
	   Default
	EndSwitch
	Return
	End

#new:Script $Script_HandleEvent_8022D41C
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      Exec     $Script_Split 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460107 
	      ExecWait DoNormalHit 
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      Exec     $Script_Split 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460108 
	      SetConst  *Var[2]  00460109 
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460108 
	      SetConst  *Var[2]  00460109 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460109 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      Exec     $Script_Split 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460107 
	      ExecWait 8029B998 
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460107 
	      ExecWait 8029B998 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460107 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:ShockHit
	      Call     PlaySoundAtActor 	( .Actor:Self 00000759 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460107 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460107 
	      ExecWait 8029BD70 
	      ExecWait $Script_8022CE5C 
	   Case  ==  .Event:ShockDeath
	      Call     PlaySoundAtActor 	( .Actor:Self 00000759 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460107 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460107 
	      ExecWait DoDeath 
	      Return
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	   CaseOR  ==  .Event:AirLiftFailed
	   CaseOR  ==  .Event:BurnTaunt
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460101 
	      ExecWait DoImmune 
	   EndCaseGroup
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460107 
	      ExecWait DoNormalHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460107 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:BeginFirstStrike
	      Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
	      Call     HPBarToCurrent ( .Actor:Self )
	   Case  ==  .Event:EndFirstStrike
	      ExecWait $Script_8022CE5C 
	      Call     HPBarToHome 	( .Actor:Self )
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460101 
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460103 
	      SetConst  *Var[2]  00460107 
	      ExecWait DoScareAway 
	      Return
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460103 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460103 
	      ExecWait DoBlowAway 
	      Return
	   Case  ==  .Event:UpAndAway
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8022D9C4
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 00460103 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  0000001E 
	Set  *Var[1]  00000005 
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	Thread
	   Call     $Function_80218700 ( )
	EndThread
	Call     MoveToGoal  	( .Actor:Self 00000000 00000000 .Easing:SinOut )
	Call     SetAnimation 	( .Actor:Self 00000001 00460101 )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     SetAnimation 	( .Actor:Self 00000001 00460104 )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000014 
	      Set  *Var[1]  00000000 
	      Add  *Var[2]  00000001 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Sub  *Var[0]  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	      Sub  *Var[0]  00000014 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	      Sub  *Var[0]  0000000A 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000003 00000000 00000001 00000000 )
	      Wait     0000000E 
	      Call     UseCamPreset 	( 00000002 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      ExecWait $Script_8022CE5C 
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetAnimation 	( .Actor:Self 00000001 00460104 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[2]  00000001 
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000002 00000000 00000000 00000004 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Set  *Var[0]  00000001 
	      Set  *Var[1]  00460104 
	      ExecWait 8029BD70 
	      Wait     00000005 
	      ExecWait $Script_8022CE5C 
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8022DFB4
	Set  *Var[6]  00000002 
	Loop     00000004 
	   Thread
	      Call     GetStatusFlags ( .Actor:Self *Var[A] )
	      If  *Var[A]  &  00080000 
	         Call     SetSpriteScale ( .Actor:Self *Var[6] *Fixed[0.20019531] *Fixed[0.20019531] *Fixed[0.20019531] )
	      Else
	         Call     SetSpriteScale ( .Actor:Self *Var[6] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
	      EndIf
	      Call     SetSpritePos 	( .Actor:Self *Var[6] *Var[0] *Var[1] *Var[2] )
	      Call     SetSpriteFlagBits 	( .Actor:Self *Var[6] 00000001 .False )
	      Call     SetSpriteSpeed ( .Actor:Self *Var[6] *Fixed[8.0] )
	      Call     SetSpriteJumpscale 	( .Actor:Self *Var[6] *Fixed[0.0107421875] )
	      Call     8026FA00 ( FFFFFF81 *Var[6] 00000002 000002D0 00000000 )
	      Call     JumpSpriteA 	( .Actor:Self *Var[6] *Var[3] *Var[4] *Var[5] 00000000 .False )
	      Call     SetSpriteFlagBits 	( .Actor:Self *Var[6] 00000001 .True )
	   EndThread
	   Wait     00000003 
	   Add  *Var[6]  00000001 
	EndLoop
	Return
	End

#new:Script $Script_8022E158
	Exec     $Script_8022DFB4 
	Call     GetDistanceToTarget 	( .Actor:Self *Var[0] )
	DivF  *Var[0]  *Fixed[8.0] 
	Add  *Var[0]  00000001 
	Wait     *Var[0] 
	Return
	End

#new:Script $Script_8022E1B4
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Partner )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
	If  *Var[A]  ==  00000001 
	   Add  *Var[0]  00000064 
	   Set  *Var[1]  00000005 
	Else
	   Add  *Var[0]  0000001E 
	   Set  *Var[1]  00000032 
	EndIf
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetAnimation 	( .Actor:Self 00000001 00460103 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	Thread
	   Call     $Function_80218700 ( )
	EndThread
	Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFFC .Easing:SinOut )
	Call     SetAnimation 	( .Actor:Self 00000001 00460101 )
	Wait     0000000A 
	Call     SetAnimation 	( .Actor:Self 00000001 00460105 )
	Wait     0000001E 
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     SetAnimation 	( .Actor:Self 00000001 00460106 )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000005 
	      Add  *Var[1]  00000004 
	      Add  *Var[2]  00000002 
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	      Sub  *Var[3]  00000064 
	      Add  *Var[5]  00000002 
	      ExecWait $Script_8022E158 
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Wait     00000014 
	      Call     UseCamPreset 	( 00000002 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      ExecWait $Script_8022CE5C 
	      Wait     00000014 
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetAnimation 	( .Actor:Self 00000001 00460106 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub  *Var[0]  00000005 
	Add  *Var[1]  00000004 
	Add  *Var[2]  00000002 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Sub  *Var[4]  00000006 
	Add  *Var[5]  00000002 
	ExecWait $Script_8022E158 
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000002 00000000 00000000 00000003 00000020 )
	Wait     00000014 
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      ExecWait $Script_8022CE5C 
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8022E728
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 00460103 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     AddToGoalPos 	( .Actor:Self 0000001E 00000000 00000000 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
	Thread
	   Call     $Function_80218700 ( )
	EndThread
	Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFFC .Easing:SinOut )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Wait     0000000A 
	      Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 000002CF )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	      Call     SetAnimation 	( .Actor:Self 00000001 00460104 )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
	      Call     8026F838 ( FFFFFF81 00000002 )
	      Call     PlaySoundAtActor 	( .Actor:Self 000002EF )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  0000001E 
	      Add  *Var[2]  00000002 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 00460104 )
	      Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Wait     0000001E 
	      Call     UseCamPreset 	( 00000002 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      ExecWait $Script_8022CE5C 
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Wait     00000005 
	Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
	Call     PlaySoundAtActor 	( .Actor:Self 000002CF )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	Call     SetAnimation 	( .Actor:Self 00000001 00460104 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
	Call     8026F838 ( FFFFFF81 00000002 )
	Set  *Var[A]  *Var[0] 
	Set  *Var[B]  *Var[1] 
	Set  *Var[C]  *Var[2] 
	Call     PlaySoundAtActor 	( .Actor:Self 000002EF )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[2]  00000002 
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000002 00000000 00000000 00000004 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	      Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
	      Wait     00000014 
	      ExecWait $Script_8022CE5C 
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_8022EDE4
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	   Switch  *Var[0] 
	      Case  ==  00000001 
	         ExecWait $Script_8022D9C4 
	      Case  ==  00000000 
	         ExecWait $Script_8022E728 
	   EndSwitch
	   Return
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000001 
	      Call     GetStatusFlags ( .Actor:Partner *Var[0] )
	      If  *Var[0]  &  01000000 
	         ExecWait $Script_8022D9C4 
	      Else
	         Call     RandInt     	( 000003E8 *Var[0] )
	         If  *Var[0]  <=  0000012C 
	            ExecWait $Script_8022E1B4 
	         Else
	            ExecWait $Script_8022D9C4 
	         EndIf
	      EndIf
	   Case  ==  00000000 
	      Call     GetStatusFlags ( .Actor:Partner *Var[0] )
	      If  *Var[0]  &  01000000 
	         ExecWait $Script_8022E728 
	      Else
	         Call     RandInt     	( 000003E8 *Var[0] )
	         If  *Var[0]  <=  0000012C 
	            ExecWait $Script_8022E1B4 
	         Else
	            ExecWait $Script_8022E728 
	         EndIf
	      EndIf
	EndSwitch
	Return
	End

PADDING: 8022EFDC to 8022EFE0 (0069BA0C to 0069BA10)
00000000 

#new:Script $Script_8022EFE0
	Set  *Var[A]  *Var[0] 
	Call     SetTexPanner 	( *Var[A] 00000001 )
	Set  *Var[0]  00000000 
	Set  *Var[1]  00000000 
	Loop     
	   Call     802C9364 ( 00000001 00000000 *Var[0] *Var[1] )
	   Add  *Var[0]  00008000 
	   Add  *Var[1]  00000000 
	   Wait     00000005 
	EndLoop
	Return
	End

#new:Script $Script_BeforeBattle_8022F090
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Call     802C9308 ( 00000024 00000000 )
	Thread
	   Set  *Var[0]  00000025 
	   Exec     $Script_8022EFE0 
	   Wait     00000005 
	   Set  *Var[0]  00000027 
	   Exec     $Script_8022EFE0 
	EndThread
	Return
	End

#new:Script $Script_AfterBattle_8022F134
	Return
	End

#new:ForegroundModelList $ForegroundModelList_8022F144
00000018 00000017 00000016 00000000 

#new:Stage $Stage_8022F154
$ASCII_80231F70  % kpa_tex
$ASCII_80231F60  % kpa_bt01_shape
$ASCII_80231F50  % kpa_bt01_hit
$Script_BeforeBattle_8022F090 
$Script_AfterBattle_8022F134 
00000000 
$ForegroundModelList_8022F144 
00000000 
00000000 
00000000 

PADDING: 8022F17C to 8022F180 (0069BBAC to 0069BBB0)
00000000 

#new:Script $Script_8022F180
	Set  *Var[A]  *Var[0] 
	Call     SetTexPanner 	( *Var[A] 00000001 )
	Set  *Var[0]  00000000 
	Set  *Var[1]  00000000 
	Loop     
	   Call     802C9364 ( 00000001 00000000 *Var[0] *Var[1] )
	   Add  *Var[0]  00008000 
	   Add  *Var[1]  00000000 
	   Wait     00000005 
	EndLoop
	Return
	End

#new:Script $Script_BeforeBattle_8022F230
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Call     802C9308 ( 00000019 00000000 )
	Set  *Var[0]  00000025 
	Exec     $Script_8022F180 
	Set  *Var[0]  00000027 
	Exec     $Script_8022F180 
	Return
	End

#new:Script $Script_AfterBattle_8022F2B8
	Return
	End

#new:ForegroundModelList $ForegroundModelList_8022F2C8
00000018 00000017 00000016 00000000 

#new:Stage $Stage_8022F2D8
$ASCII_80231F98  % kpa_tex
$ASCII_80231F88  % kpa_bt01_shape
$ASCII_80231F78  % kpa_bt01_hit
$Script_BeforeBattle_8022F230 
$Script_AfterBattle_8022F2B8 
00000000 
$ForegroundModelList_8022F2C8 
00000000 
00000000 
00000000 

% Origin: HEURISTIC
#new:Script $Script_8022F300
	Set  *Var[A]  *Var[1] 
	Set  *Var[B]  *Var[2] 
	Set  *Var[C]  *Var[3] 
	Call     SetTexPanner 	( *Var[0] *Var[1] )
	Set  *Var[0]  00000000 
	Set  *Var[1]  00000000 
	Loop     
	   Call     802C9364 ( *Var[A] 00000000 *Var[0] *Var[1] )
	   Add  *Var[0]  *Var[B] 
	   Add  *Var[1]  *Var[C] 
	   Wait     00000001 
	EndLoop
	Return
	End

#new:Script $Script_8022F3D0
	Set  *Var[A]  *Var[1] 
	Set  *Var[B]  *Var[2] 
	Set  *Var[C]  *Var[3] 
	Call     SetTexPanner 	( *Var[0] *Var[1] )
	Set  *Var[0]  00000000 
	Set  *Var[1]  00000000 
	Loop     
	   Call     802C9364 ( *Var[A] 00000000 *Var[0] 00000000 )
	   Call     802C9364 ( *Var[A] 00000001 *Var[1] 00000000 )
	   Add  *Var[0]  *Var[B] 
	   Add  *Var[1]  *Var[C] 
	   Wait     00000001 
	EndLoop
	Return
	End

#new:Script $Script_8022F4BC
	Set  *Var[A]  *Var[1] 
	Set  *Var[B]  *Var[2] 
	Set  *Var[C]  *Var[3] 
	Call     SetTexPanner 	( *Var[0] *Var[1] )
	Set  *Var[0]  00000000 
	Set  *Var[1]  00000000 
	Loop     
	   Call     802C9364 ( *Var[A] 00000000 00000000 *Var[0] )
	   Call     802C9364 ( *Var[A] 00000001 00000000 *Var[1] )
	   Add  *Var[0]  *Var[B] 
	   Add  *Var[1]  *Var[C] 
	   Wait     00000001 
	EndLoop
	Return
	End

#new:Script $Script_BeforeBattle_8022F5A8
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Set  *Var[0]  00000010 
	Set  *Var[1]  00000001 
	Set  *Var[2]  FFFFFE70 
	Set  *Var[3]  FFFFFCE0 
	Exec     $Script_8022F3D0 
	Set  *Var[0]  00000013 
	Set  *Var[1]  00000003 
	Set  *Var[2]  FFFFFE70 
	Set  *Var[3]  FFFFFCE0 
	Exec     $Script_8022F3D0 
	Set  *Var[0]  00000011 
	Set  *Var[1]  00000000 
	Set  *Var[2]  FFFFFE70 
	Set  *Var[3]  FFFFFCE0 
	Exec     $Script_8022F4BC 
	Set  *Var[0]  00000012 
	Set  *Var[1]  00000002 
	Set  *Var[2]  FFFFFE70 
	Set  *Var[3]  FFFFFCE0 
	Exec     $Script_8022F4BC 
	Return
	End

#new:Script $Script_AfterBattle_8022F714
	Return
	End

#new:ForegroundModelList $ForegroundModelList_8022F724
0000000D 00000000 

#new:Stage $Stage_8022F72C
$ASCII_80231FC0  % kpa_tex
$ASCII_80231FB0  % kpa_bt02_shape
$ASCII_80231FA0  % kpa_bt02_hit
$Script_BeforeBattle_8022F5A8 
$Script_AfterBattle_8022F714 
00000000 
$ForegroundModelList_8022F724 
00000000 
00000000 
00000000 

PADDING: 8022F754 to 8022F760 (0069C184 to 0069C190)
00000000 00000000 00000000 

#new:Script $Script_BeforeBattle_8022F760
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Call     80253734 ( 00000001 )
	Return
	End

#new:Script $Script_AfterBattle_8022F7AC
	Return
	End

#new:ForegroundModelList $ForegroundModelList_8022F7BC
00000019 00000000 

#new:Stage $Stage_8022F7C4
$ASCII_80231FE8  % kpa_tex
$ASCII_80231FD8  % kpa_bt03_shape
$ASCII_80231FC8  % kpa_bt03_hit
$Script_BeforeBattle_8022F760 
$Script_AfterBattle_8022F7AC 
00000000 
$ForegroundModelList_8022F7BC 
00000000 
00000000 
00000000 

PADDING: 8022F7EC to 8022F7F0 (0069C21C to 0069C220)
00000000 

#new:Script $Script_8022F7F0
	Set  *Var[A]  *Var[0] 
	Call     SetTexPanner 	( *Var[A] 00000001 )
	Set  *Var[0]  00000000 
	Set  *Var[1]  00000000 
	Loop     
	   Call     802C9364 ( 00000001 00000000 *Var[0] *Var[1] )
	   Add  *Var[0]  00008000 
	   Add  *Var[1]  00000000 
	   Wait     00000005 
	EndLoop
	Return
	End

#new:Script $Script_BeforeBattle_8022F8A0
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Call     802C9308 ( 0000000F 00000000 )
	Call     802C9308 ( 00000011 00000000 )
	Call     802C9308 ( 00000010 00000000 )
	Call     802C9308 ( 0000001A 00000000 )
	Call     802C9308 ( 00000012 00000000 )
	Call     802C9308 ( 00000014 00000000 )
	Call     802C9308 ( 00000016 00000000 )
	Call     802C9308 ( 00000018 00000000 )
	Set  *Var[0]  00000020 
	Exec     $Script_8022F7F0 
	Set  *Var[0]  00000022 
	Exec     $Script_8022F7F0 
	Set  *Var[0]  00000024 
	Exec     $Script_8022F7F0 
	Return
	End

#new:Script $Script_AfterBattle_8022F9D0
	Return
	End

#new:Stage $Stage_8022F9E0
$ASCII_80232010  % kpa_tex
$ASCII_80232000  % kpa_bt04_shape
$ASCII_80231FF0  % kpa_bt04_hit
$Script_BeforeBattle_8022F8A0 
$Script_AfterBattle_8022F9D0 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 8022FA08 to 8022FA10 (0069C438 to 0069C440)
00000000 00000000 

#new:Script $Script_8022FA10
	Set  *Var[A]  *Var[0] 
	Call     SetTexPanner 	( *Var[A] 00000001 )
	Set  *Var[0]  00000000 
	Set  *Var[1]  00000000 
	Loop     
	   Call     802C9364 ( 00000001 00000000 *Var[0] *Var[1] )
	   Add  *Var[0]  00008000 
	   Add  *Var[1]  00000000 
	   Wait     00000005 
	EndLoop
	Return
	End

#new:Script $Script_BeforeBattle_8022FAC0
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Call     802C9308 ( 0000000D 00000000 )
	Call     802C9308 ( 00000011 00000000 )
	Call     802C9308 ( 00000010 00000000 )
	Call     802C9308 ( 00000012 00000000 )
	Call     802C9308 ( 00000014 00000000 )
	Call     802C9308 ( 00000016 00000000 )
	Call     802C9308 ( 00000018 00000000 )
	Set  *Var[0]  00000020 
	Exec     $Script_8022FA10 
	Set  *Var[0]  00000022 
	Exec     $Script_8022FA10 
	Set  *Var[0]  00000024 
	Exec     $Script_8022FA10 
	Return
	End

#new:Script $Script_AfterBattle_8022FBDC
	Return
	End

#new:Stage $Stage_8022FBEC
$ASCII_80232038  % kpa_tex
$ASCII_80232028  % kpa_bt04_shape
$ASCII_80232018  % kpa_bt04_hit
$Script_BeforeBattle_8022FAC0 
$Script_AfterBattle_8022FBDC 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 8022FC14 to 8022FC20 (0069C644 to 0069C650)
00000000 00000000 00000000 

#new:Script $Script_8022FC20
	Set  *Var[A]  *Var[0] 
	Call     SetTexPanner 	( *Var[A] 00000001 )
	Set  *Var[0]  00000000 
	Set  *Var[1]  00000000 
	Loop     
	   Call     802C9364 ( 00000001 00000000 *Var[0] *Var[1] )
	   Add  *Var[0]  00008000 
	   Add  *Var[1]  00000000 
	   Wait     00000005 
	EndLoop
	Return
	End

#new:Script $Script_BeforeBattle_8022FCD0
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Call     802C9308 ( 0000001E 00000000 )
	Call     802C9308 ( 00000027 00000000 )
	Call     802C9308 ( 00000026 00000000 )
	Call     802C9308 ( 00000024 00000000 )
	Call     802C9308 ( 00000022 00000000 )
	Call     802C9308 ( 00000020 00000000 )
	Set  *Var[0]  00000012 
	Exec     $Script_8022FC20 
	Set  *Var[0]  00000014 
	Exec     $Script_8022FC20 
	Set  *Var[0]  00000016 
	Exec     $Script_8022FC20 
	Set  *Var[0]  00000018 
	Exec     $Script_8022FC20 
	Return
	End

#new:Script $Script_AfterBattle_8022FDF4
	Return
	End

#new:Stage $Stage_8022FE04
$ASCII_80232060  % kpa_tex
$ASCII_80232050  % kpa_bt04_shape
$ASCII_80232040  % kpa_bt04_hit
$Script_BeforeBattle_8022FCD0 
$Script_AfterBattle_8022FDF4 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 8022FE2C to 8022FE30 (0069C85C to 0069C860)
00000000 

#new:Script $Script_BeforeBattle_8022FE30
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Return
	End

#new:Script $Script_AfterBattle_8022FE6C
	Return
	End

#new:ForegroundModelList $ForegroundModelList_8022FE7C
00000010 00000000 

#new:Stage $Stage_8022FE84
$ASCII_80232088  % kpa_tex
$ASCII_80232078  % kpa_bt05_shape
$ASCII_80232068  % kpa_bt05_hit
$Script_BeforeBattle_8022FE30 
$Script_AfterBattle_8022FE6C 
00000000 
$ForegroundModelList_8022FE7C 
00000000 
00000000 
00000000 

PADDING: 8022FEAC to 8022FEB0 (0069C8DC to 0069C8E0)
00000000 

#new:Script $Script_8022FEB0
	Set  *Var[A]  *Var[1] 
	Set  *Var[B]  *Var[2] 
	Set  *Var[C]  *Var[3] 
	Call     SetTexPanner 	( *Var[0] *Var[1] )
	Set  *Var[0]  00000000 
	Set  *Var[1]  00000000 
	Loop     
	   Call     802C9364 ( *Var[A] 00000000 *Var[0] *Var[1] )
	   Add  *Var[0]  *Var[B] 
	   Add  *Var[1]  *Var[C] 
	   Wait     00000001 
	EndLoop
	Return
	End

% Origin: HEURISTIC
#new:Script $Script_8022FF80
	Set  *Var[A]  *Var[1] 
	Set  *Var[B]  *Var[2] 
	Set  *Var[C]  *Var[3] 
	Call     SetTexPanner 	( *Var[0] *Var[1] )
	Set  *Var[0]  00000000 
	Set  *Var[1]  00000000 
	Loop     
	   Call     802C9364 ( *Var[A] 00000000 *Var[0] 00000000 )
	   Call     802C9364 ( *Var[A] 00000001 *Var[1] 00000000 )
	   Add  *Var[0]  *Var[B] 
	   Add  *Var[1]  *Var[C] 
	   Wait     00000001 
	EndLoop
	Return
	End

% Origin: HEURISTIC
#new:Script $Script_8023006C
	Set  *Var[A]  *Var[1] 
	Set  *Var[B]  *Var[2] 
	Set  *Var[C]  *Var[3] 
	Call     SetTexPanner 	( *Var[0] *Var[1] )
	Set  *Var[0]  00000000 
	Set  *Var[1]  00000000 
	Loop     
	   Call     802C9364 ( *Var[A] 00000000 00000000 *Var[0] )
	   Call     802C9364 ( *Var[A] 00000001 00000000 *Var[1] )
	   Add  *Var[0]  *Var[B] 
	   Add  *Var[1]  *Var[C] 
	   Wait     00000001 
	EndLoop
	Return
	End

#new:Script $Script_BeforeBattle_80230158
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Set  *Var[0]  00000010 
	Set  *Var[1]  00000000 
	Set  *Var[2]  FFFFFF38 
	Set  *Var[3]  00000000 
	Exec     $Script_8022FEB0 
	Set  *Var[0]  00000011 
	Set  *Var[1]  00000001 
	Set  *Var[2]  FFFFFF88 
	Set  *Var[3]  00000000 
	Exec     $Script_8022FEB0 
	Set  *Var[0]  00000000 
	Set  *Var[1]  00000002 
	Set  *Var[2]  FFFFFF9C 
	Set  *Var[3]  00000000 
	Exec     $Script_8022FEB0 
	Return
	End

#new:Script $Script_AfterBattle_80230278
	Return
	End

#new:ForegroundModelList $ForegroundModelList_80230288
00000011 00000000 

#new:Stage $Stage_80230290
$ASCII_802320B0  % kpa_tex
$ASCII_802320A0  % kpa_bt07_shape
$ASCII_80232090  % kpa_bt07_hit
$Script_BeforeBattle_80230158 
$Script_AfterBattle_80230278 
00000000 
$ForegroundModelList_80230288 
00000000 
00000000 
00000000 

PADDING: 802302B8 to 802302C0 (0069CCE8 to 0069CCF0)
00000000 00000000 

#new:Script $Script_BeforeBattle_802302C0
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Return
	End

#new:Script $Script_AfterBattle_802302FC
	Return
	End

#new:ForegroundModelList $ForegroundModelList_8023030C
00000016 00000000 

#new:Stage $Stage_80230314
$ASCII_802320D8  % kpa_tex
$ASCII_802320C8  % kpa_bt08_shape
$ASCII_802320B8  % kpa_bt08_hit
$Script_BeforeBattle_802302C0 
$Script_AfterBattle_802302FC 
00000000 
$ForegroundModelList_8023030C 
00000000 
00000000 
00000000 

PADDING: 8023033C to 80230340 (0069CD6C to 0069CD70)
00000000 

#new:Script $Script_BeforeBattle_80230340
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Return
	End

#new:Script $Script_AfterBattle_8023037C
	Return
	End

#new:ForegroundModelList $ForegroundModelList_8023038C
0000000C 00000000 

#new:Stage $Stage_80230394
$ASCII_80232100  % kpa_tex
$ASCII_802320F0  % kpa_bt09_shape
$ASCII_802320E0  % kpa_bt09_hit
$Script_BeforeBattle_80230340 
$Script_AfterBattle_8023037C 
00000000 
$ForegroundModelList_8023038C 
00000000 
00000000 
00000000 

PADDING: 802303BC to 802303C0 (0069CDEC to 0069CDF0)
00000000 

#new:Script $Script_BeforeBattle_802303C0
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Return
	End

#new:Script $Script_AfterBattle_802303FC
	Return
	End

#new:ForegroundModelList $ForegroundModelList_8023040C
0000000A 00000000 

#new:Stage $Stage_80230414
$ASCII_80232128  % kpa_tex
$ASCII_80232118  % kpa_bt11_shape
$ASCII_80232108  % kpa_bt11_hit
$Script_BeforeBattle_802303C0 
$Script_AfterBattle_802303FC 
00000000 
$ForegroundModelList_8023040C 
00000000 
00000000 
00000000 

PADDING: 8023043C to 80230440 (0069CE6C to 0069CE70)
00000000 

% Origin: HEURISTIC
#new:Script $Script_80230440
	Set  *Var[A]  *Var[0] 
	Call     SetTexPanner 	( *Var[A] 00000001 )
	Set  *Var[0]  00000000 
	Set  *Var[1]  00000000 
	Loop     
	   Call     802C9364 ( 00000001 00000000 *Var[0] *Var[1] )
	   Add  *Var[0]  00008000 
	   Add  *Var[1]  00000000 
	   Wait     00000005 
	EndLoop
	Return
	End

#new:Script $Script_BeforeBattle_802304F0
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Return
	End

#new:Script $Script_AfterBattle_8023052C
	Return
	End

#new:Stage $Stage_8023053C
$ASCII_80232150  % kpa_tex
$ASCII_80232140  % kpa_bt13_shape
$ASCII_80232130  % kpa_bt13_hit
$Script_BeforeBattle_802304F0 
$Script_AfterBattle_8023052C 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 80230564 to 80230570 (0069CF94 to 0069CFA0)
00000000 00000000 00000000 

% Origin: HEURISTIC
#new:Script $Script_80230570
	Set  *Var[A]  *Var[0] 
	Call     SetTexPanner 	( *Var[A] 00000001 )
	Set  *Var[0]  00000000 
	Set  *Var[1]  00000000 
	Loop     
	   Call     802C9364 ( 00000001 00000000 *Var[0] *Var[1] )
	   Add  *Var[0]  00008000 
	   Add  *Var[1]  00000000 
	   Wait     00000005 
	EndLoop
	Return
	End

#new:Script $Script_BeforeBattle_80230620
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Return
	End

#new:Script $Script_AfterBattle_8023065C
	Return
	End

#new:Stage $Stage_8023066C
$ASCII_80232178  % kpa_tex
$ASCII_80232168  % kpa_bt14_shape
$ASCII_80232158  % kpa_bt14_hit
$Script_BeforeBattle_80230620 
$Script_AfterBattle_8023065C 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 80230694 to 802306A0 (0069D0C4 to 0069D0D0)
00000000 00000000 00000000 

#new:Formation $Formation_00
$BonyBeetle 00000001 0000000A 00000001 00000000 00000000 00000000 
$BonyBeetle 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_01
$BonyBeetle 00000000 0000000A 00000001 00000000 00000000 00000000 
$BonyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$BonyBeetle 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_02
$BonyBeetle 00000000 0000000A 00000001 00000000 00000000 00000000 
$DryBones 00000001 00000009 00000000 00000000 00000000 00000000 
$DryBones 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_03
$BonyBeetle 00000000 0000000A 00000001 00000000 00000000 00000000 
$BonyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$DryBones 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_04
$BonyBeetle 00000000 0000000A 00000001 00000000 00000000 00000000 
$BonyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$Magikoopa 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_05
$BonyBeetle 00000000 0000000A 00000001 00000000 00000000 00000000 
$BonyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$BonyBeetle 00000002 00000008 00000000 00000000 00000000 00000000 
$Magikoopa 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_06
$BonyBeetle 00000000 0000000A 00000001 00000000 00000000 00000000 
$DryBones 00000001 00000009 00000000 00000000 00000000 00000000 
$BonyBeetle 00000002 00000008 00000000 00000000 00000000 00000000 
$Magikoopa 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_07
$DryBones 00000001 0000000A 00000000 00000000 00000000 00000000 
$DryBones 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_08
$DryBones 00000000 0000000A 00000000 00000000 00000000 00000000 
$DryBones 00000001 00000009 00000000 00000000 00000000 00000000 
$DryBones 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_09
$DryBones 00000000 0000000A 00000000 00000000 00000000 00000000 
$DryBones 00000001 00000009 00000000 00000000 00000000 00000000 
$DryBones 00000002 00000008 00000000 00000000 00000000 00000000 
$DryBones 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0A
$DryBones 00000000 0000000A 00000000 00000000 00000000 00000000 
$Ember 00000001 00000009 00000000 00000000 00000000 00000000 
$Ember 00000002 00000008 00000000 00000000 00000000 00000000 
$Ember 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0B
$DryBones 00000000 0000000A 00000000 00000000 00000000 00000000 
$DryBones 00000001 00000009 00000000 00000000 00000000 00000000 
$Magikoopa 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0C
$DryBones 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0D
$DryBones 00000000 0000000A 00000000 00000000 00000000 00000000 
$DryBones 00000001 00000009 00000000 00000000 00000000 00000000 
$BonyBeetle 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0E
$DryBones 00000000 0000000A 00000000 00000000 00000000 00000000 
$DryBones 00000001 00000009 00000000 00000000 00000000 00000000 
$BonyBeetle 00000002 00000008 00000000 00000000 00000000 00000000 
$BonyBeetle 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0F
$HammerBros 00000001 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_10
$HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000001 00000009 00000000 00000000 00000000 00000000 
$HammerBros 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_11
$HammerBros 00000001 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_12
$HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_13
$HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_14
$HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000 
$DryBones 00000001 00000009 00000000 00000000 00000000 00000000 
$HammerBros 00000002 00000008 00000000 00000000 00000000 00000000 
$Magikoopa 00000003 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_15
$HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000001 00000009 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_16
$HammerBros 00000000 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000001 00000009 00000000 00000000 00000000 00000000 
$HammerBros 00000002 00000008 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000007 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_17
$Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_18
$Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_19
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_1A
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 
$Koopatrol 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_1B
$Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_1C
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 
$HammerBros 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Vector3D $Vector3D_80231040
5` 0` -20`

#new:Vector3D $Vector3D_8023104C
45` 0` -10`

#new:Vector3D $Vector3D_80231058
85` 0` 0`

#new:Vector3D $Vector3D_80231064
125` 0` 5`

#new:Formation $Formation_1D
$Koopatrol $Vector3D_80231040 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol $Vector3D_8023104C 00000009 00000000 00000000 00000000 00000000 
$Koopatrol $Vector3D_80231058 00000008 00000000 00000000 00000000 00000000 
$Magikoopa $Vector3D_80231064 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_1E
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Magikoopa 00000002 00000008 00000000 00000000 00000000 00000000 
$Magikoopa 00000003 00000007 00000000 00000000 00000000 00000000 

MISSING: 80231150 to 802311C0 (0069DB80 to 0069DBF0)
802205F0 00000000 0000000A 00000000 00000000 00000000 00000000 8021E678 
00000001 00000009 00000000 00000000 00000000 00000000 80225120 00000002 
00000008 00000000 00000000 00000000 00000000 80225120 00000003 00000007 
00000000 00000000 00000000 00000000 

#new:Formation $Formation_1F
$Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000 
$BonyBeetle 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_20
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$BonyBeetle 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_21
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$BonyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$BonyBeetle 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_22
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$BonyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_23
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$DryBones 00000001 00000009 00000000 00000000 00000000 00000000 
$DryBones 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_24
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Magikoopa 00000002 00000008 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000007 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_25
$Koopatrol 00000000 0000000A 00000000 00000000 00000000 00000000 
$Magikoopa 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 
$Magikoopa 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_26
$Magikoopa 00000001 0000000A 00000000 00000000 00000000 00000000 
$Magikoopa 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_27
$Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$Magikoopa 00000001 00000009 00000000 00000000 00000000 00000000 
$Magikoopa 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_28
$Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000005 00000009 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_29
$Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$Magikoopa 00000001 00000009 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000007 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_2A
$Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 
$Koopatrol 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_2B
$Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$Magikoopa 00000001 00000009 00000000 00000000 00000000 00000000 
$DryBones 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_2C
$Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$BonyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$Magikoopa 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_2D
$Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$BonyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$BonyBeetle 00000002 00000008 00000000 00000000 00000000 00000000 
$Magikoopa 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_2E
$Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$Magikoopa 00000001 00000009 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_2F
$Magikoopa 00000000 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Magikoopa 00000002 00000008 00000000 00000000 00000000 00000000 
$Koopatrol 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_30
$FlyingMagikoopa 00000005 0000000A 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000006 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_31
$FlyingMagikoopa 00000004 0000000A 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000005 00000009 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_32
$FlyingMagikoopa 00000004 0000000A 00000000 00000000 00000000 00000000 
$Magikoopa 00000001 00000009 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000006 00000008 00000000 00000000 00000000 00000000 
$Magikoopa 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_33
$FlyingMagikoopa 00000004 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 00000009 00000000 00000000 00000000 00000000 
$Koopatrol 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_34
$FlyingMagikoopa 00000005 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_35
$FlyingMagikoopa 00000004 0000000A 00000000 00000000 00000000 00000000 
$DryBones 00000001 00000009 00000000 00000000 00000000 00000000 
$DryBones 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_36
$FlyingMagikoopa 00000004 0000000A 00000000 00000000 00000000 00000000 
$Koopatrol 00000001 0000000A 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000006 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_37
$FlyingMagikoopa 00000004 0000000A 00000000 00000000 00000000 00000000 
$HammerBros 00000001 00000009 00000000 00000000 00000000 00000000 
$HammerBros 00000002 00000008 00000000 00000000 00000000 00000000 
$FlyingMagikoopa 00000007 00000007 00000000 00000000 00000000 00000000 

#new:FormationTable $FormationTable
$SJIS_8023274C 00000002 $Formation_00 $Stage_8022F154 00000000 
$SJIS_8023273C 00000003 $Formation_01 $Stage_8022F154 00000000 
$SJIS_80232724 00000003 $Formation_02 $Stage_8022F154 00000000 % unused
$SJIS_8023270C 00000003 $Formation_03 $Stage_8022F154 00000000 % unused
$SJIS_802326F4 00000003 $Formation_04 $Stage_8022F154 00000000 
$SJIS_802326DC 00000004 $Formation_05 $Stage_8022F154 00000000 % unused
$SJIS_802326B4 00000004 $Formation_06 $Stage_8022F154 00000000 
$SJIS_802326A8 00000002 $Formation_07 $Stage_8022F154 00000000 
$SJIS_8023269C 00000003 $Formation_08 $Stage_8022F154 00000000 % unused
$SJIS_80232690 00000004 $Formation_09 $Stage_8022F154 00000000 % unused
$SJIS_8023267C 00000004 $Formation_0A $Stage_8022F154 00000000 % unused
$SJIS_80232668 00000003 $Formation_0B $Stage_8022F154 00000000 
$SJIS_80232654 00000003 $Formation_0C $Stage_8022F154 00000000 
$SJIS_8023263C 00000003 $Formation_0D $Stage_8022F154 00000000 % unused
$SJIS_80232624 00000004 $Formation_0E $Stage_8022F154 00000000 % unused
$SJIS_80232610 00000002 $Formation_0F $Stage_8022F154 00000000 
$SJIS_802325FC 00000003 $Formation_10 $Stage_8022F154 00000000 % unused
$SJIS_802325E4 00000002 $Formation_11 $Stage_8022F154 00000000 % unused
$SJIS_802325C8 00000003 $Formation_12 $Stage_8022F154 00000000 % unused
$SJIS_802325AC 00000003 $Formation_13 $Stage_8022F154 00000000 
$SJIS_8023257C 00000004 $Formation_14 $Stage_8022F154 00000000 
$SJIS_80232554 00000003 $Formation_15 $Stage_8022F154 00000000 
$SJIS_8023252C 00000004 $Formation_16 $Stage_8022F154 00000000 
$SJIS_80232520 00000001 $Formation_17 $Stage_8022F154 00000000 
$SJIS_80232514 00000002 $Formation_18 $Stage_8022F154 00000000 
$SJIS_80232508 00000003 $Formation_19 $Stage_8022F154 00000000 
$SJIS_802324FC 00000004 $Formation_1A $Stage_8022F154 00000000 
$SJIS_802324E4 00000002 $Formation_1B $Stage_8022F154 00000000 % unused
$SJIS_802324B4 00000004 $Formation_1C $Stage_8022F154 00000000 % unused
$SJIS_8023249C 00000004 $Formation_1D $Stage_8022F154 00000000 
$SJIS_80232484 00000004 $Formation_1E $Stage_8022F154 00000000 % unused
$SJIS_80232470 00000002 $Formation_1F $Stage_8022F154 00000000 
$SJIS_80232458 00000003 $Formation_20 $Stage_8022F154 00000000 
$SJIS_80232440 00000003 $Formation_21 $Stage_8022F154 00000000 
$SJIS_80232420 00000003 $Formation_22 $Stage_8022F154 00000000 % unused
$SJIS_8023240C 00000003 $Formation_23 $Stage_8022F154 00000000 
$SJIS_802323E4 00000004 $Formation_24 $Stage_8022F154 00000000 
$SJIS_802323C0 00000004 $Formation_25 $Stage_8022F154 00000000 % unused
$SJIS_802323B4 00000002 $Formation_26 $Stage_8022F154 00000000 % unused
$SJIS_802323A8 00000003 $Formation_27 $Stage_8022F154 00000000 % unused
$SJIS_80232388 00000003 $Formation_28 $Stage_8022F154 00000000 % unused
$SJIS_80232364 00000004 $Formation_29 $Stage_8022F154 00000000 
$SJIS_8023234C 00000004 $Formation_2A $Stage_8022F154 00000000 % unused
$SJIS_80232338 00000003 $Formation_2B $Stage_8022F154 00000000 
$SJIS_80232318 00000003 $Formation_2C $Stage_8022F154 00000000 
$SJIS_802322F8 00000004 $Formation_2D $Stage_8022F154 00000000 % unused
$SJIS_802322D8 00000003 $Formation_2E $Stage_8022F154 00000000 % unused
$SJIS_802322B4 00000004 $Formation_2F $Stage_8022F154 00000000 
$SJIS_8023229C 00000002 $Formation_30 $Stage_8022F154 00000000 % unused
$SJIS_80232284 00000003 $Formation_31 $Stage_8022F154 00000000 % unused
$SJIS_8023224C 00000004 $Formation_32 $Stage_8022F154 00000000 
$SJIS_8023222C 00000003 $Formation_33 $Stage_8022F154 00000000 
$SJIS_80232208 00000002 $Formation_34 $Stage_8022F154 00000000 % unused
$SJIS_802321E8 00000003 $Formation_35 $Stage_8022F154 00000000 
$SJIS_802321B8 00000003 $Formation_36 $Stage_8022F154 00000000 % unused
$SJIS_80232180 00000004 $Formation_37 $Stage_8022F154 00000000 % unused
00000000 00000000 00000000 00000000 00000000 % unused

#new:StageTable $StageTable
$ASCII_802327C4 $Stage_8022F154 
$ASCII_802327BC $Stage_8022F2D8 
$ASCII_802327B4 $Stage_8022F72C 
$ASCII_802327AC $Stage_8022F7C4 
$ASCII_802327A4 $Stage_8022F9E0 
$ASCII_8023279C $Stage_8022FBEC 
$ASCII_80232794 $Stage_8022FE04 
$ASCII_8023278C $Stage_8022FE84 
$ASCII_80232784 $Stage_80230290 
$ASCII_8023277C $Stage_80230314 
$ASCII_80232774 $Stage_80230394 
$ASCII_8023276C $Stage_80230414 
$ASCII_80232764 $Stage_8023053C 
$ASCII_8023275C $Stage_8023066C 
00000000 00000000 

#new:ASCII $ASCII_80231F50
kpa_bt01_hit

#new:ASCII $ASCII_80231F60
kpa_bt01_shape

#new:ASCII $ASCII_80231F70
kpa_tex

#new:ASCII $ASCII_80231F78
kpa_bt01_hit

#new:ASCII $ASCII_80231F88
kpa_bt01_shape

#new:ASCII $ASCII_80231F98
kpa_tex

#new:ASCII $ASCII_80231FA0
kpa_bt02_hit

#new:ASCII $ASCII_80231FB0
kpa_bt02_shape

#new:ASCII $ASCII_80231FC0
kpa_tex

#new:ASCII $ASCII_80231FC8
kpa_bt03_hit

#new:ASCII $ASCII_80231FD8
kpa_bt03_shape

#new:ASCII $ASCII_80231FE8
kpa_tex

#new:ASCII $ASCII_80231FF0
kpa_bt04_hit

#new:ASCII $ASCII_80232000
kpa_bt04_shape

#new:ASCII $ASCII_80232010
kpa_tex

#new:ASCII $ASCII_80232018
kpa_bt04_hit

#new:ASCII $ASCII_80232028
kpa_bt04_shape

#new:ASCII $ASCII_80232038
kpa_tex

#new:ASCII $ASCII_80232040
kpa_bt04_hit

#new:ASCII $ASCII_80232050
kpa_bt04_shape

#new:ASCII $ASCII_80232060
kpa_tex

#new:ASCII $ASCII_80232068
kpa_bt05_hit

#new:ASCII $ASCII_80232078
kpa_bt05_shape

#new:ASCII $ASCII_80232088
kpa_tex

#new:ASCII $ASCII_80232090
kpa_bt07_hit

#new:ASCII $ASCII_802320A0
kpa_bt07_shape

#new:ASCII $ASCII_802320B0
kpa_tex

#new:ASCII $ASCII_802320B8
kpa_bt08_hit

#new:ASCII $ASCII_802320C8
kpa_bt08_shape

#new:ASCII $ASCII_802320D8
kpa_tex

#new:ASCII $ASCII_802320E0
kpa_bt09_hit

#new:ASCII $ASCII_802320F0
kpa_bt09_shape

#new:ASCII $ASCII_80232100
kpa_tex

#new:ASCII $ASCII_80232108
kpa_bt11_hit

#new:ASCII $ASCII_80232118
kpa_bt11_shape

#new:ASCII $ASCII_80232128
kpa_tex

#new:ASCII $ASCII_80232130
kpa_bt13_hit

#new:ASCII $ASCII_80232140
kpa_bt13_shape

#new:ASCII $ASCII_80232150
kpa_tex

#new:ASCII $ASCII_80232158
kpa_bt14_hit

#new:ASCII $ASCII_80232168
kpa_bt14_shape

#new:ASCII $ASCII_80232178
kpa_tex

#new:SJIS $SJIS_80232180
% kuuchuukameku,hanma-burosux2,kuuchuukameku
82AD82A4 82BF82E3 82A4834A 83818362 834E2C83 6E839383 7D815B83 75838D83 
58788251 2C82AD82 A482BF82 E382A483 4A838183 62834E00 

#new:SJIS $SJIS_802321B8
% kuuchuukameku,togenoko,kuuchuukameku
82AD82A4 82BF82E3 82A4834A 83818362 834E2C83 67835183 6D83522C 82AD82A4 
82BF82E3 82A4834A 83818362 834E0000 

#new:SJIS $SJIS_802321E8
% kuuchuukameku,karonx2
82AD82A4 82BF82E3 82A4834A 83818362 834E2C83 4A838D83 93788251 00000000 

#new:SJIS $SJIS_80232208
% kuuchuukameku,hanma-burosu
82AD82A4 82BF82E3 82A4834A 83818362 834E2C83 6E839383 7D815B83 75838D83 
58000000 

#new:SJIS $SJIS_8023222C
% kuuchuukameku,togenokox2
82AD82A4 82BF82E3 82A4834A 83818362 834E2C83 67835183 6D835278 82510000 

#new:SJIS $SJIS_8023224C
% kuuchuukameku,kameku,kuuchuukameku,kameku
82AD82A4 82BF82E3 82A4834A 83818362 834E2C83 4A838183 62834E2C 82AD82A4 
82BF82E3 82A4834A 83818362 834E2C83 4A838183 62834E00 

#new:SJIS $SJIS_80232284
% kuuchuukamekux3
82AD82A4 82BF82E3 82A4834A 83818362 834E7882 52000000 

#new:SJIS $SJIS_8023229C
% kuuchuukamekux2
82AD82A4 82BF82E3 82A4834A 83818362 834E7882 51000000 

#new:SJIS $SJIS_802322B4
% kameku,togenoko,kameku,togenoko
834A8381 8362834E 2C836783 51836D83 522C834A 83818362 834E2C83 67835183 
6D835200 

#new:SJIS $SJIS_802322D8
% kamekux2,kuuchuukameku
834A8381 8362834E 7882512C 82AD82A4 82BF82E3 82A4834A 83818362 834E0000 

#new:SJIS $SJIS_802322F8
% kameku,honemetox2,kameku
834A8381 8362834E 2C837A83 6C838183 62836778 82512C83 4A838183 62834E00 

#new:SJIS $SJIS_80232318
% kameku,honemeto,kameku
834A8381 8362834E 2C837A83 6C838183 6283672C 834A8381 8362834E 00000000 

#new:SJIS $SJIS_80232338
% kamekux2,karon
834A8381 8362834E 7882512C 834A838D 83930000 

#new:SJIS $SJIS_8023234C
% kameku,togenokox3
834A8381 8362834E 2C836783 51836D83 52788252 00000000 

#new:SJIS $SJIS_80232364
% kamekux2,kuuchuukamekux2
834A8381 8362834E 7882512C 82AD82A4 82BF82E3 82A4834A 83818362 834E7882 
51000000 

#new:SJIS $SJIS_80232388
% kameku,kuuchuukamekux2
834A8381 8362834E 2C82AD82 A482BF82 E382A483 4A838183 62834E78 82510000 

#new:SJIS $SJIS_802323A8
% kamekux3
834A8381 8362834E 78825200 

#new:SJIS $SJIS_802323B4
% kamekux2
834A8381 8362834E 78825100 

#new:SJIS $SJIS_802323C0
% togenoko,kameku,togenoko,kameku
83678351 836D8352 2C834A83 81836283 4E2C8367 8351836D 83522C83 4A838183 
62834E00 

#new:SJIS $SJIS_802323E4
% togenokox2,kameku,kuuchuukameku
83678351 836D8352 7882512C 834A8381 8362834E 2C82AD82 A482BF82 E382A483 
4A838183 62834E00 

#new:SJIS $SJIS_8023240C
% togenoko,karonx2
83678351 836D8352 2C834A83 8D839378 82510000 

#new:SJIS $SJIS_80232420
% togenoko,honemeto,togenoko
83678351 836D8352 2C837A83 6C838183 6283672C 83678351 836D8352 00000000 

#new:SJIS $SJIS_80232440
% togenoko,honemetox2
83678351 836D8352 2C837A83 6C838183 62836778 82510000 

#new:SJIS $SJIS_80232458
% togenokox2,honemeto
83678351 836D8352 7882512C 837A836C 83818362 83670000 

#new:SJIS $SJIS_80232470
% togenoko,honemeto
83678351 836D8352 2C837A83 6C838183 62836700 

#new:SJIS $SJIS_80232484
% togenokox2,kamekux2
83678351 836D8352 7882512C 834A8381 8362834E 78825100 

#new:SJIS $SJIS_8023249C
% togenokox3,kameku
83678351 836D8352 7882522C 834A8381 8362834E 00000000 

#new:SJIS $SJIS_802324B4
% togenoko,hanma-burosu,togenoko,hanma-burosu
83678351 836D8352 2C836E83 93837D81 5B837583 8D83582C 83678351 836D8352 
2C836E83 93837D81 5B837583 8D835800 

#new:SJIS $SJIS_802324E4
% togenoko,hanma-burosu
83678351 836D8352 2C836E83 93837D81 5B837583 8D835800 

#new:SJIS $SJIS_802324FC
% togenokox4
83678351 836D8352 78825300 

#new:SJIS $SJIS_80232508
% togenokox3
83678351 836D8352 78825200 

#new:SJIS $SJIS_80232514
% togenokox2
83678351 836D8352 78825100 

#new:SJIS $SJIS_80232520
% togenoko
83678351 836D8352 00000000 

#new:SJIS $SJIS_8023252C
% hanma-burosux3,kuuchuukameku
836E8393 837D815B 8375838D 83587882 522C82AD 82A482BF 82E382A4 834A8381 
8362834E 00000000 

#new:SJIS $SJIS_80232554
% hanma-burosux2,kuuchuukameku
836E8393 837D815B 8375838D 83587882 512C82AD 82A482BF 82E382A4 834A8381 
8362834E 00000000 

#new:SJIS $SJIS_8023257C
% hanma-burosu,karon,hannma-burosu,kameku
836E8393 837D815B 8375838D 83582C83 4A838D83 932C836E 83938393 837D815B 
8375838D 83582C83 4A838183 62834E00 

#new:SJIS $SJIS_802325AC
% hanma-burosu,togenokox2
836E8393 837D815B 8375838D 83582C83 67835183 6D835278 82510000 

#new:SJIS $SJIS_802325C8
% hanma-burosux2,togenoko
836E8393 837D815B 8375838D 83587882 512C8367 8351836D 83520000 

#new:SJIS $SJIS_802325E4
% hanma-burosu,togenoko
836E8393 837D815B 8375838D 83582C83 67835183 6D835200 

#new:SJIS $SJIS_802325FC
% hanma-burosux3
836E8393 837D815B 8375838D 83587882 52000000 

#new:SJIS $SJIS_80232610
% hanma-burosux2
836E8393 837D815B 8375838D 83587882 51000000 

#new:SJIS $SJIS_80232624
% karonx2,honemetox2
834A838D 83937882 512C837A 836C8381 83628367 78825100 

#new:SJIS $SJIS_8023263C
% karonx2,honemeto
834A838D 83937882 512C837A 836C8381 83628367 00000000 

#new:SJIS $SJIS_80232654
% karon,togenokox2
834A838D 83932C83 67835183 6D835278 82510000 

#new:SJIS $SJIS_80232668
% karonx2,kameku
834A838D 83937882 512C834A 83818362 834E0000 

#new:SJIS $SJIS_8023267C
% karon,erumosux3
834A838D 83932C83 47838B83 82835878 82520000 

#new:SJIS $SJIS_80232690
% karonx4
834A838D 83937882 53000000 

#new:SJIS $SJIS_8023269C
% karonx3
834A838D 83937882 52000000 

#new:SJIS $SJIS_802326A8
% karonx2
834A838D 83937882 51000000 

#new:SJIS $SJIS_802326B4
% honemeto,karon,honemeto,kameku
837A836C 83818362 83672C83 4A838D83 932C837A 836C8381 83628367 2C834A83 
81836283 4E000000 

#new:SJIS $SJIS_802326DC
% honemetox3,kameku
837A836C 83818362 83677882 522C834A 83818362 834E0000 

#new:SJIS $SJIS_802326F4
% honemetox2,kameku
837A836C 83818362 83677882 512C834A 83818362 834E0000 

#new:SJIS $SJIS_8023270C
% honemetox2,karon
837A836C 83818362 83677882 512C834A 838D8393 00000000 

#new:SJIS $SJIS_80232724
% honemeto,karonx2
837A836C 83818362 83672C83 4A838D83 93788251 00000000 

#new:SJIS $SJIS_8023273C
% honemetox3
837A836C 83818362 83677882 52000000 

#new:SJIS $SJIS_8023274C
% honemetox2
837A836C 83818362 83677882 51000000 

#new:ASCII $ASCII_8023275C
kpa_14

#new:ASCII $ASCII_80232764
kpa_13

#new:ASCII $ASCII_8023276C
kpa_11

#new:ASCII $ASCII_80232774
kpa_09

#new:ASCII $ASCII_8023277C
kpa_08

#new:ASCII $ASCII_80232784
kpa_07

#new:ASCII $ASCII_8023278C
kpa_05

#new:ASCII $ASCII_80232794
kpa_04c

#new:ASCII $ASCII_8023279C
kpa_04b

#new:ASCII $ASCII_802327A4
kpa_04

#new:ASCII $ASCII_802327AC
kpa_03

#new:ASCII $ASCII_802327B4
kpa_02

#new:ASCII $ASCII_802327BC
kpa_01b

#new:ASCII $ASCII_802327C4
kpa_01

PADDING: 802327CC to 802327D0 (0069F1FC to 0069F200)
00000000 

