% Script File: 0B Area ISK Part 1.bscr
% Decoded from: 4E2740 to 4EF4A0 (0B Area ISK Part 1)

#new:Function $Function_80218000
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S3, V0, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S2, V0, R0
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	LW        A0, 148 (S1)
	JAL       {Func:GetActor}
	DADDU     S1, V0, R0
	DADDU     V1, V0, R0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28

PADDING: 802180CC to 802180D0 (004E280C to 004E2810)
00000000 

#new:Function $Function_802180D0
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S3, V0, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S2, V0, R0
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	LW        A0, 148 (S1)
	JAL       {Func:GetActor}
	DADDU     S1, V0, R0
	DADDU     V1, V0, R0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28

PADDING: 8021819C to 802181A0 (004E28DC to 004E28E0)
00000000 

#new:Function $Function_802181A0
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S3, V0, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S2, V0, R0
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	LW        A0, 148 (S1)
	JAL       {Func:GetActor}
	DADDU     S1, V0, R0
	DADDU     V1, V0, R0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28

PADDING: 8021826C to 80218270 (004E29AC to 004E29B0)
00000000 

#new:Function $Function_80218270
	ADDIU     SP, SP, FFA8
	SW        S4, 20 (SP)
	ADDIU     S4, R0, 3
	SW        S2, 18 (SP)
	SW        RA, 24 (SP)
	SW        S3, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F30, 50 (SP)
	SDC1      F28, 48 (SP)
	SDC1      F26, 40 (SP)
	SDC1      F24, 38 (SP)
	SDC1      F22, 30 (SP)
	SDC1      F20, 28 (SP)
	LW        A0, 148 (A0)
	LIF       F20, 7.0
	LIO       AT, 3F19999A
	MTC1      AT, F30
	LIF       F28, 3.0
	JAL       {Func:GetActor}
	DADDU     S2, R0, R0
	ADDIU     A0, R0, 180
	JAL       8002ACE4
	DADDU     S3, V0, R0
	DADDU     S1, V0, R0
	ADDIU     S0, S1, 8
	LWC1      F26, 14C (S3)
	LWC1      F2, 144 (S3)
	LIF       F1, 2.625
	MTC1      R0, F0
	CVT.D.S   F2, F2
	ADD.D     F2, F2, F0
	LWC1      F0, 148 (S3)
	LIF       F5, 2.3125
	MTC1      R0, F4
	CVT.D.S   F0, F0
	ADD.D     F0, F0, F4
	SW        S1, 78 (S3)
	CVT.S.D   F24, F2
	CVT.S.D   F22, F0
	.oB4
	DADDU     A0, S3, R0
	ADDU      A1, S4, S2
	SWC1      F20, 1C (S0)
	SWC1      F20, 24 (S0)
	SWC1      F20, 20 (S0)
	SWC1      F24, 0 (S1)
	SWC1      F22, FFFC (S0)
	SWC1      F26, 0 (S0)
	SW        R0, 14 (S0)
	SWC1      F30, 18 (S0)
	SWC1      F28, C (S0)
	JAL       {Func:GetSprite}
	SW        R0, 10 (S0)
	LWC1      F0, 0 (S1)
	ADDIU     S2, S2, 1
	SWC1      F0, 2C (V0)
	LWC1      F0, FFFC (S0)
	ADDIU     S1, S1, 30
	SWC1      F0, 30 (V0)
	LWC1      F0, 0 (S0)
	SWC1      F0, 34 (V0)
	SLTI      V0, S2, 8
	BNE       V0, R0, .oB4
	ADDIU     S0, S0, 30
	LW        RA, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F30, 50 (SP)
	LDC1      F28, 48 (SP)
	LDC1      F26, 40 (SP)
	LDC1      F24, 38 (SP)
	LDC1      F22, 30 (SP)
	LDC1      F20, 28 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 58

#new:Function $Function_802183C0
	ADDIU     SP, SP, FFD8
	SDC1      F22, 20 (SP)
	MTC1      A1, F22
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	MTC1      A2, F6
	SDC1      F20, 18 (SP)
	MUL.S     F20, F6, F0
	NOP
	SW        S0, 10 (SP)
	LIF       F0, 360.0
	DADDU     S0, A0, R0
	SW        RA, 14 (SP)
	DIV.S     F20, F20, F0
	JAL       {Func:SinRad}
	MOV.S     F12, F20
	MOV.S     F12, F20
	JAL       {Func:CosRad}
	MOV.S     F20, F0
	NEG.S     F2, F22
	MUL.S     F2, F2, F20
	NOP
	MUL.S     F22, F22, F0
	NOP
	LWC1      F4, 0 (S0)
	ADD.S     F4, F4, F2
	LWC1      F0, 4 (S0)
	ADD.S     F0, F0, F22
	SWC1      F4, 0 (S0)
	SWC1      F0, 4 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F22, 20 (SP)
	LDC1      F20, 18 (SP)
	JR        RA
	ADDIU     SP, SP, 28

#new:Function $Function_80218458
	ADDIU     SP, SP, FFD8
	SDC1      F22, 20 (SP)
	MTC1      A1, F22
	LIO       AT, 40C90FD0
	MTC1      AT, F0
	MTC1      A2, F2
	SDC1      F20, 18 (SP)
	MUL.S     F20, F2, F0
	NOP
	SW        S0, 10 (SP)
	LIF       F0, 360.0
	DADDU     S0, A0, R0
	SW        RA, 14 (SP)
	DIV.S     F20, F20, F0
	JAL       {Func:SinRad}
	MOV.S     F12, F20
	JAL       {Func:CosRad}
	MOV.S     F12, F20
	MUL.S     F22, F22, F0
	NOP
	SWC1      F22, 0 (S0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F22, 20 (SP)
	LDC1      F20, 18 (SP)
	JR        RA
	ADDIU     SP, SP, 28

#new:Function $Function_802184CC
	ADDIU     SP, SP, FF98
	SW        RA, 38 (SP)
	SW        S5, 34 (SP)
	SW        S4, 30 (SP)
	SW        S3, 2C (SP)
	SW        S2, 28 (SP)
	SW        S1, 24 (SP)
	SW        S0, 20 (SP)
	SDC1      F28, 60 (SP)
	SDC1      F26, 58 (SP)
	SDC1      F24, 50 (SP)
	SDC1      F22, 48 (SP)
	SDC1      F20, 40 (SP)
	JAL       {Func:GetActor}
	LW        A0, 148 (A0)
	DADDU     S1, V0, R0
	BNE       S1, R0, .o50
	ADDIU     V0, R0, A
	BEQ       R0, R0, .o3AC
	DADDU     V0, R0, R0
	.o50
	LB        V1, 210 (S1)
	LW        S2, 78 (S1)
	BNE       V1, V0, .o90
	ADDIU     S5, R0, 3
	LWC1      F2, 144 (S1)
	LIF       F1, 2.375
	MTC1      R0, F0
	CVT.D.S   F2, F2
	ADD.D     F2, F2, F0
	LWC1      F0, 148 (S1)
	LIF       F5, 2.0625
	MTC1      R0, F4
	BEQ       R0, R0, .oBC
	CVT.D.S   F0, F0
	.o90
	LWC1      F2, 144 (S1)
	LIF       F1, 2.625
	MTC1      R0, F0
	CVT.D.S   F2, F2
	ADD.D     F2, F2, F0
	LWC1      F0, 148 (S1)
	LIF       F5, 2.3125
	MTC1      R0, F4
	CVT.D.S   F0, F0
	.oBC
	ADD.D     F0, F0, F4
	CVT.S.D   F20, F2
	CVT.S.D   F22, F0
	DADDU     S3, R0, R0
	ADDIU     S4, R0, A
	ADDIU     S0, S2, 4
	LIF       F28, 3.5
	LIF       F26, 7.0
	LIF       F24, 1.0
	.oEC
	LB        V0, 210 (S1)
	BNEL      V0, S4, .o108
	SWC1      F26, 20 (S0)
	SWC1      F28, 20 (S0)
	SWC1      F28, 28 (S0)
	BEQ       R0, R0, .o110
	SWC1      F28, 24 (S0)
	.o108
	SWC1      F26, 28 (S0)
	SWC1      F26, 24 (S0)
	.o110
	LWC1      F2, 14 (S0)
	LWC1      F0, 10 (S0)
	SUB.S     F2, F2, F0
	NEG.S     F0, F0
	ADD.S     F0, F0, F0
	C.LT.S    F2, F0
	NOP
	BC1F      .o164
	SWC1      F2, 14 (S0)
	SWC1      F0, 14 (S0)
	LW        V0, A8 (S1)
	BEQ       V0, R0, .o164
	NOP
	BNE       S3, R0, .o164
	ADDIU     A0, R0, 2063
	LWC1      F0, 14C (S1)
	SWC1      F0, 10 (SP)
	LW        A2, 144 (S1)
	LW        A3, 148 (S1)
	JAL       80149D5C
	DADDU     A1, R0, R0
	.o164
	LWC1      F0, 0 (S0)
	LWC1      F2, 14 (S0)
	ADD.S     F0, F0, F2
	SWC1      F0, 0 (S0)
	LB        V0, 210 (S1)
	BNE       V0, S4, .o1B0
	CVT.D.S   F0, F0
	LIF       F3, 2.0625
	MTC1      R0, F2
	NOP
	C.LT.D    F0, F2
	NOP
	BC1F      .o1E4
	MOV.S     F12, F20
	LIF       F0, 2.5
	BEQ       R0, R0, .o1DC
	SW        R0, 14 (S0)
	.o1B0
	LIF       F3, 2.3125
	MTC1      R0, F2
	NOP
	C.LT.D    F0, F2
	NOP
	BC1F      .o1E4
	MOV.S     F12, F20
	LIF       F0, 5.0
	SW        R0, 14 (S0)
	.o1DC
	SWC1      F0, 0 (S0)
	MOV.S     F12, F20
	.o1E4
	LW        A2, 0 (S2)
	LW        A3, 0 (S0)
	JAL       {Func:Dist2D}
	MOV.S     F14, F22
	MOV.S     F12, F20
	MOV.S     F14, F22
	LW        A2, 0 (S2)
	LW        A3, 0 (S0)
	JAL       80029C80
	MOV.S     F20, F0
	LWC1      F2, 28 (S0)
	C.LE.S    F2, F20
	NOP
	BC1F      .o264
	MOV.S     F22, F0
	SUB.S     F2, F20, F2
	MFC1      A2, F22
	MFC1      A1, F2
	JAL       $Function_80218458
	ADDIU     A0, SP, 18
	LWC1      F0, 18 (SP)
	LIF       F3, 1.75
	MTC1      R0, F2
	CVT.D.S   F0, F0
	MUL.D     F0, F0, F2
	NOP
	LWC1      F2, 14 (S0)
	CVT.D.S   F2, F2
	ADD.D     F2, F2, F0
	CVT.S.D   F2, F2
	SWC1      F2, 14 (S0)
	.o264
	LWC1      F0, 24 (S0)
	C.LE.S    F0, F20
	NOP
	BC1F      .o2B0
	NOP
	LWC1      F0, 20 (S0)
	C.LE.S    F0, F20
	NOP
	BC1F      .o294
	NOP
	BEQ       R0, R0, .o2A4
	SUB.S     F0, F20, F0
	.o294
	LWC1      F0, 18 (S0)
	LWC1      F2, 1C (S0)
	ADD.S     F0, F0, F2
	SWC1      F0, 18 (S0)
	.o2A4
	MFC1      A1, F0
	BEQ       R0, R0, .o2FC
	NOP
	.o2B0
	LWC1      F2, 1C (S0)
	LAD       F0, $ConstDouble_80224920
	CVT.D.S   F2, F2
	MUL.D     F2, F2, F0
	NOP
	LWC1      F0, 18 (S0)
	CVT.D.S   F0, F0
	SUB.D     F0, F0, F2
	MTC1      R0, F4
	MTC1      R0, F5
	CVT.S.D   F0, F0
	CVT.D.S   F2, F0
	C.LT.D    F2, F4
	NOP
	BC1F      .o2F8
	SWC1      F0, 18 (S0)
	SW        R0, 18 (S0)
	.o2F8
	LW        A1, 18 (S0)
	.o2FC
	MFC1      A2, F22
	JAL       $Function_802183C0
	DADDU     A0, S2, R0
	LWC1      F0, 18 (S0)
	LIF       F3, 2.25
	MTC1      R0, F2
	CVT.D.S   F0, F0
	C.LT.D    F2, F0
	NOP
	BC1F      .o33C
	DADDU     A0, S1, R0
	LIF       F0, 4.0
	NOP
	SWC1      F0, 18 (S0)
	.o33C
	JAL       {Func:GetSprite}
	ADDU      A1, S5, S3
	LWC1      F0, 0 (S2)
	DADDU     V1, V0, R0
	SWC1      F0, 2C (V1)
	LWC1      F0, 0 (S0)
	SWC1      F0, 30 (V1)
	LWC1      F0, 4 (S0)
	SWC1      F0, 34 (V1)
	LB        V0, 210 (S1)
	BNEL      V0, S4, .o384
	SWC1      F24, 4C (V1)
	LIF       F0, 0.5
	SWC1      F24, 54 (V1)
	SWC1      F0, 4C (V1)
	BEQ       R0, R0, .o38C
	SWC1      F0, 50 (V1)
	.o384
	SWC1      F24, 50 (V1)
	SWC1      F24, 54 (V1)
	.o38C
	ADDIU     S3, S3, 1
	LWC1      F22, 0 (S0)
	ADDIU     S0, S0, 30
	LWC1      F20, 0 (S2)
	SLTI      V0, S3, 8
	BNE       V0, R0, .oEC
	ADDIU     S2, S2, 30
	ADDIU     V0, R0, 2
	.o3AC
	LW        RA, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F28, 60 (SP)
	LDC1      F26, 58 (SP)
	LDC1      F24, 50 (SP)
	LDC1      F22, 48 (SP)
	LDC1      F20, 40 (SP)
	JR        RA
	ADDIU     SP, SP, 68

#new:Function $Function_802188B0
	LUI       A1, C305
	ADDIU     SP, SP, FFC8
	SDC1      F22, 28 (SP)
	LIF       F22, 72.0
	SDC1      F24, 30 (SP)
	LIF       F24, -143.0
	ADDIU     A0, R0, 1
	SDC1      F20, 20 (SP)
	LIO       AT, 3E99999A
	MTC1      AT, F20
	MFC1      A2, F22
	MFC1      A3, F24
	LIA       V0, $End[0]
	SW        RA, 18 (SP)
	SW        V0, 14 (SP)
	JAL       80070490
	SWC1      F20, 10 (SP)
	ADDIU     A0, R0, 1
	LUI       A1, 4301
	MFC1      A2, F22
	MFC1      A3, F24
	LIA       V0, $End[4]
	SWC1      F20, 10 (SP)
	JAL       80070490
	SW        V0, 14 (SP)
	LW        RA, 18 (SP)
	LDC1      F24, 30 (SP)
	LDC1      F22, 28 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 38

#new:Function $Function_80218944
	LAW       A0, $End[0]
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       8005A450
	NOP
	LAW       A0, $End[4]
	JAL       8005A450
	NOP
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18

PADDING: 8021897C to 80218980 (004E30BC to 004E30C0)
00000000 

#new:Function $Function_80218980
	LUI       A1, C2B4
	ADDIU     SP, SP, FFC8
	SDC1      F22, 28 (SP)
	LIF       F22, 45.0
	SDC1      F24, 30 (SP)
	LIF       F24, -146.0
	ADDIU     A0, R0, 1
	SDC1      F20, 20 (SP)
	LIF       F20, 0.25
	MFC1      A2, F22
	MFC1      A3, F24
	LIA       V0, $End[10]
	SW        RA, 18 (SP)
	SW        V0, 14 (SP)
	JAL       80070490
	SWC1      F20, 10 (SP)
	ADDIU     A0, R0, 1
	LUI       A1, 42A0
	MFC1      A2, F22
	MFC1      A3, F24
	LIA       V0, $End[14]
	SWC1      F20, 10 (SP)
	JAL       80070490
	SW        V0, 14 (SP)
	LW        RA, 18 (SP)
	LDC1      F24, 30 (SP)
	LDC1      F22, 28 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 38

#new:Function $Function_80218A10
	LAW       A0, $End[10]
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       8005A450
	NOP
	LAW       A0, $End[14]
	JAL       8005A450
	NOP
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18

PADDING: 80218A48 to 80218A50 (004E3188 to 004E3190)
00000000 00000000 

#new:Function $Function_80218A50
	ADDIU     SP, SP, FFE0
	LIA       V0, $End[20]
	LIO       AT, 3E99999A
	MTC1      AT, F0
	LUI       A1, C2DC
	LUI       A2, 42A0
	LUI       A3, C312
	ADDIU     A0, R0, 1
	SW        RA, 18 (SP)
	SW        V0, 14 (SP)
	JAL       80070490
	SWC1      F0, 10 (SP)
	LW        RA, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20

#new:Function $Function_80218A98
	LAW       A0, $End[20]
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       8005A450
	NOP
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18

#new:Function $Function_80218AC0
	ADDIU     SP, SP, FFE0
	LIA       V0, $End[30]
	LIO       AT, 3E99999A
	MTC1      AT, F0
	LUI       A1, 42DC
	LUI       A2, 42A0
	LUI       A3, C312
	ADDIU     A0, R0, 1
	SW        RA, 18 (SP)
	SW        V0, 14 (SP)
	JAL       80070490
	SWC1      F0, 10 (SP)
	LW        RA, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20

#new:Function $Function_80218B08
	LAW       A0, $End[30]
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       8005A450
	NOP
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18

#new:Function $Function_80218B30
	ADDIU     SP, SP, FFE0
	LIA       V0, $End[40]
	LIO       AT, 3E99999A
	MTC1      AT, F0
	LUI       A1, C2DC
	LUI       A2, 42A0
	LUI       A3, C312
	ADDIU     A0, R0, 1
	SW        RA, 18 (SP)
	SW        V0, 14 (SP)
	JAL       80070490
	SWC1      F0, 10 (SP)
	LW        RA, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20

#new:Function $Function_80218B78
	LAW       A0, $End[40]
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       8005A450
	NOP
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18

#new:Function $Function_80218BA0
	ADDIU     SP, SP, FFE0
	LIA       V0, $End[50]
	ADDIU     A0, R0, 1
	LIO       AT, 3E99999A
	MTC1      AT, F0
	LUI       A2, 4290
	LUI       A3, C312
	DADDU     A1, R0, R0
	SW        RA, 18 (SP)
	SW        V0, 14 (SP)
	JAL       80070490
	SWC1      F0, 10 (SP)
	LW        RA, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20

#new:Function $Function_80218BE8
	LAW       A0, $End[50]
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       8005A450
	NOP
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18

#new:DefenseTable $DefenseTable_80218C10
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80218C1C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      80`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      90`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze  100`
.Status:Shrink     90`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_80218CC8
00020000 01000000 001400FF $IdleAnimations_80218DC8 $DefenseTable_80218C10 00200010 00000000 00000000 00000000 
00800001 02000000 004800FF 00000000 $DefenseTable_80218C10 00200010 00000000 00F80000 00000000 
00020001 03000000 003600FF 00000000 $DefenseTable_80218C10 00200010 00000000 00F80000 00000000 
00020001 04000000 002400FF 00000000 $DefenseTable_80218C10 00200010 00000000 00F80000 00000000 
00020001 05000000 001000FF 00000000 $DefenseTable_80218C10 00200010 00000000 00F80000 00000000 
00120001 06000000 000000FF $IdleAnimations_80218EB8 $DefenseTable_80218C10 00200010 00000000 00000000 00000000 

#new:Actor $PokeyMummy
% stats
[Index]        15b 
[Level]        10`b 
[MaxHP]         4`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80218C1C 
% ai
[SpriteCount]   6`s 
[SpriteTable] $SpriteTable_80218CC8 
[Script]      $Script_Init_80218EC4 
% move effectiveness
[Escape]       60`b 
[Item]         60`b 
[AirLift]      90`b 
[Hurricane]    85`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  95`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  80`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -15`b  75`b % dx dy
[StatusIcon]   10`b  65`b % dx dy

#new:IdleAnimations $IdleAnimations_80218DC8
.Status:Normal    00310104
.Status:Stone     00310100
.Status:Sleep     00310125
.Status:Stop      00310100
.Status:Paralyze  00310100
.Status:Dizzy     00310121
.Status:Fear      00310121
.Status:End

#new:IdleAnimations $IdleAnimations_80218E04
.Status:Normal    00310105
.Status:Stone     00310101
.Status:Sleep     00310126
.Status:Stop      00310101
.Status:Paralyze  00310101
.Status:Dizzy     00310122
.Status:Fear      00310122
.Status:End

#new:IdleAnimations $IdleAnimations_80218E40
.Status:Normal    00310106
.Status:Stone     00310102
.Status:Sleep     00310127
.Status:Stop      00310102
.Status:Paralyze  00310102
.Status:Dizzy     00310123
.Status:Fear      00310123
.Status:End

#new:IdleAnimations $IdleAnimations_80218E7C
.Status:Normal    00310107
.Status:Stone     00310103
.Status:Sleep     00310128
.Status:Stop      00310103
.Status:Paralyze  00310103
.Status:Dizzy     00310124
.Status:Fear      00310124
.Status:End

#new:IdleAnimations $IdleAnimations_80218EB8
.Status:Normal    00310116
.Status:End

#new:Script $Script_Init_80218EC4
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80219D88 )
	Call     BindIdle    	( .Actor:Self $Script_Idle_80219040 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80219050 )
	Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	Call     SetActorVar 	( .Actor:Self 00000009 *Var[0] )
	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000001 00310104 )
	Call     SetActorVar 	( .Actor:Self 00000002 00310108 )
	Call     SetActorVar 	( .Actor:Self 00000003 0031010C )
	Call     SetActorVar 	( .Actor:Self 00000004 00310110 )
	Call     SetActorVar 	( .Actor:Self 00000005 00310111 )
	Call     SetActorVar 	( .Actor:Self 00000006 00310118 )
	Call     SetActorVar 	( .Actor:Self 00000007 00310119 )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_Idle_80219040
	Return
	End

#new:Script $Script_HandleEvent_80219050
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   Case  ==  .Event:HitCombo
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	      ExecWait DoNormalHit 
	   Case  ==  .Event:Hit
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  &  00080000 
	         SetConst  *Var[0]  00000001 
	         Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	         ExecWait DoNormalHit 
	      Else
	         Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
	         If  *Var[A]  ==  00000003 
	            SetConst  *Var[0]  00000001 
	            Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	            ExecWait DoNormalHit 
	         Else
	            Call     80269E80 ( *Var[0] )
	            Switch  *Var[0] 
	               CaseOR  ==  00000006 
	               CaseOR  ==  00000007 
	               CaseOR  ==  00000009 
	                  ExecWait $Script_8021BDE4 
	               EndCaseGroup
	               Default
	                  SetConst  *Var[0]  00000001 
	                  Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	                  ExecWait DoNormalHit 
	            EndSwitch
	         EndIf
	      EndIf
	   Case  ==  .Event:Death
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  &  00080000 
	         SetConst  *Var[0]  00000001 
	         Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	         ExecWait DoNormalHit 
	         Wait     0000000A 
	      Else
	         Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
	         If  *Var[A]  ==  00000003 
	            SetConst  *Var[0]  00000001 
	            Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	            ExecWait DoNormalHit 
	            Wait     0000000A 
	         Else
	            Call     80269E80 ( *Var[0] )
	            Switch  *Var[0] 
	               CaseOR  ==  00000006 
	               CaseOR  ==  00000007 
	               CaseOR  ==  00000009 
	                  ExecWait $Script_8021BDE4 
	               EndCaseGroup
	               Default
	                  SetConst  *Var[0]  00000001 
	                  Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	                  ExecWait DoNormalHit 
	                  Wait     0000000A 
	            EndSwitch
	         EndIf
	      EndIf
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:BurnHit
	      Call     GetActorVar 	( .Actor:Self 00000006 *Var[1] )
	      Call     GetActorVar 	( .Actor:Self 00000007 *Var[2] )
	      SetConst  *Var[0]  00000001 
	      Call     GetStatusFlags ( .Actor:Self *Var[3] )
	      If  *Var[3]  &  00080000 
	         ExecWait DoBurnHit 
	      Else
	         Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
	         If  *Var[A]  ==  00000003 
	            ExecWait DoBurnHit 
	         Else
	            Call     80269E80 ( *Var[A] )
	            Switch  *Var[A] 
	               CaseOR  ==  00000006 
	               CaseOR  ==  00000007 
	               CaseOR  ==  00000009 
	                  ExecWait $Script_8021BDE4 
	               EndCaseGroup
	               Default
	                  ExecWait DoBurnHit 
	            EndSwitch
	         EndIf
	      EndIf
	   CaseOR  ==  .Event:BurnDeath
	      Call     GetActorVar 	( .Actor:Self 00000006 *Var[1] )
	      Call     GetActorVar 	( .Actor:Self 00000007 *Var[2] )
	      SetConst  *Var[0]  00000001 
	      Call     GetStatusFlags ( .Actor:Self *Var[3] )
	      If  *Var[3]  &  00080000 
	         ExecWait DoBurnHit 
	      Else
	         Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
	         If  *Var[A]  ==  00000003 
	            ExecWait DoBurnHit 
	         Else
	            Call     80269E80 ( *Var[A] )
	            Switch  *Var[A] 
	               CaseOR  ==  00000006 
	               CaseOR  ==  00000007 
	               CaseOR  ==  00000009 
	                  ExecWait $Script_8021BDE4 
	               EndCaseGroup
	               Default
	                  ExecWait DoBurnHit 
	            EndSwitch
	         EndIf
	      EndIf
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000007 *Var[1] )
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      ExecWait $Script_8021B088 
	   Case  ==  .Event:MultibounceDeath
	      ExecWait $Script_8021B088 
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	      ExecWait DoDeath 
	      Return
	   Case  ==  00000011
	      Call     GetStatusFlags ( .Actor:Self *Var[3] )
	      If  *Var[3]  &  00080000 
	         SetConst  *Var[0]  00000001 
	         Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	         ExecWait DoNormalHit 
	      Else
	         ExecWait $Script_8021BDE4 
	      EndIf
	   Case  ==  00000025
	      Call     GetStatusFlags ( .Actor:Self *Var[3] )
	      If  *Var[3]  &  00080000 
	         SetConst  *Var[0]  00000001 
	         Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	         ExecWait DoNormalHit 
	      Else
	         ExecWait $Script_8021BDE4 
	      EndIf
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  FFFFFFFF 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:ShockHit
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	      ExecWait DoShockHit 
	      Call     GetActorVar 	( .Actor:Self 00000002 *Var[1] )
	      Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
	      ExecWait 8029C12C 
	   Case  ==  .Event:ShockDeath
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	      ExecWait DoDeath 
	      Return
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
	      ExecWait DoImmune 
	   EndCaseGroup
	   Case  ==  .Event:SpikeTaunt
	      Call     GetBattleFlags ( *Var[0] )
	      If  *Var[0]  !&  00080000 
	         Call     8027D67C ( 00000000 00000009 00000003 )
	      EndIf
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      Switch  *Var[0] 
	         Case  ==  00000000 
	            Set  *Var[0]  00000000 
	            Set  *Var[1]  0000004D 
	            SetConst  *Var[2]  00310121 
	         Case  ==  00000001 
	            Set  *Var[0]  00000000 
	            Set  *Var[1]  0000003B 
	            SetConst  *Var[2]  00310122 
	         Case  ==  00000002 
	            Set  *Var[0]  00000000 
	            Set  *Var[1]  00000029 
	            SetConst  *Var[2]  00310123 
	         Case  ==  00000003 
	            Set  *Var[0]  00000000 
	            Set  *Var[1]  00000017 
	            SetConst  *Var[2]  00310124 
	      EndSwitch
	      Call     GetStatusFlags ( .Actor:Self *Var[3] )
	      If  *Var[3]  !&  00001000 
	         Call     SetAnimation 	( .Actor:Self 00000001 *Var[2] )
	      EndIf
	      Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	      Call     GetStatusFlags ( .Actor:Self *Var[6] )
	      If  *Var[6]  &  00080000 
	         MulF  *Var[0]  *Fixed[0.40039062] 
	         MulF  *Var[1]  *Fixed[0.40039062] 
	      EndIf
	      AddF  *Var[3]  *Var[0] 
	      AddF  *Var[4]  *Var[1] 
	      Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[3] *Var[4] *Var[5] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	      Wait     0000001E 
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      ExecWait $Script_8021C2BC 
	      Return
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_80219D88
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
	If  *Var[A]  ==  00000003 
	   ExecWait $Script_8021A6C8 
	   Return
	EndIf
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     UseCamPreset 	( 00000002 )
	   Call     MoveCamOver 	( 00000001 )
	EndIf
	Call     8026FA00 ( FFFFFF81 00000006 00000002 00000000 00000000 )
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00080000 
	   Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	Else
	   Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[1.0] )
	EndIf
	ChildThread
	   Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .False )
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     SetSpritePos 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
	   Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[2.2001953] )
	   Call     SetAnimation 	( .Actor:Self 00000006 00310116 )
	   Call     GetStatusFlags ( .Actor:Self *Var[5] )
	   Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
	   Switch  *Var[A] 
	      Case  ==  00000000 
	         If  *Var[5]  !&  00080000 
	            Add  *Var[1]  00000026 
	         Else
	            Add  *Var[1]  0000000F 
	            Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[1.2001953] )
	         EndIf
	         Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 0000000F .True )
	      Case  ==  00000001 
	         If  *Var[5]  !&  00080000 
	            Add  *Var[1]  00000014 
	         Else
	            Add  *Var[1]  00000008 
	            Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[1.2001953] )
	         EndIf
	         Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 0000000F .True )
	      Case  ==  00000002 
	         If  *Var[5]  !&  00080000 
	            Add  *Var[1]  00000008 
	         Else
	            Add  *Var[1]  00000003 
	            Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[1.2001953] )
	         EndIf
	         Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 0000000F .True )
	      Case  ==  00000003 
	   EndSwitch
	EndChildThread
	Call     PlaySoundAtActor 	( .Actor:Self 00000342 )
	Call     GetActorVar 	( .Actor:Self 00000004 *Var[1] )
	Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
	Wait     0000000C 
	Call     GetActorVar 	( .Actor:Self 00000005 *Var[1] )
	Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
	Wait     00000001 
	Call     PlaySoundAtActor 	( .Actor:Self 000002CE )
	Wait     00000003 
	ExecWait $Script_8021B1B4 
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 10000000 00000000 00000002 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      If  *Var[0]  ==  00000005 
	         ChildThread
	            Wait     00000005 
	            Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	         EndChildThread
	      EndIf
	      Call     SetTargetActor ( .Actor:Self .Actor:Player )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000050 
	      Sub  *Var[1]  00000005 
	      Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[20.0] )
	      Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[0.10058594] )
	      Call     SetAnimation 	( .Actor:Self 00000006 00310116 )
	      Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 .True )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
	      Call     GetActorVar 	( .Actor:Self 00000002 *Var[1] )
	      Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[20.0] )
	Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[0.10058594] )
	Call     SetAnimation 	( .Actor:Self 00000006 00310116 )
	Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 .True )
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 80020328 00000002 00000020 )
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[1] )
	Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000037 
	      Set  *Var[1]  00000000 
	      Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[6.0] )
	      Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[0.10058594] )
	      Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 00000019 .Easing:Linear )
	      Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[4.0] )
	      Sub  *Var[0]  00000018 
	      Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 00000015 .Easing:Linear )
	      Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[3.0] )
	      Sub  *Var[0]  00000014 
	      Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 00000014 .Easing:Linear )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021A6C8
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     8026F740 ( FFFFFF81 00000000 000002EC 000002EC )
	Call     8026F740 ( FFFFFF81 00000002 000002EC 00000000 )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  00000032 
	Set  *Var[1]  00000000 
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	Call     SetAnimation 	( .Actor:Self 00000001 0031010B )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
	ExecWait 8029C12C 
	Call     SetAnimation 	( .Actor:Self 00000001 00310107 )
	Wait     00000004 
	Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFF 00000000 )
	Wait     00000001 
	Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFE 00000000 )
	Wait     00000004 
	Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 0031010B )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000002 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000005 
	      Set  *Var[1]  0000000A 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.1005859] )
	      ChildThread
	         Wait     00000002 
	         Set  *Var[0]  00000000 
	         Loop     00000005 
	            Add  *Var[0]  0000001E 
	            Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	            Wait     00000001 
	         EndLoop
	      EndChildThread
	      Call     JumpToGoal  	( .Actor:Self 00000016 00000000 00000001 00000000 )
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000A 00000000 )
	      ChildThread
	         Wait     00000002 
	         Set  *Var[0]  000000B4 
	         Loop     00000006 
	            Add  *Var[0]  0000001E 
	            If  *Var[0]  ==  00000168 
	               Set  *Var[0]  00000000 
	            EndIf
	            Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	            Wait     00000001 
	         EndLoop
	         Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	      EndChildThread
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  0000001E 
	      Set  *Var[1]  00000000 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
	      Wait     0000000F 
	      Call     UseCamPreset 	( 00000002 )
	      Call     8027D7F0 ( )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 0031010B )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
	      ExecWait 8029C12C 
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00310107 )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.1005859] )
	ChildThread
	   Wait     00000002 
	   Set  *Var[0]  00000000 
	   Loop     00000005 
	      Add  *Var[0]  0000001E 
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	      Wait     00000001 
	   EndLoop
	EndChildThread
	Call     JumpToGoal  	( .Actor:Self 00000012 00000000 00000001 00000000 )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 80020364 00000002 00000020 )
	Call     SetAnimation 	( .Actor:Self 00000001 00310107 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[0]  00000028 
	      Set  *Var[1]  00000000 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	      Add  *Var[0]  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	      Add  *Var[0]  00000014 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
	      Sub  *Var[0]  0000000A 
	      Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00310107 )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 0031010B )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
	      ExecWait 8029C12C 
	      Call     SetAnimation 	( .Actor:Self 00000001 00310107 )
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021B088
	Call     GetStatusFlags ( .Actor:Self *Var[A] )
	If  *Var[A]  &  00080000 
	   SetConst  *Var[0]  00000001 
	   Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	   ExecWait 8029B998 
	   Return
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
	Switch  *Var[A] 
	   Case  ==  00000000 
	      ExecWait $Script_8021B998 
	   Case  ==  00000001 
	      ExecWait $Script_8021B998 
	   Case  ==  00000002 
	      ExecWait $Script_8021B998 
	   Case  ==  00000003 
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	      ExecWait 8029B998 
	EndSwitch
	Return
	End

#new:Script $Script_8021B1B4
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
	Switch  *Var[A] 
	   Case  ==  00000000 
	      Call     SetActorVar 	( .Actor:Self 00000001 00310105 )
	      Call     SetActorVar 	( .Actor:Self 00000002 00310109 )
	      Call     SetActorVar 	( .Actor:Self 00000003 0031010D )
	      Call     SetActorVar 	( .Actor:Self 00000004 00310112 )
	      Call     SetActorVar 	( .Actor:Self 00000005 00310113 )
	      Call     SetActorVar 	( .Actor:Self 00000006 0031011A )
	      Call     SetActorVar 	( .Actor:Self 00000007 0031011B )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80218E04 )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .False )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020000 .True )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00020000 .False )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00800000 .True )
	      Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
	      Call     8027D810 ( FFFFFF81 0000003E *Unknown[0] )
	      Call     8027D970 ( FFFFFF81 00000001 0000003E *Unknown[0] )
	      Call     $Function_80218000 ( FFFFFFF1 00000037 0000000A 0000002D )
	   Case  ==  00000001 
	      Call     SetActorVar 	( .Actor:Self 00000001 00310106 )
	      Call     SetActorVar 	( .Actor:Self 00000002 0031010A )
	      Call     SetActorVar 	( .Actor:Self 00000003 0031010E )
	      Call     SetActorVar 	( .Actor:Self 00000004 00310114 )
	      Call     SetActorVar 	( .Actor:Self 00000005 00310115 )
	      Call     SetActorVar 	( .Actor:Self 00000006 0031011C )
	      Call     SetActorVar 	( .Actor:Self 00000007 0031011D )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80218E40 )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00800000 .False )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00020000 .True )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00020000 .False )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00800000 .True )
	      Call     SetActorVar 	( .Actor:Self 00000000 00000002 )
	      Call     8027D810 ( FFFFFF81 0000002C *Unknown[0] )
	      Call     8027D970 ( FFFFFF81 00000001 0000002C *Unknown[0] )
	      Call     $Function_80218000 ( FFFFFFF1 00000023 0000000A 00000019 )
	   Case  ==  00000002 
	      Call     SetActorVar 	( .Actor:Self 00000001 00310107 )
	      Call     SetActorVar 	( .Actor:Self 00000002 0031010B )
	      Call     SetActorVar 	( .Actor:Self 00000003 0031010F )
	      Call     SetActorVar 	( .Actor:Self 00000006 0031011E )
	      Call     SetActorVar 	( .Actor:Self 00000007 0031011F )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80218E7C )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00800000 .False )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000004 00020000 .True )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000005 00020000 .False )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000005 00800000 .True )
	      Call     SetActorVar 	( .Actor:Self 00000000 00000003 )
	      Call     8027D810 ( FFFFFF81 0000001A *Unknown[0] )
	      Call     8027D970 ( FFFFFF81 00000001 0000001A *Unknown[0] )
	      Call     $Function_80218000 ( FFFFFFF1 0000000F 0000000A 00000005 )
	EndSwitch
	Return
	End

#new:Script $Script_8021B6AC
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[1]  00000012 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Set  *Var[3]  *Var[1] 
	Wait     00000002 
	Sub  *Var[3]  00000001 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
	Wait     00000003 
	Sub  *Var[3]  00000002 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
	Wait     00000002 
	Sub  *Var[3]  00000003 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
	Wait     00000001 
	Sub  *Var[3]  00000005 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
	Wait     00000001 
	Sub  *Var[3]  00000007 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
	Wait     00000001 
	Add  *Var[3]  00000002 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
	Wait     00000001 
	Add  *Var[3]  00000003 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
	Wait     00000001 
	Add  *Var[3]  00000003 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
	Wait     00000001 
	Sub  *Var[3]  00000003 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
	Wait     00000001 
	Sub  *Var[3]  00000003 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
	Wait     00000001 
	Sub  *Var[3]  00000002 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
	Return
	End

#new:Script $Script_8021B998
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetSpritePos 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .False )
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00080000 
	   Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	Else
	   Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[1.0] )
	EndIf
	ExecWait $Script_8021B1B4 
	SetConst  *Var[0]  00000001 
	Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
	ChildThread
	   Wait     00000004 
	   ExecWait $Script_8021B6AC 
	EndChildThread
	Call     CreateTargetList 	( 00018004 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Call     GetOwnerID  	( *Var[1] )
	Call     GetOwnerTarget ( *Var[0] *Var[9] )
	If  *Var[1]  !=  *Var[0] 
	   Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	   Goto     00000000 
	EndIf
	Label    00000001 
	Add  *Var[F]  00000001 
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  ==  FFFFFFFF 
	   Goto     0000000A 
	EndIf
	Call     GetOwnerTarget ( *Var[0] *Var[9] )
	Call     GetActorFlags 	( *Var[0] *Var[1] )
	If  *Var[1]  &  00004000 
	   Goto     00000001 
	EndIf
	Call     GetOwnerID  	( *Var[0] )
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Set  *Var[1]  00000000 
	Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[0.10058594] )
	Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[7.0] )
	Call     JumpSpriteA 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000000 .True )
	ChildThread
	   Call     ShakeCam    	( 00000001 00000000 00000002 *Fixed[1.0] )
	EndChildThread
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     8027D1BC ( *Var[0] 00000001 00000011 )
	Goto     00000001 
	Label    0000000A 
	Call     UseCamPreset 	( 00000003 )
	Call     SetSpriteJumpscale 	( .Actor:Self 00000006 *Fixed[0.10058594] )
	Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[6.0] )
	Call     JumpSpriteA 	( .Actor:Self 00000006 00000128 00000000 00000000 00000000 .True )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00020000 .True )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
	Return
	End

#new:Script $Script_8021BDE4
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00080000 
	   Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	Else
	   Call     SetSpriteScale ( .Actor:Self 00000006 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[1.0] )
	EndIf
	ExecWait $Script_8021B1B4 
	SetConst  *Var[0]  00000001 
	Call     GetEventType 	( .Actor:Self *Var[1] )
	Switch  *Var[1] 
	   CaseOR  ==  .Event:BurnHit
	   CaseOR  ==  .Event:BurnDeath
	      Call     SetAnimation 	( .Actor:Self 00000006 00310020 )
	      Call     GetActorVar 	( .Actor:Self 00000006 *Var[1] )
	   EndCaseGroup
	   Default
	      Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	EndSwitch
	Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
	ChildThread
	   Wait     00000004 
	   ExecWait $Script_8021B6AC 
	EndChildThread
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
	If  *Var[A]  !=  00000003 
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     SetSpritePos 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] )
	   Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .False )
	   Call     SetSpriteSpeed ( .Actor:Self 00000006 *Fixed[6.0] )
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Add  *Var[0]  0000001E 
	   Set  *Var[1]  00000000 
	   Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 0000000A 00000012 .Easing:Linear )
	   Add  *Var[0]  00000014 
	   Call     MoveSpriteTo 	( .Actor:Self 00000006 *Var[0] *Var[1] *Var[2] 00000008 0000000A .Easing:Linear )
	   Loop     00000014 
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
	      Wait     00000001 
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .False )
	      Wait     00000001 
	   EndLoop
	   Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00020000 .True )
	   Call     SetSpriteFlagBits 	( .Actor:Self 00000006 00000001 .True )
	Else
	   Wait     0000001E 
	EndIf
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   Case  ==  .Event:BurnHit
	      Call     GetActorVar 	( .Actor:Self 00000007 *Var[1] )
	      Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     8027D8E0 ( FFFFFF81 *Var[3] *Var[4] )
	      Div  *Var[3]  00000002 
	      Add  *Var[1]  *Var[3] 
	      Add  *Var[2]  00000005 
	      DivF  *Var[3]  *Fixed[10.0] 
	      Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[0] *Var[1] *Var[2] *Var[3] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Case  ==  .Event:BurnDeath
	      Call     GetActorVar 	( .Actor:Self 00000007 *Var[1] )
	      Call     SetAnimation 	( .Actor:Self 00000001 *Var[1] )
	      Wait     0000000A 
	   Default
	EndSwitch
	Return
	End

#new:Script $Script_8021C2BC
	SetConst  *Var[0]  00000001 
	Call     GetActorVar 	( .Actor:Self 00000003 *Var[1] )
	Call     UseCamPreset 	( 00000002 )
	Call     GetActorFlags 	( .Actor:Self *Var[9] )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.05078125] )
	Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Set  *Var[D]  *Var[B] 
	Add  *Var[D]  00000028 
	Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[D] *Var[C] )
	Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
	Wait     00000014 
	Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Call     80279BEC ( FFFFFF81 0000000A )
	Wait     00000014 
	Call     SetActorAngle 	( .Actor:Self 000000B4 )
	Wait     00000005 
	Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	Call     SetGoalToPos 	( .Actor:Self 000000C8 00000000 00000000 )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Wait     00000008 
	Call     8027D32C ( FFFFFF81 )
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     RemoveActor 	( .Actor:Self )
	Return
	End

PADDING: 8021C4AC to 8021C4B0 (004E6BEC to 004E6BF0)
00000000 

#new:DefenseTable $DefenseTable_8021C4B0
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021C4BC
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      80`
.Status:Poison     60`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     80`
.Status:Paralyze   90`
.Status:Shrink     90`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021C568
00800000 01000000 001D00FF $IdleAnimations_8021C5B4 $DefenseTable_8021C4B0 00000000 00000000 010F0000 00000000 

#new:Actor $Swooper
% stats
[Index]        16b 
[Level]        10`b 
[MaxHP]         4`b 
[Coins]         1`b 
[Flags]       00000800 
[StatusTable] $StatusTable_8021C4BC 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021C568 
[Script]      $Script_Init_8021C64C 
% move effectiveness
[Escape]       50`b 
[Item]         90`b 
[AirLift]     100`b 
[Hurricane]    95`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         31`b  24`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b -20`b % dx dy
[StatusIcon]   10`b -20`b % dx dy

#new:IdleAnimations $IdleAnimations_8021C5B4
.Status:Normal    0034000C
.Status:Stone     0034000B
.Status:Sleep     0034000F
.Status:Poison    0034000C
.Status:Stop      0034000B
.Status:Static    0034000C
.Status:Paralyze  0034000B
.Status:Dizzy     00340010
.Status:Fear      00340010
.Status:End

#new:IdleAnimations $IdleAnimations_8021C600
.Status:Normal    00340002
.Status:Stone     00340001
.Status:Sleep     00340013
.Status:Poison    00340002
.Status:Stop      00340001
.Status:Static    00340002
.Status:Paralyze  00340001
.Status:Dizzy     00340014
.Status:Fear      00340014
.Status:End

#new:Script $Script_Init_8021C64C
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021DED4 )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8021C6B0 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021D064 )
	Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
	Return
	End

#new:Script $Script_Idle_8021C6B0
	Return
	End

#new:Script $Script_8021C6C0
	Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      Call     SetAnimation 	( .Actor:Self 00000001 00340002 )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     AddToGoalPos 	( .Actor:Self 00000000 FFFFFFE8 00000000 )
	      Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:SinOut )
	      Call     SetActorFlagBits 	( .Actor:Self 00000800 .True )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021C5B4 )
	      Call     SetAnimation 	( .Actor:Self 00000001 0034000C )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[1]  00000018 
	      Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     HPBarToHome 	( .Actor:Self )
	   Case  ==  00000001 
	      Call     SetAnimation 	( .Actor:Self 00000001 00340002 )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:SinOut )
	EndSwitch
	Return
	End

#new:Script $Script_8021C880
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00340015 
	      ExecWait DoNormalHit 
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00340017 
	      SetConst  *Var[2]  00340018 
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00340017 
	      SetConst  *Var[2]  00340018 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00340018 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:ShockHit
	      Call     80269470 ( )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00340015 
	      ExecWait DoShockHit 
	      Call     UseCamPreset 	( 00000002 )
	      ExecWait $Script_8021C6C0 
	   Case  ==  .Event:ShockDeath
	      Call     80269470 ( )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00340015 
	      ExecWait DoShockHit 
	      Thread
	         Wait     0000001E 
	         Call     UseCamPreset 	( 00000002 )
	      EndThread
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00340015 
	      ExecWait DoDeath 
	      Return
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	   CaseOR  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00340002 
	      ExecWait DoImmune 
	   EndCaseGroup
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00340015 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00340015 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00340002 
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00340002 
	      SetConst  *Var[2]  00340015 
	      ExecWait DoScareAway 
	      Return
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00340002 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00340015 
	      ExecWait DoBlowAway 
	      Return
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021CD04
	Call     8027D32C ( FFFFFF81 )
	Call     GetLastDamage 	( .Actor:Self *Var[0] )
	If  *Var[0]  <=  00000000 
	   Return
	EndIf
	Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
	Call     SetAnimation 	( .Actor:Self 00000001 00340002 )
	Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub  *Var[1]  00000018 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
	If  *Var[A]  ==  FFFFFFFF 
	   Call     SetHomePos  	( .Actor:Self *Var[0] 0000002D *Var[2] )
	   Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
	   Call     SetGoalToHome 	( .Actor:Self )
	   Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000000 00000000 )
	   Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
	Else
	   Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
	   Call     SetGoalToPos 	( .Actor:Self *Var[0] 0000002D *Var[2] )
	   Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000000 00000000 )
	   Call     GetIndexFromPos 	( .Actor:Self *Var[A] )
	   Mod  *Var[A]  00000004 
	   Add  *Var[A]  00000004 
	   Call     SetGoalToIndex ( .Actor:Self *Var[A] )
	   Call     GetGoalPos  	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	   Call     SetHomePos  	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	   Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
	   Call     SetGoalToHome 	( .Actor:Self )
	   Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
	EndIf
	Call     8027D4C8 ( FFFFFF81 00000001 00000000 FFFFFFF6 )
	Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000016 )
	Call     $Function_802180D0 ( FFFFFFF6 00000014 0000000A 00000014 )
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021C600 )
	Call     SetActorFlagBits 	( .Actor:Self 00000200 .True )
	Call     HPBarToHome 	( .Actor:Self )
	Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
	Return
	End

#new:Script $Script_HandleEvent_8021D064
	Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	If  *Var[0]  ==  00000001 
	   ExecWait $Script_8021C880 
	   Return
	EndIf
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   Case  ==  .Event:HitCombo
	      Call     GetBattlePhase ( *Var[0] )
	      If  *Var[0]  ==  .Phase:FirstStrike
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00340015 
	         ExecWait DoNormalHit 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  0034000E 
	         ExecWait DoNormalHit 
	      EndIf
	   Case  ==  .Event:Hit
	      Call     GetBattlePhase ( *Var[0] )
	      If  *Var[0]  ==  .Phase:FirstStrike
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00340015 
	         ExecWait DoNormalHit 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  0034000E 
	         ExecWait DoNormalHit 
	         ExecWait $Script_8021CD04 
	      EndIf
	   Case  ==  .Event:BurnHit
	      Call     GetBattlePhase ( *Var[0] )
	      If  *Var[0]  ==  .Phase:FirstStrike
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00340017 
	         SetConst  *Var[2]  00340018 
	         ExecWait DoBurnHit 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00340011 
	         SetConst  *Var[2]  00340012 
	         ExecWait DoBurnHit 
	         ExecWait $Script_8021CD04 
	      EndIf
	   Case  ==  .Event:BurnDeath
	      Call     GetBattlePhase ( *Var[0] )
	      If  *Var[0]  ==  .Phase:FirstStrike
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00340017 
	         SetConst  *Var[2]  00340018 
	         ExecWait DoBurnHit 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00340018 
	         ExecWait DoDeath 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00340011 
	         SetConst  *Var[2]  00340012 
	         ExecWait DoBurnHit 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00340012 
	         ExecWait DoDeath 
	      EndIf
	      Return
	   Case  ==  .Event:ShockHit
	      Call     80269470 ( )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00340015 
	      ExecWait 8029A76C 
	      Call     UseCamPreset 	( 00000002 )
	      ExecWait $Script_8021C6C0 
	   Case  ==  .Event:ShockDeath
	      Call     80269470 ( )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00340015 
	      ExecWait 8029A76C 
	      Thread
	         Wait     0000001E 
	         Call     UseCamPreset 	( 00000002 )
	      EndThread
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00340015 
	      ExecWait DoDeath 
	      Return
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0034000C 
	      ExecWait DoImmune 
	   EndCaseGroup
	   Case  ==  .Event:Death
	      Call     GetBattlePhase ( *Var[0] )
	      If  *Var[0]  ==  .Phase:FirstStrike
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00340015 
	         ExecWait DoNormalHit 
	         Wait     0000000A 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00340015 
	         ExecWait DoDeath 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  0034000E 
	         ExecWait DoNormalHit 
	         Wait     0000000A 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  0034000E 
	         ExecWait DoDeath 
	      EndIf
	      Return
	   Case  ==  .Event:BeginFirstStrike
	      Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021C600 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00340002 )
	      Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
	      Call     HPBarToCurrent ( .Actor:Self )
	   Case  ==  .Event:EndFirstStrike
	      ExecWait $Script_8021C6C0 
	      Call     HPBarToHome 	( .Actor:Self )
	   Case  ==  .Event:RecoverStatus
	   Case  ==  .Event:ScareAway
	      Call     SetActorFlagBits 	( .Actor:Self 00000200 .True )
	      Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
	      Call     8026BA04 ( FFFFFF81 00000000 FFFFFFE8 00000000 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00340002 
	      SetConst  *Var[2]  00340015 
	      ExecWait DoScareAway 
	      Return
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021D7E4
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     SetAnimation 	( .Actor:Self 00000001 00340002 )
	   Call     SetGoalToTarget 	( .Actor:Self )
	   Call     AddToGoalPos 	( .Actor:Self 00000032 0000000A 00000000 )
	   Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	   Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Else
	   Call     UseCamPreset 	( 0000003F )
	   Call     CamTargetActor ( .Actor:Self )
	   Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	   Call     SetAnimation 	( .Actor:Self 00000001 00340002 )
	   Call     SetGoalToTarget 	( .Actor:Self )
	   Call     AddToGoalPos 	( .Actor:Self 00000032 0000000A 00000000 )
	   Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	   Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFFC .Easing:Linear )
	EndIf
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000002 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Wait     0000000A 
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	      Call     SetAnimation 	( .Actor:Self 00000001 00340006 )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000032 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 00340006 )
	      Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
	      Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[10.0] )
	      Wait     0000000F 
	      Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Call     8027D7F0 ( )
	      Call     UseCamPreset 	( 00000002 )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      ExecWait $Script_8021C6C0 
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	   Case  ==  00000007 
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  &  00002000 
	         Set  *Flag[00]  00000000 
	      Else
	         Set  *Flag[00]  00000001 
	      EndIf
	EndSwitch
	Wait     0000000A 
	Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	Call     SetAnimation 	( .Actor:Self 00000001 00340006 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	Call     SetAnimation 	( .Actor:Self 00000001 00340006 )
	Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000002 00000020 )
	Call     UseCamPreset 	( 00000002 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     AddToGoalPos 	( .Actor:Self 00000032 0000000A 00000000 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	Call     SetAnimation 	( .Actor:Self 00000001 00340002 )
	Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
	Wait     0000000A 
	Call     8027D7F0 ( )
	ExecWait $Script_8021C6C0 
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_8021DED4
	Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	If  *Var[0]  ==  00000001 
	   ExecWait $Script_8021D7E4 
	   Return
	EndIf
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 00340002 )
	Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub  *Var[1]  00000018 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000002 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Wait     0000000A 
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	      Call     SetAnimation 	( .Actor:Self 00000001 00340006 )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     AddToGoalPos 	( .Actor:Self FFFFFFCE 00000000 00000000 )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 00340006 )
	      Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFD8 .Easing:Linear )
	      Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[10.0] )
	      Wait     0000000F 
	      Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Call     8027D7F0 ( )
	      Call     UseCamPreset 	( 00000002 )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      ExecWait $Script_8021C6C0 
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	   Case  ==  00000007 
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  &  00002000 
	         Set  *Flag[00]  00000000 
	      Else
	         Set  *Flag[00]  00000001 
	      EndIf
	EndSwitch
	Wait     0000000A 
	Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	Call     SetAnimation 	( .Actor:Self 00000001 00340006 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	Call     SetAnimation 	( .Actor:Self 00000001 00340006 )
	Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFD8 .Easing:Linear )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000002 00000020 )
	Call     UseCamPreset 	( 00000002 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     AddToGoalPos 	( .Actor:Self 00000032 0000000A 00000000 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	Call     SetAnimation 	( .Actor:Self 00000001 00340002 )
	Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
	Wait     0000000A 
	Call     8027D7F0 ( )
	ExecWait $Script_8021C6C0 
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

PADDING: 8021E4BC to 8021E4C0 (004E8BFC to 004E8C00)
00000000 

#new:DefenseTable $DefenseTable_8021E4C0
.Element:Normal 00000002
.Element:Fire   00000063
.Element:Blast  00000063
.Element:End

#new:DefenseTable $DefenseTable_8021E4DC
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021E4E8
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      90`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   75`
.Status:Shrink     90`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021E594
00800000 01000000 001000FF $IdleAnimations_8021E62C $DefenseTable_8021E4C0 00001000 00000000 01070000 00000000 

#new:Actor $BuzzyBeetle
% stats
[Index]        17b 
[Level]        10`b 
[MaxHP]         3`b 
[Coins]         1`b 
[Flags]       00000800 
[StatusTable] $StatusTable_8021E4E8 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021E594 
[Script]      $Script_Init_8021E6BC 
% move effectiveness
[Escape]       60`b 
[Item]         75`b 
[AirLift]      75`b 
[Hurricane]    75`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         22`b  18`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]   -8`b  16`b % dx dy
[StatusIcon]    8`b  13`b % dx dy

#new:IdleAnimations $IdleAnimations_8021E5E0
.Status:Normal    00330001
.Status:Stone     00330000
.Status:Sleep     00330009
.Status:Poison    00330001
.Status:Stop      00330000
.Status:Static    00330001
.Status:Paralyze  00330000
.Status:Dizzy     0033000A
.Status:Fear      0033000A
.Status:End

#new:IdleAnimations $IdleAnimations_8021E62C
.Status:Normal    0033000F
.Status:Stone     0033000E
.Status:Sleep     00330014
.Status:Poison    0033000F
.Status:Stop      0033000E
.Status:Static    0033000F
.Status:Paralyze  0033000E
.Status:Dizzy     00330015
.Status:Fear      00330015
.Status:End

#new:IdleAnimations $IdleAnimations_8021E678
.Status:Normal    00330002
.Status:Stone     0033001A
.Status:Sleep     0033001B
.Status:Poison    00330002
.Status:Stop      0033001A
.Status:Static    00330002
.Status:Dizzy     0033001C
.Status:Fear      0033001C
.Status:End

#new:Script $Script_Init_8021E6BC
	Call     BindIdle    	( .Actor:Self $Script_Idle_8021E88C )
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	If  *Var[0]  ==  00000001 
	   Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
	   Call     $Function_802181A0 ( FFFFFFF6 00000000 0000000A 00000000 )
	   Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021FF8C )
	   Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021ECD0 )
	   Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .False )
	Else
	   Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
	   Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000010 )
	   Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
	   Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80220A44 )
	   Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021F228 )
	   Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021E5E0 )
	   Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
	   Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .True )
	EndIf
	Call     HPBarToHome 	( .Actor:Self )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_Idle_8021E88C
	Return
	End

#new:Script $Script_8021E89C
	Call     8027D32C ( FFFFFF81 )
	Call     SetActorVar 	( .Actor:Self 00000008 00000002 )
	Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000010 )
	Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
	Call     $Function_802181A0 ( FFFFFFF6 00000014 0000000A 00000014 )
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80220A44 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021F228 )
	Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
	Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021E4DC )
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021E678 )
	Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
	Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000010 .False )
	Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .True )
	Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
	Call     SetAnimation 	( .Actor:Self 00000001 00330008 )
	Call     SetActorAngle 	( .Actor:Self 000000B4 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub  *Var[1]  00000018 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Set  *Var[1]  00000000 
	Call     8026F740 ( FFFFFF81 00000002 00000301 00000000 )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
	Call     GetIndexFromPos 	( .Actor:Self *Var[A] )
	Mod  *Var[A]  00000004 
	Call     SetGoalToIndex ( .Actor:Self *Var[A] )
	Call     GetGoalPos  	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Call     SetHomePos  	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Set  *Var[D]  *Var[A] 
	Set  *Var[E]  *Var[B] 
	Set  *Var[F]  *Var[C] 
	Sub  *Var[D]  *Var[0] 
	Sub  *Var[E]  *Var[1] 
	Sub  *Var[F]  *Var[2] 
	Div  *Var[D]  00000002 
	Div  *Var[E]  00000002 
	Div  *Var[F]  00000002 
	Add  *Var[0]  *Var[D] 
	Add  *Var[1]  *Var[E] 
	Add  *Var[2]  *Var[F] 
	Call     8026F6EC ( FFFFFF81 )
	Call     SetAnimation 	( .Actor:Self 00000001 00330002 )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	Call     HPBarToHome 	( .Actor:Self )
	Return
	End

#new:Script $Script_HandleEvent_8021ECD0
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   Case  ==  .Event:HitCombo
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330013 
	      ExecWait DoNormalHit 
	   Case  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330013 
	      ExecWait DoNormalHit 
	      ExecWait $Script_8021E89C 
	   Case  ==  .Event:FlipTrigger
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330013 
	      ExecWait DoNormalHit 
	      ExecWait $Script_8021E89C 
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330018 
	      SetConst  *Var[2]  00330018 
	      ExecWait DoBurnHit 
	      ExecWait $Script_8021E89C 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330018 
	      SetConst  *Var[2]  00330018 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330018 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:ShockHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330013 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330007 
	      ExecWait 8029BD70 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330004 
	      ExecWait DoReturnHome 
	   Case  ==  .Event:ShockDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330013 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330007 
	      ExecWait DoDeath 
	      Return
	   Case  ==  00000017
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330016 
	      ExecWait DoImmune 
	   Case  ==  .Event:Immune
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330016 
	      ExecWait DoImmune 
	      Wait     00000002 
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  !&  00200000 
	         ExecWait $Script_8021E89C 
	      EndIf
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330013 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330013 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:RecoverStatus
	   Case  ==  .Event:ScareAway
	      Call     SetActorFlagBits 	( .Actor:Self 00000200 .True )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330011 
	      SetConst  *Var[2]  00330013 
	      ExecWait DoScareAway 
	      Return
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021F18C
	Call     GetActorVar 	( .Actor:Self 00000008 *Var[3] )
	If  *Var[3]  ==  00000002 
	   Set  *Var[1]  *Var[2] 
	EndIf
	Return
	End

#new:IntTable $IntTable_8021F1DC
00000007 0000000D 00000011 00000015 00000017 00000018 00000017 00000015 
00000011 0000000D 00000007 00000000 00000004 00000007 00000006 00000004 
00000000 00000002 00000000 

#new:Script $Script_HandleEvent_8021F228
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330007 
	      SetConst  *Var[2]  00330019 
	      ExecWait $Script_8021F18C 
	      ExecWait DoNormalHit 
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	      If  *Var[0]  !=  00000002 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  0033000B 
	         SetConst  *Var[2]  0033000B 
	         ExecWait DoBurnHit 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  0033001D 
	         SetConst  *Var[2]  0033001D 
	         ExecWait DoBurnHit 
	      EndIf
	   Case  ==  .Event:BurnDeath
	      Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	      If  *Var[0]  !=  00000002 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  0033000B 
	         SetConst  *Var[2]  0033000B 
	         ExecWait DoBurnHit 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  0033000B 
	         ExecWait DoDeath 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  0033001D 
	         SetConst  *Var[2]  0033001D 
	         ExecWait DoBurnHit 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  0033001D 
	         ExecWait DoDeath 
	      EndIf
	      Return
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330007 
	      SetConst  *Var[2]  00330019 
	      ExecWait $Script_8021F18C 
	      ExecWait 8029B998 
	   Case  ==  .Event:FlipTrigger
	      Call     SetActorVar 	( .Actor:Self 00000008 00000002 )
	      Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000010 )
	      Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
	      Call     SetActorVar 	( .Actor:Self 00000009 00000001 )
	      Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021E4DC )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021E678 )
	      Call     SetActorFlagBits 	( .Actor:Self 00000400 .True )
	      Call     SetAnimation 	( .Actor:Self 00000001 00330007 )
	      Call     SetActorRotationOffset 	( .Actor:Self 00000000 0000000C 00000000 )
	      Thread
	         Wait     00000001 
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	         Wait     00000001 
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFD3 )
	         Wait     00000001 
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFFA6 )
	         Wait     00000001 
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFF79 )
	         Wait     00000001 
	         Call     SetActorRotation 	( .Actor:Self 00000000 00000000 FFFFFF4C )
	         Wait     00000001 
	      EndThread
	      UseIntBuffer $IntTable_8021F1DC 
	      Loop     00000013 
	         Get1Int  *Var[0] 
	         Call     8026BA04 ( FFFFFF81 00000000 *Var[0] 00000000 )
	         Wait     00000001 
	      EndLoop
	      Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	      Call     SetActorRotationOffset 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00330019 )
	   Case  ==  .Event:ShockHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330007 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330007 
	      ExecWait 8029BD70 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330004 
	      ExecWait DoReturnHome 
	   Case  ==  .Event:ShockDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330007 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330007 
	      ExecWait DoDeath 
	      Return
	   Case  ==  00000017
	      Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	      If  *Var[0]  ==  00000001 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  0033000C 
	         ExecWait DoImmune 
	         Call     SetAnimation 	( .Actor:Self 00000001 00330017 )
	         Wait     00000008 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00330002 
	         ExecWait DoImmune 
	      EndIf
	   Case  ==  .Event:Immune
	      Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	      If  *Var[0]  ==  00000001 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  0033000C 
	         ExecWait DoImmune 
	         Call     SetAnimation 	( .Actor:Self 00000001 0033000D )
	         Wait     00000008 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00330002 
	         ExecWait DoImmune 
	      EndIf
	   Case  ==  .Event:SpikeTaunt
	      Wait     0000000A 
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     GetStatusFlags ( .Actor:Self *Var[3] )
	      If  *Var[3]  &  00080000 
	         Add  *Var[1]  00000009 
	      Else
	         Add  *Var[1]  00000018 
	      EndIf
	      Call     PlayEffect  	( {FX:LensFlare:Rotating} *Var[0] *Var[1] *Var[2] 00000014 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	      Wait     00000014 
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330007 
	      SetConst  *Var[2]  00330019 
	      ExecWait $Script_8021F18C 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330007 
	      SetConst  *Var[2]  00330019 
	      ExecWait $Script_8021F18C 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330007 
	      SetConst  *Var[2]  00330019 
	      ExecWait $Script_8021F18C 
	      ExecWait 8029B998 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330007 
	      SetConst  *Var[2]  00330019 
	      ExecWait $Script_8021F18C 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:RecoverStatus
	      Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	      If  *Var[0]  ==  00000001 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00330001 
	         ExecWait DoRecover 
	      EndIf
	   Case  ==  .Event:ScareAway
	      Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	      If  *Var[0]  ==  00000001 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00330004 
	         SetConst  *Var[2]  00330007 
	         ExecWait DoScareAway 
	         Return
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00330002 
	         ExecWait DoImmune 
	      EndIf
	   Case  ==  .Event:BeginAirLift
	      Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	      If  *Var[0]  ==  00000001 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00330004 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00330002 
	      EndIf
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	      If  *Var[0]  ==  00000001 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00330007 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00330008 
	      EndIf
	      ExecWait DoBlowAway 
	      Return
	   Case  ==  .Event:AirLiftFailed
	      Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	      If  *Var[0]  ==  00000001 
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  0033000C 
	         ExecWait DoImmune 
	         Call     SetAnimation 	( .Actor:Self 00000001 0033000D )
	         Wait     00000008 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  00330002 
	         ExecWait DoImmune 
	      EndIf
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_8021FF8C
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
	Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000010 )
	Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
	Call     $Function_802181A0 ( FFFFFFF6 00000014 0000000A 00000014 )
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80220A44 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021F228 )
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021E5E0 )
	Call     SetActorFlagBits 	( .Actor:Self 00000800 .False )
	Call     SetSpriteEventBits 	( .Actor:Self 00000001 00001000 .True )
	Call     GetIndexFromPos 	( .Actor:Self *Var[0] )
	Mod  *Var[0]  00000004 
	Call     SetGoalToIndex ( .Actor:Self *Var[0] )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetHomePos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     HPBarToHome 	( .Actor:Self )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     SetGoalToTarget 	( .Actor:Self )
	   Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	   Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     SetActorPos 	( .Actor:Self *Var[0] *Var[4] *Var[2] )
	   Call     SetAnimation 	( .Actor:Self 00000001 0033000E )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000001 00330011 )
	   Call     SetGoalToTarget 	( .Actor:Self )
	   Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	   Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[4] *Var[2] )
	   Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	   Call     RunToGoal   	( .Actor:Self 00000000 .False )
	   Call     SetAnimation 	( .Actor:Self 00000001 0033000E )
	   Wait     00000008 
	EndIf
	Call     8026F740 ( FFFFFF81 00000002 00000301 00000000 )
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     UseCamPreset 	( 00000005 )
	   Call     SetCamZoom  	( 000001AE )
	   Call     SetCamOffsetZ 	( 00000014 )
	   Call     MoveCamOver 	( 0000000A )
	   Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	EndIf
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000003 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      Call     8026B438 ( FFFFFF81 00000001 000000B4 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00330008 )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[1]  00000018 
	      Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Set  *Var[1]  00000000 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Call     8026F6EC ( FFFFFF81 )
	      Add  *Var[0]  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
	      Thread
	         Wait     00000005 
	         Call     SetAnimation 	( .Actor:Self 00000001 00330000 )
	      EndThread
	      Add  *Var[0]  00000014 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	      Wait     00000008 
	      Call     UseCamPreset 	( 00000002 )
	      Call     8027D7F0 ( )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 00330004 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Call     SetAnimation 	( .Actor:Self 00000001 00330001 )
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetActorAngle 	( .Actor:Self 000000B4 )
	Call     SetAnimation 	( .Actor:Self 00000001 00330008 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub  *Var[1]  00000018 
	Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Set  *Var[1]  *Var[4] 
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
	Call     8026F6EC ( FFFFFF81 )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000003 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[0]  0000001E 
	      Set  *Var[1]  00000000 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
	      Thread
	         Wait     00000005 
	         Call     SetAnimation 	( .Actor:Self 00000001 00330000 )
	      EndThread
	      Add  *Var[0]  00000014 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	      Wait     00000008 
	      Call     8027D7F0 ( )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330004 
	      ExecWait DoReturnHome 
	      Call     SetAnimation 	( .Actor:Self 00000001 00330001 )
	   EndCaseGroup
	EndSwitch
	Label    0000000A 
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_80220A44
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	If  *Var[0]  ==  00000002 
	   Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
	   Sub  *Var[0]  00000001 
	   If  *Var[0]  >  00000000 
	      Call     SetActorVar 	( .Actor:Self 00000009 *Var[0] )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Wait     0000001E 
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     UseCamPreset 	( 00000002 )
	   Else
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Wait     00000014 
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330002 
	      SetConst  *Var[2]  00330001 
	      ExecWait 8029BBB4 
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
	      Call     SetTargetOffset 	( .Actor:Self 00000001 00000000 00000010 )
	      Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
	      Call     SetDefenseTable 	( .Actor:Self 00000001 $DefenseTable_8021E4C0 )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8021E5E0 )
	      Call     BindIdle    	( .Actor:Self $Script_Idle_8021E88C )
	      Call     SetActorFlagBits 	( .Actor:Self 00000400 .False )
	   EndIf
	   Call     EnableIdleScript 	( .Actor:Self 00000001 )
	   Call     UseIdleAnimation 	( .Actor:Self .True )
	   Return
	EndIf
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 0033000C )
	Wait     0000000A 
	Call     SetAnimation 	( .Actor:Self 00000001 00330006 )
	Thread
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
	   Wait     0000000A 
	   Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
	   Wait     00000005 
	   Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[0] *Var[1] *Var[2] 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
	EndThread
	Call     PlaySoundAtActor 	( .Actor:Self 00002021 )
	Call     SetAnimation 	( .Actor:Self 00000001 00330005 )
	Wait     00000014 
	Call     8026F740 ( FFFFFF81 00000000 00000000 00000000 )
	Call     PlaySoundAtActor 	( .Actor:Self 000020D3 )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000002 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Thread
	         Loop     
	            Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Add  *Var[0]  0000001E 
	            Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	            If  *Var[0]  >  *Var[3] 
	               BreakLoop
	            EndIf
	            Wait     00000001 
	         EndLoop
	         Call     UseCamPreset 	( 00000001 )
	         If  *Var[A]  ==  00000005 
	            Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	         EndIf
	         Wait     0000000F 
	         Call     UseCamPreset 	( 00000002 )
	      EndThread
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     AddToGoalPos 	( .Actor:Self FFFFFF6A 00000000 00000000 )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[14.0] )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Wait     0000000F 
	      Call     8027D7F0 ( )
	      Call     8026F6EC ( FFFFFF81 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[0]  000000C8 
	      Call     SetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Wait     0000000A 
	      Call     SetAnimation 	( .Actor:Self 00000001 0033000D )
	      Wait     0000000A 
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[14.0] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 0000FFFF 00000000 00000002 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[0]  00000028 
	      Set  *Var[1]  00000000 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	      Add  *Var[0]  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	      Add  *Var[0]  00000014 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00330001 )
	      Wait     00000008 
	      Call     8027D7F0 ( )
	      Call     8026F6EC ( FFFFFF81 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00330004 
	      ExecWait DoReturnHome 
	      Call     SetAnimation 	( .Actor:Self 00000001 00330001 )
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

PADDING: 8022144C to 80221450 (004EBB8C to 004EBB90)
00000000 

#new:IdleAnimations $IdleAnimations_80221450
.Status:Normal    00350001
.Status:Stone     00350000
.Status:Sleep     0035000A
.Status:Poison    00350001
.Status:Stop      00350000
.Status:Static    00350001
.Status:Dizzy     0035000B
.Status:End

#new:IdleAnimations $IdleAnimations_8022148C
.Status:Normal    00350003
.Status:Poison    00350003
.Status:Stop      00350000
.Status:Stone     00350000
.Status:Sleep     0035000A
.Status:Static    00350003
.Status:Dizzy     0035000B
.Status:End

#new:IdleAnimations $IdleAnimations_802214C8
.Status:Normal    00350004
.Status:Poison    00350004
.Status:Stop      00350000
.Status:Stone     00350000
.Status:Sleep     0035000A
.Status:Static    00350004
.Status:Dizzy     0035000B
.Status:End

#new:IdleAnimations $IdleAnimations_80221504
.Status:Normal    00350005
.Status:Poison    00350005
.Status:Stop      00350000
.Status:Stone     00350000
.Status:Sleep     0035000A
.Status:Static    00350005
.Status:Dizzy     0035000B
.Status:End

#new:IdleAnimations $IdleAnimations_80221540
.Status:Normal    00350002
.Status:End

#new:DefenseTable $DefenseTable_8022154C
.Element:Normal 00000001
.Element:End

#new:StatusTable $StatusTable_80221558
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   50`
.Status:Shrink     75`
.Status:Stop       75`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod      -1`
.Status:End

#new:SpriteTable $SpriteTable_80221604
00020000 01000000 001800FF $IdleAnimations_80221450 $DefenseTable_8022154C 00000000 00000000 00000000 00000000 
00900001 02000000 F32800FF $IdleAnimations_80221450 $DefenseTable_8022154C 00000000 00000000 00F20000 00000000 
00124002 03000000 000C00FF $IdleAnimations_80221540 $DefenseTable_8022154C 00000000 00000000 00000000 00000000 
00124002 04000000 000C00FF $IdleAnimations_80221540 $DefenseTable_8022154C 00000000 00000000 00000000 00000000 
00124002 05000000 000C00FF $IdleAnimations_80221540 $DefenseTable_8022154C 00000000 00000000 00000000 00000000 
00124002 06000000 000C00FF $IdleAnimations_80221540 $DefenseTable_8022154C 00000000 00000000 00000000 00000000 
00124002 07000000 000C00FF $IdleAnimations_80221540 $DefenseTable_8022154C 00000000 00000000 00000000 00000000 
00124002 08000000 000C00FF $IdleAnimations_80221540 $DefenseTable_8022154C 00000000 00000000 00000000 00000000 
00124002 09000000 000C00FF $IdleAnimations_80221540 $DefenseTable_8022154C 00000000 00000000 00000000 00000000 
00124002 0A000000 000C00FF $IdleAnimations_80221540 $DefenseTable_8022154C 00000000 00000000 00000000 00000000 

#new:Actor $StoneChomp
% stats
[Index]        18b 
[Level]        14`b 
[MaxHP]         4`b 
[Coins]         5`b 
[Flags]       00000000 
[StatusTable] $StatusTable_80221558 
% ai
[SpriteCount]  10`s 
[SpriteTable] $SpriteTable_80221604 
[Script]      $Script_Init_80221ABC 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]      25`b 
[Hurricane]    25`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  85`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         56`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Script $Script_80221794
	Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
	Call     SetGoalToHome 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[2.0] )
	ExecWait $Script_8022181C 
	Return
	End

#new:Script $Script_8022181C
	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Label    00000000 
	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	If  *Var[3]  ==  *Var[0] 
	   Goto     0000000A 
	EndIf
	If  *Var[3]  <  *Var[0] 
	   Set  *Var[4]  *Var[0] 
	   Sub  *Var[4]  *Var[3] 
	   If  *Var[4]  <  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 000003F9 )
	   Else
	      Set  *Var[4]  *Var[3] 
	      Add  *Var[3]  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[3] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000000 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 000003F9 )
	   EndIf
	Else
	   Set  *Var[4]  *Var[3] 
	   Sub  *Var[4]  *Var[0] 
	   If  *Var[4]  <  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 000003F9 )
	   Else
	      Sub  *Var[3]  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[3] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000000 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 000003F9 )
	   EndIf
	EndIf
	Goto     00000000 
	Label    0000000A 
	Return
	End

#new:Script $Script_Init_80221ABC
	Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80222ED0 )
	Call     BindIdle    	( .Actor:Self $Script_Idle_80221D00 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80222364 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
	Set  *Var[0]  00000003 
	Loop     00000008 
	   Call     8027D970 ( FFFFFF81 *Var[0] 00000010 00000010 )
	   Add  *Var[0]  00000001 
	EndLoop
	Call     $Function_80218270 ( )
	Exec     $Script_80222324 
	Return
	End

#new:Script $Script_80221BC4
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  &  0035D000 
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
	   Call     SetTargetOffset 	( .Actor:Self 00000002 00000000 00000018 )
	   Call     8027D4C8 ( FFFFFF81 00000002 00000000 00000000 )
	Else
	   Call     80269F2C ( FFFFFF81 )
	   Call     8026A8EC ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	   Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
	   Call     SetTargetOffset 	( .Actor:Self 00000002 FFFFFFF3 00000028 )
	   Call     8027D4C8 ( FFFFFF81 00000002 00000000 FFFFFFF2 )
	EndIf
	Return
	End

#new:Script $Script_Idle_80221D00
	Label    00000000 
	Loop     
	   ExecWait $Script_80221BC4 
	   Call     GetStatusFlags ( .Actor:Self *Var[0] )
	   If  *Var[0]  !&  0035D000 
	      BreakLoop
	   EndIf
	   Wait     00000001 
	EndLoop
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80221504 )
	Call     8026B5D8 ( FFFFFF81 *Fixed[1.0] )
	Call     80269F2C ( FFFFFF81 )
	Call     8026A8EC ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  0000000A 
	Call     8026B5D8 ( FFFFFF81 *Fixed[0.80078125] )
	Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	Call     8027910C ( FFFFFF81 0000000B 00000001 )
	Loop     
	   ExecWait $Script_80221BC4 
	   Call     GetStatusFlags ( .Actor:Self *Var[0] )
	   If  *Var[0]  !&  0035D000 
	      BreakLoop
	   EndIf
	   Wait     00000001 
	EndLoop
	Call     8026B5D8 ( FFFFFF81 *Fixed[1.0] )
	Call     80269F2C ( FFFFFF81 )
	Call     8026A8EC ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	Call     8027910C ( FFFFFF81 00000006 00000001 )
	Call     RandInt     	( 0000000A *Var[0] )
	Add  *Var[0]  00000001 
	Wait     *Var[0] 
	Loop     
	   ExecWait $Script_80221BC4 
	   Call     GetStatusFlags ( .Actor:Self *Var[0] )
	   If  *Var[0]  !&  0035D000 
	      BreakLoop
	   EndIf
	   Wait     00000001 
	EndLoop
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802214C8 )
	Call     8026B5D8 ( FFFFFF81 *Fixed[0.80078125] )
	Call     80269F2C ( FFFFFF81 )
	Call     8026A8EC ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	Call     8027910C ( FFFFFF81 0000000F 00000001 )
	Loop     
	   ExecWait $Script_80221BC4 
	   Call     GetStatusFlags ( .Actor:Self *Var[0] )
	   If  *Var[0]  !&  0035D000 
	      BreakLoop
	   EndIf
	   Wait     00000001 
	EndLoop
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80221504 )
	Call     8026B5D8 ( FFFFFF81 *Fixed[0.80078125] )
	Call     80269F2C ( FFFFFF81 )
	Call     8026A8EC ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	Sub  *Var[0]  00000014 
	Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	Call     8027910C ( FFFFFF81 0000000C 00000001 )
	Loop     
	   ExecWait $Script_80221BC4 
	   Call     GetStatusFlags ( .Actor:Self *Var[0] )
	   If  *Var[0]  !&  0035D000 
	      BreakLoop
	   EndIf
	   Wait     00000001 
	EndLoop
	Call     8026B5D8 ( FFFFFF81 *Fixed[0.80078125] )
	Call     80269F2C ( FFFFFF81 )
	Call     8026A8EC ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	Sub  *Var[0]  0000000A 
	Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	Call     8027910C ( FFFFFF81 00000009 00000001 )
	Loop     
	   ExecWait $Script_80221BC4 
	   Call     GetStatusFlags ( .Actor:Self *Var[0] )
	   If  *Var[0]  !&  0035D000 
	      BreakLoop
	   EndIf
	   Wait     00000001 
	EndLoop
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022148C )
	Call     8026B5D8 ( FFFFFF81 *Fixed[0.80078125] )
	Call     80269F2C ( FFFFFF81 )
	Call     8026A8EC ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	Call     8026A62C ( FFFFFF81 *Var[0] *Var[1] *Var[2] )
	Call     8027910C ( FFFFFF81 00000006 00000001 )
	Call     RandInt     	( 0000000A *Var[0] )
	Add  *Var[0]  0000000A 
	Wait     *Var[0] 
	Goto     00000000 
	Return
	End

#new:Script $Script_80222324
	Label    00000000 
	Wait     00000001 
	Call     $Function_802184CC ( )
	Goto     00000000 
	Return
	End

#new:Script $Script_HandleEvent_80222364
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00350006 
	      ExecWait DoNormalHit 
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      Call     SetAnimation 	( .Actor:Self 00000003 00350009 )
	      Call     SetAnimation 	( .Actor:Self 00000004 00350009 )
	      Call     SetAnimation 	( .Actor:Self 00000005 00350009 )
	      Call     SetAnimation 	( .Actor:Self 00000006 00350009 )
	      Call     SetAnimation 	( .Actor:Self 00000007 00350009 )
	      Call     SetAnimation 	( .Actor:Self 00000008 00350009 )
	      Call     SetAnimation 	( .Actor:Self 00000009 00350009 )
	      Call     SetAnimation 	( .Actor:Self 0000000A 00350009 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00350007 
	      SetConst  *Var[2]  00350008 
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      Call     SetAnimation 	( .Actor:Self 00000003 00350009 )
	      Call     SetAnimation 	( .Actor:Self 00000004 00350009 )
	      Call     SetAnimation 	( .Actor:Self 00000005 00350009 )
	      Call     SetAnimation 	( .Actor:Self 00000006 00350009 )
	      Call     SetAnimation 	( .Actor:Self 00000007 00350009 )
	      Call     SetAnimation 	( .Actor:Self 00000008 00350009 )
	      Call     SetAnimation 	( .Actor:Self 00000009 00350009 )
	      Call     SetAnimation 	( .Actor:Self 0000000A 00350009 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00350007 
	      SetConst  *Var[2]  00350008 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00350008 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00350006 
	      ExecWait 8029B998 
	      Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   Case  ==  .Event:ShockHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00350006 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00350006 
	      Call     UseCamPreset 	( 00000002 )
	      Call     SetAnimation 	( .Actor:Self *Var[0] *Var[1] )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Set  *Var[1]  00000000 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.4003906] )
	      Call     AddToGoalPos 	( .Actor:Self 0000001E 00000000 00000000 )
	      Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 000003F9 )
	      Call     AddToGoalPos 	( .Actor:Self 0000000F 00000000 00000000 )
	      Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 000003F9 )
	      Call     AddToGoalPos 	( .Actor:Self 00000005 00000000 00000000 )
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 000003F9 )
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 000003F9 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00350005 
	      ExecWait $Script_80221794 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 000003F9 )
	      Thread
	         Call     ShakeCam    	( 00000001 00000000 00000001 *Fixed[0.5] )
	      EndThread
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
	      Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00350001 
	      ExecWait DoImmune 
	   EndCaseGroup
	   Case  ==  .Event:ShockDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00350006 
	      ExecWait DoShockHit 
	      Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00350006 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00350006 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00350006 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00350006 
	      ExecWait 8029B998 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00350006 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00350001 
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00350001 
	      SetConst  *Var[2]  00350006 
	      ExecWait DoScareAway 
	      Return
	   Case  ==  .Event:BeginAirLift
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  !&  0035D000 
	         Call     SetGoalToHome 	( .Actor:Self )
	         Call     GetGoalPos  	( .Actor:Self *Var[1] *Var[2] *Var[3] )
	         If  *Var[0]  &  00080000 
	            Sub  *Var[1]  0000000A 
	            Add  *Var[2]  00000004 
	         Else
	            Sub  *Var[1]  00000005 
	            Add  *Var[2]  0000000B 
	         EndIf
	         Call     SetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
	      EndIf
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00350006 
	      ExecWait DoAirLift 
	      Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   Case  ==  .Event:BlowAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00350006 
	      ExecWait DoBlowAway 
	      Return
	   Case  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00350001 
	      ExecWait DoImmune 
	      Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
	   Case  ==  .Event:UpAndAway
	      Wait     000003E8 
	   Default
	EndSwitch
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  &  00151000 
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   If  *Var[1]  !=  00000000 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] 00000000 *Var[2] )
	      Call     80279BEC ( FFFFFF81 0000000B )
	   EndIf
	EndIf
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_80222ED0
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     SetActorVar 	( .Actor:Self 00000008 00000001 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Set  *Var[1]  00000000 
	Add  *Var[0]  0000002D 
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
	Call     PlaySoundAtActor 	( .Actor:Self 000003F9 )
	Call     SetAnimation 	( .Actor:Self 00000001 00350005 )
	Wait     0000000F 
	Call     PlaySoundAtActor 	( .Actor:Self 0000010F )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     SetAnimation 	( .Actor:Self 00000001 00350001 )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000014 
	      Set  *Var[1]  00000000 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 000003F9 )
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000019 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 000003F9 )
	      Sub  *Var[0]  0000000F 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 000003F9 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00350004 )
	      Wait     00000014 
	      Call     UseCamPreset 	( 00000002 )
	      Call     8027D7F0 ( )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 00350004 )
	      ExecWait $Script_8022181C 
	      Call     SetAnimation 	( .Actor:Self 00000001 00350001 )
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Call     HPBarToHome 	( .Actor:Self )
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetAnimation 	( .Actor:Self 00000001 00350001 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetStatusFlags ( .Actor:Self *Var[A] )
	If  *Var[A]  &  00080000 
	   Add  *Var[0]  00000004 
	Else
	   Add  *Var[0]  0000000A 
	EndIf
	Set  *Var[1]  0000001B 
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.20019531] )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000003 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00350004 )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[0]  00000028 
	      Set  *Var[1]  00000000 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 000003F9 )
	      Add  *Var[0]  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 000003F9 )
	      Add  *Var[0]  00000014 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 000003F9 )
	      Sub  *Var[0]  0000000A 
	      Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 000003F9 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00350001 )
	      Wait     00000008 
	      Call     8027D7F0 ( )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 00350004 )
	      ExecWait $Script_8022181C 
	      Call     SetAnimation 	( .Actor:Self 00000001 00350001 )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	   EndCaseGroup
	EndSwitch
	Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
	Call     HPBarToHome 	( .Actor:Self )
	Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_BeforeBattle_802238B0
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Return
	End

#new:Script $Script_AfterBattle_802238EC
	Return
	End

#new:Stage $Stage_802238FC
$ASCII_80224940  % isk_tex
$ASCII_80224930  % isk_bt00_shape
00000000 
$Script_BeforeBattle_802238B0 
$Script_AfterBattle_802238EC 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 80223924 to 80223930 (004EE064 to 004EE070)
00000000 00000000 00000000 

#new:Script $Script_BeforeBattle_80223930
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Return
	End

#new:Script $Script_AfterBattle_8022396C
	Return
	End

#new:Stage $Stage_8022397C
$ASCII_80224968  % isk_tex
$ASCII_80224958  % isk_bt01_shape
$ASCII_80224948  % isk_bt01_hit
$Script_BeforeBattle_80223930 
$Script_AfterBattle_8022396C 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 802239A4 to 802239B0 (004EE0E4 to 004EE0F0)
00000000 00000000 00000000 

#new:Script $Script_BeforeBattle_802239B0
	Call     SetSpriteShading 	( 000C0000 )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Return
	End

#new:Script $Script_AfterBattle_802239EC
	Return
	End

#new:ForegroundModelList $ForegroundModelList_802239FC
0000001F 0000001E 00000021 00000000 

#new:Stage $Stage_80223A0C
$ASCII_80224990  % isk_tex
$ASCII_80224980  % isk_bt02_shape
$ASCII_80224970  % isk_bt02_hit
$Script_BeforeBattle_802239B0 
$Script_AfterBattle_802239EC 
00000000 
$ForegroundModelList_802239FC 
00000000 
00000000 
00000000 

PADDING: 80223A34 to 80223A40 (004EE174 to 004EE180)
00000000 00000000 00000000 

#new:Script $Script_BeforeBattle_80223A40
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Return
	End

#new:Script $Script_AfterBattle_80223A7C
	Return
	End

#new:Stage $Stage_80223A8C
$ASCII_802249C0  % isk_tex
$ASCII_802249B0  % isk_bt03_shape
$ASCII_802249A0  % isk_bt03_hit
$Script_BeforeBattle_80223A40 
$Script_AfterBattle_80223A7C 
$ASCII_80224998  % sbk3_bg
00000000 
00000000 
00000000 
00000000 

PADDING: 80223AB4 to 80223AC0 (004EE1F4 to 004EE200)
00000000 00000000 00000000 

#new:Script $Script_BeforeBattle_80223AC0
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Call     $Function_802188B0 ( )
	Return
	End

#new:Script $Script_AfterBattle_80223B08
	Call     $Function_80218944 ( )
	Return
	End

#new:ForegroundModelList $ForegroundModelList_80223B24
00000033 00000034 00000000 

#new:Stage $Stage_80223B30
$ASCII_802249E8  % isk_tex
$ASCII_802249D8  % isk_bt04_shape
$ASCII_802249C8  % isk_bt04_hit
$Script_BeforeBattle_80223AC0 
$Script_AfterBattle_80223B08 
00000000 
$ForegroundModelList_80223B24 
00000000 
00000000 
00000000 

PADDING: 80223B58 to 80223B60 (004EE298 to 004EE2A0)
00000000 00000000 

#new:Script $Script_BeforeBattle_80223B60
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Call     $Function_80218980 ( )
	Return
	End

#new:Script $Script_AfterBattle_80223BA8
	Call     $Function_80218A10 ( )
	Return
	End

#new:Stage $Stage_80223BC4
$ASCII_80224A10  % isk_tex
$ASCII_80224A00  % isk_bt05_shape
$ASCII_802249F0  % isk_bt05_hit
$Script_BeforeBattle_80223B60 
$Script_AfterBattle_80223BA8 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 80223BEC to 80223BF0 (004EE32C to 004EE330)
00000000 

#new:Script $Script_BeforeBattle_80223BF0
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Call     $Function_80218A50 ( )
	Return
	End

#new:Script $Script_AfterBattle_80223C38
	Call     $Function_80218A98 ( )
	Return
	End

#new:Stage $Stage_80223C54
$ASCII_80224A38  % isk_tex
$ASCII_80224A28  % isk_bt06_shape
$ASCII_80224A18  % isk_bt06_hit
$Script_BeforeBattle_80223BF0 
$Script_AfterBattle_80223C38 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 80223C7C to 80223C80 (004EE3BC to 004EE3C0)
00000000 

#new:Script $Script_BeforeBattle_80223C80
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Call     $Function_80218AC0 ( )
	Return
	End

#new:Script $Script_AfterBattle_80223CC8
	Call     $Function_80218B08 ( )
	Return
	End

#new:Stage $Stage_80223CE4
$ASCII_80224A60  % isk_tex
$ASCII_80224A50  % isk_bt07_shape
$ASCII_80224A40  % isk_bt07_hit
$Script_BeforeBattle_80223C80 
$Script_AfterBattle_80223CC8 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 80223D0C to 80223D10 (004EE44C to 004EE450)
00000000 

#new:Script $Script_BeforeBattle_80223D10
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Return
	End

#new:Script $Script_AfterBattle_80223D4C
	Return
	End

#new:Stage $Stage_80223D5C
$ASCII_80224A88  % isk_tex
$ASCII_80224A78  % isk_bt03_shape
$ASCII_80224A68  % isk_bt03_hit
$Script_BeforeBattle_80223D10 
$Script_AfterBattle_80223D4C 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 80223D84 to 80223D90 (004EE4C4 to 004EE4D0)
00000000 00000000 00000000 

#new:Script $Script_BeforeBattle_80223D90
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Call     EnableModel 	( 00000007 .False )
	Call     EnableModel 	( 00000008 .False )
	Call     EnableModel 	( 00000009 .False )
	Call     EnableModel 	( 0000000F .False )
	Call     EnableModel 	( 00000010 .False )
	Call     EnableModel 	( 00000011 .False )
	Return
	End

#new:Script $Script_AfterBattle_80223E44
	Return
	End

#new:ForegroundModelList $ForegroundModelList_80223E54
0000001F 0000001E 00000021 00000000 

#new:Stage $Stage_80223E64
$ASCII_80224AB0  % isk_tex
$ASCII_80224AA0  % isk_bt02_shape
$ASCII_80224A90  % isk_bt02_hit
$Script_BeforeBattle_80223D90 
$Script_AfterBattle_80223E44 
00000000 
$ForegroundModelList_80223E54 
00000000 
00000000 
00000000 

PADDING: 80223E8C to 80223E90 (004EE5CC to 004EE5D0)
00000000 

#new:Script $Script_BeforeBattle_80223E90
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Call     EnableModel 	( 0000000E .False )
	Call     EnableModel 	( 0000000B .False )
	Return
	End

#new:Script $Script_AfterBattle_80223EF4
	Return
	End

#new:ForegroundModelList $ForegroundModelList_80223F04
0000001F 0000001E 00000021 00000000 

#new:Stage $Stage_80223F14
$ASCII_80224AD8  % isk_tex
$ASCII_80224AC8  % isk_bt02_shape
$ASCII_80224AB8  % isk_bt02_hit
$Script_BeforeBattle_80223E90 
$Script_AfterBattle_80223EF4 
00000000 
$ForegroundModelList_80223F04 
00000000 
00000000 
00000000 

PADDING: 80223F3C to 80223F40 (004EE67C to 004EE680)
00000000 

#new:Script $Script_BeforeBattle_80223F40
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Call     $Function_80218B30 ( )
	Call     EnableModel 	( 00000017 .False )
	Return
	End

#new:Script $Script_AfterBattle_80223F9C
	Call     $Function_80218B78 ( )
	Return
	End

#new:Stage $Stage_80223FB8
$ASCII_80224B00  % isk_tex
$ASCII_80224AF0  % isk_bt06_shape
$ASCII_80224AE0  % isk_bt06_hit
$Script_BeforeBattle_80223F40 
$Script_AfterBattle_80223F9C 
00000000 
00000000 
00000000 
00000000 
00000000 

#new:Script $Script_BeforeBattle_80223FE0
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Call     $Function_80218BA0 ( )
	Return
	End

#new:Script $Script_AfterBattle_80224028
	Call     $Function_80218BE8 ( )
	Return
	End

#new:Stage $Stage_80224044
$ASCII_80224B28  % isk_tex
$ASCII_80224B18  % isk_bt08_shape
$ASCII_80224B08  % isk_bt08_hit
$Script_BeforeBattle_80223FE0 
$Script_AfterBattle_80224028 
00000000 
00000000 
00000000 
00000000 
00000000 

PADDING: 8022406C to 80224070 (004EE7AC to 004EE7B0)
00000000 

#new:Vector3D $Vector3D_80224070
15` 133` -25`

#new:Vector3D $Vector3D_8022407C
55` 133` -25`

#new:Vector3D $Vector3D_80224088
95` 133` -25`

MISSING: 80224094 to 802240A0 (004EE7D4 to 004EE7E0)
00000087 00000085 FFFFFFE7 

#new:Vector3D $Vector3D_802240A0
15` 112` -25`

#new:Vector3D $Vector3D_802240AC
55` 112` -25`

#new:Vector3D $Vector3D_802240B8
95` 112` -25`

MISSING: 802240C4 to 802240D0 (004EE804 to 004EE810)
00000087 00000070 FFFFFFE7 

#new:Formation $Formation_00
$PokeyMummy 00000001 0000000A 00000000 00000000 00000000 00000000 
$PokeyMummy 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_01
$PokeyMummy 00000000 0000000A 00000000 00000000 00000000 00000000 
$PokeyMummy 00000001 00000009 00000000 00000000 00000000 00000000 
$PokeyMummy 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_02
$PokeyMummy 00000001 00000009 00000000 00000000 00000000 00000000 
$Swooper $Vector3D_80224088 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_03
$PokeyMummy 00000000 0000000A 00000000 00000000 00000000 00000000 
$PokeyMummy 00000001 00000009 00000000 00000000 00000000 00000000 
$Swooper $Vector3D_80224088 00000008 00000000 00000000 00000000 00000000 

#new:Vector3D $Vector3D_802241E8
80` 133` -25`

#new:Vector3D $Vector3D_802241F4
115` 133` -25`

#new:Formation $Formation_04
$PokeyMummy 00000000 0000000A 00000000 00000000 00000000 00000000 
$PokeyMummy 00000001 00000009 00000000 00000000 00000000 00000000 
$Swooper $Vector3D_802241E8 00000008 00000000 00000000 00000000 00000000 
$Swooper $Vector3D_802241F4 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_05
$Swooper $Vector3D_8022407C 0000000A 00000000 00000000 00000000 00000000 
$Swooper $Vector3D_80224088 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_06
$Swooper $Vector3D_80224070 0000000A 00000000 00000000 00000000 00000000 
$Swooper $Vector3D_8022407C 00000009 00000000 00000000 00000000 00000000 
$Swooper $Vector3D_80224088 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_07
$StoneChomp 00000001 0000000A 00000000 00000000 00000000 00000000 
$StoneChomp 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_08
$StoneChomp 00000000 0000000A 00000000 00000000 00000000 00000000 
$StoneChomp 00000001 00000009 00000000 00000000 00000000 00000000 
$StoneChomp 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_09
$BuzzyBeetle 00000001 0000000A 00000000 00000000 00000000 00000000 
$BuzzyBeetle 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0A
$BuzzyBeetle 00000000 0000000A 00000000 00000000 00000000 00000000 
$BuzzyBeetle 00000001 00000009 00000000 00000000 00000000 00000000 
$BuzzyBeetle 00000002 00000008 00000000 00000000 00000000 00000000 
$BuzzyBeetle 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0B
$BuzzyBeetle 00000000 0000000A 00000000 00000000 00000000 00000000 
$BuzzyBeetle $Vector3D_802240AC 00000009 00000001 00000000 00000000 00000000 
$Swooper $Vector3D_802240B8 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0C
$BuzzyBeetle 00000001 0000000A 00000000 00000000 00000000 00000000 
$Swooper $Vector3D_802240B8 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0D
$BuzzyBeetle $Vector3D_802240AC 0000000A 00000001 00000000 00000000 00000000 
$BuzzyBeetle 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_0E
$BuzzyBeetle 00000001 0000000A 00000000 00000000 00000000 00000000 
$BuzzyBeetle $Vector3D_802240B8 00000009 00000001 00000000 00000000 00000000 

#new:Formation $Formation_0F
$BuzzyBeetle $Vector3D_802240AC 0000000A 00000001 00000000 00000000 00000000 
$BuzzyBeetle $Vector3D_802240B8 00000009 00000001 00000000 00000000 00000000 

#new:Formation $Formation_10
$BuzzyBeetle 00000000 0000000A 00000000 00000000 00000000 00000000 
$BuzzyBeetle $Vector3D_802240AC 00000009 00000001 00000000 00000000 00000000 
$BuzzyBeetle $Vector3D_802240B8 00000008 00000001 00000000 00000000 00000000 

#new:Formation $Formation_11
$BuzzyBeetle $Vector3D_802240A0 0000000A 00000001 00000000 00000000 00000000 
$BuzzyBeetle $Vector3D_802240AC 00000009 00000001 00000000 00000000 00000000 
$BuzzyBeetle $Vector3D_802240B8 00000008 00000001 00000000 00000000 00000000 

#new:Vector3D $Vector3D_8022460C
0` 112` -25`

#new:Vector3D $Vector3D_80224618
40` 112` -25`

#new:Vector3D $Vector3D_80224624
80` 112` -25`

#new:Vector3D $Vector3D_80224630
120` 112` -25`

#new:Formation $Formation_12
$BuzzyBeetle $Vector3D_8022460C 0000000A 00000001 00000000 00000000 00000000 
$BuzzyBeetle $Vector3D_80224618 00000009 00000001 00000000 00000000 00000000 
$BuzzyBeetle $Vector3D_80224624 00000008 00000001 00000000 00000000 00000000 
$BuzzyBeetle $Vector3D_80224630 00000007 00000001 00000000 00000000 00000000 

#new:Formation $Formation_13
$BuzzyBeetle $Vector3D_802240A0 0000000A 00000001 00000000 00000000 00000000 
$BuzzyBeetle $Vector3D_802240AC 00000009 00000001 00000000 00000000 00000000 
$Swooper $Vector3D_802240B8 00000008 00000000 00000000 00000000 00000000 

#new:FormationTable $FormationTable
$SJIS_80224CE0 00000002 $Formation_00 $Stage_80223E64 00000000 
$SJIS_80224CD0 00000003 $Formation_01 $Stage_80223E64 00000000 
$SJIS_80224CB8 00000002 $Formation_02 $Stage_80223B30 00000000 
$SJIS_80224C9C 00000003 $Formation_03 $Stage_80223B30 00000000 
$SJIS_80224C80 00000004 $Formation_04 $Stage_80223B30 00000000 % unused
$SJIS_80224C74 00000002 $Formation_05 $Stage_80223B30 00000000 % unused
$SJIS_80224C68 00000003 $Formation_06 $Stage_80223B30 00000000 % unused
$SJIS_80224C54 00000002 $Formation_07 $Stage_80223E64 00000000 
$SJIS_80224C40 00000003 $Formation_08 $Stage_80223E64 00000000 % unused
$SJIS_80224C34 00000002 $Formation_09 $Stage_80223E64 00000000 
$SJIS_80224C28 00000004 $Formation_0A $Stage_80223E64 00000000 
$SJIS_80224C00 00000003 $Formation_0B $Stage_80223BC4 00000000 % unused
$SJIS_80224BF0 00000002 $Formation_0C $Stage_80223BC4 00000000 
$SJIS_80224BD4 00000002 $Formation_0D $Stage_80223BC4 00000000 % unused
$SJIS_80224BB8 00000002 $Formation_0E $Stage_80223BC4 00000000 % unused
$SJIS_80224BA0 00000002 $Formation_0F $Stage_80223BC4 00000000 
$SJIS_80224B80 00000003 $Formation_10 $Stage_80223BC4 00000000 % unused
$SJIS_80224B68 00000003 $Formation_11 $Stage_80223BC4 00000000 % unused
$SJIS_80224B50 00000004 $Formation_12 $Stage_80223BC4 00000000 % unused
$SJIS_80224B30 00000003 $Formation_13 $Stage_80223BC4 00000000 
00000000 00000000 00000000 00000000 00000000 % unused

#new:StageTable $StageTable
$ASCII_80224D50 $Stage_802238FC 
$ASCII_80224D48 $Stage_8022397C 
$ASCII_80224D40 $Stage_80223A0C 
$ASCII_80224D38 $Stage_80223E64 
$ASCII_80224D30 $Stage_80223F14 
$ASCII_80224D28 $Stage_80223A8C 
$ASCII_80224D20 $Stage_80223D5C 
$ASCII_80224D18 $Stage_80223B30 
$ASCII_80224D10 $Stage_80223BC4 
$ASCII_80224D08 $Stage_80223C54 
$ASCII_80224D00 $Stage_80223FB8 
$ASCII_80224CF8 $Stage_80223CE4 
$ASCII_80224CF0 $Stage_80224044 
00000000 00000000 

PADDING: 80224914 to 80224920 (004EF054 to 004EF060)
00000000 00000000 00000000 

#new:ConstDouble $ConstDouble_80224920
0.200000d

PADDING: 80224928 to 80224930 (004EF068 to 004EF070)
00000000 00000000 

#new:ASCII $ASCII_80224930
isk_bt00_shape

#new:ASCII $ASCII_80224940
isk_tex

#new:ASCII $ASCII_80224948
isk_bt01_hit

#new:ASCII $ASCII_80224958
isk_bt01_shape

#new:ASCII $ASCII_80224968
isk_tex

#new:ASCII $ASCII_80224970
isk_bt02_hit

#new:ASCII $ASCII_80224980
isk_bt02_shape

#new:ASCII $ASCII_80224990
isk_tex

#new:ASCII $ASCII_80224998
sbk3_bg

#new:ASCII $ASCII_802249A0
isk_bt03_hit

#new:ASCII $ASCII_802249B0
isk_bt03_shape

#new:ASCII $ASCII_802249C0
isk_tex

#new:ASCII $ASCII_802249C8
isk_bt04_hit

#new:ASCII $ASCII_802249D8
isk_bt04_shape

#new:ASCII $ASCII_802249E8
isk_tex

#new:ASCII $ASCII_802249F0
isk_bt05_hit

#new:ASCII $ASCII_80224A00
isk_bt05_shape

#new:ASCII $ASCII_80224A10
isk_tex

#new:ASCII $ASCII_80224A18
isk_bt06_hit

#new:ASCII $ASCII_80224A28
isk_bt06_shape

#new:ASCII $ASCII_80224A38
isk_tex

#new:ASCII $ASCII_80224A40
isk_bt07_hit

#new:ASCII $ASCII_80224A50
isk_bt07_shape

#new:ASCII $ASCII_80224A60
isk_tex

#new:ASCII $ASCII_80224A68
isk_bt03_hit

#new:ASCII $ASCII_80224A78
isk_bt03_shape

#new:ASCII $ASCII_80224A88
isk_tex

#new:ASCII $ASCII_80224A90
isk_bt02_hit

#new:ASCII $ASCII_80224AA0
isk_bt02_shape

#new:ASCII $ASCII_80224AB0
isk_tex

#new:ASCII $ASCII_80224AB8
isk_bt02_hit

#new:ASCII $ASCII_80224AC8
isk_bt02_shape

#new:ASCII $ASCII_80224AD8
isk_tex

#new:ASCII $ASCII_80224AE0
isk_bt06_hit

#new:ASCII $ASCII_80224AF0
isk_bt06_shape

#new:ASCII $ASCII_80224B00
isk_tex

#new:ASCII $ASCII_80224B08
isk_bt08_hit

#new:ASCII $ASCII_80224B18
isk_bt08_shape

#new:ASCII $ASCII_80224B28
isk_tex

#new:SJIS $SJIS_80224B30
% meto(tenjou)x2,basabasa
83818362 83672882 C482F182 B682E582 A4297882 512C836F 8354836F 83540000 

#new:SJIS $SJIS_80224B50
% meto(tenjou)x4
83818362 83672882 C482F182 B682E582 A4297882 53000000 

#new:SJIS $SJIS_80224B68
% meto(tenjou)x3
83818362 83672882 C482F182 B682E582 A4297882 52000000 

#new:SJIS $SJIS_80224B80
% meto,meto(tenjou)x2
83818362 83672C83 81836283 672882C4 82F182B6 82E582A4 29788251 00000000 

#new:SJIS $SJIS_80224BA0
% meto(tenjou)x2
83818362 83672882 C482F182 B682E582 A4297882 51000000 

#new:SJIS $SJIS_80224BB8
% meto,meto(tenjou)
83818362 83672C83 81836283 672882C4 82F182B6 82E582A4 29000000 

#new:SJIS $SJIS_80224BD4
% meto?tenjou?,meto
83818362 83678169 82C482F1 82B682E5 82A4816A 2C838183 62836700 

#new:SJIS $SJIS_80224BF0
% meto,basabasa
83818362 83672C83 6F835483 6F835400 

#new:SJIS $SJIS_80224C00
% meto,meto?tenjou?,basabasa
83818362 83672C83 81836283 67816982 C482F182 B682E582 A4816A2C 836F8354 
836F8354 00000000 

#new:SJIS $SJIS_80224C28
% metox4
83818362 83677882 53000000 

#new:SJIS $SJIS_80224C34
% metox2
83818362 83677882 51000000 

#new:SJIS $SJIS_80224C40
% suto-nwanwanx3
83588367 815B8393 838F8393 838F8393 78825200 

#new:SJIS $SJIS_80224C54
% suto-nwanwanx2
83588367 815B8393 838F8393 838F8393 78825100 

#new:SJIS $SJIS_80224C68
% basabasax3
836F8354 836F8354 78825200 

#new:SJIS $SJIS_80224C74
% basabasax2
836F8354 836F8354 78825100 

#new:SJIS $SJIS_80224C80
% sanbomami-x2,basabasax2
83548393 837B837D 837E815B 7882512C 836F8354 836F8354 78825100 

#new:SJIS $SJIS_80224C9C
% sanbomami-x2,basabasa
83548393 837B837D 837E815B 7882512C 836F8354 836F8354 00000000 

#new:SJIS $SJIS_80224CB8
% sanbomami-,basabasa
83548393 837B837D 837E815B 2C836F83 54836F83 54000000 

#new:SJIS $SJIS_80224CD0
% sanbomami-x3
83548393 837B837D 837E815B 78825200 

#new:SJIS $SJIS_80224CE0
% sanbomami-x2
83548393 837B837D 837E815B 78825100 

#new:ASCII $ASCII_80224CF0
isk_08

#new:ASCII $ASCII_80224CF8
isk_07

#new:ASCII $ASCII_80224D00
isk_06b

#new:ASCII $ASCII_80224D08
isk_06

#new:ASCII $ASCII_80224D10
isk_05

#new:ASCII $ASCII_80224D18
isk_04

#new:ASCII $ASCII_80224D20
isk_03b

#new:ASCII $ASCII_80224D28
isk_03

#new:ASCII $ASCII_80224D30
isk_02c

#new:ASCII $ASCII_80224D38
isk_02b

#new:ASCII $ASCII_80224D40
isk_02

#new:ASCII $ASCII_80224D48
isk_01

#new:ASCII $ASCII_80224D50
isk_00

PADDING: 80224D58 to 80224D60 (004EF498 to 004EF4A0)
00000000 00000000 

