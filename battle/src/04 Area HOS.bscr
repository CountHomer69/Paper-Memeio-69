% Script File: 04 Area HOS.bscr
% Decoded from: 47F0B0 to 48D1A0 (04 Area HOS)

#new:Function $Function_80218000
	ADDIU     V0, R0, 1
	SAB       V0, 8010F2A2
	JR        RA
	ADDIU     V0, R0, 2

PADDING: 80218014 to 80218020 (0047F0C4 to 0047F0D0)
00000000 00000000 00000000 

#new:Function $Function_80218020
	ADDIU     SP, SP, FFD8
	SW        S2, 20 (SP)
	DADDU     S2, A0, R0
	SW        RA, 24 (SP)
	SW        S1, 1C (SP)
	SW        S0, 18 (SP)
	LW        A0, 148 (S2)
	JAL       {Func:GetActor}
	DADDU     S0, A1, R0
	BEQ       S0, R0, .oDC
	DADDU     S1, V0, R0
	LWC1      F2, 18 (S1)
	LWC1      F0, 144 (S1)
	SUB.S     F2, F2, F0
	MUL.S     F2, F2, F2
	NOP
	LWC1      F6, 1C (S1)
	LWC1      F0, 148 (S1)
	SUB.S     F6, F6, F0
	MUL.S     F6, F6, F6
	NOP
	LWC1      F4, 14C (S1)
	LWC1      F0, 20 (S1)
	SUB.S     F0, F0, F4
	MUL.S     F0, F0, F0
	NOP
	ADD.S     F2, F2, F6
	ADD.S     F12, F2, F0
	SQRT.S    F4, F12
	C.EQ.S    F4, F4
	NOP
	BC1T      .o90
	NOP
	JAL       80061EF0
	NOP
	MOV.S     F4, F0
	.o90
	LWC1      F0, 4C (S1)
	LIF       F2, 0.5
	DIV.S     F0, F4, F0
	MUL.S     F0, F0, F2
	NOP
	LIF       F2, 1.0
	NOP
	ADD.S     F0, F0, F2
	TRUNC.W.S F8, F0
	SWC1      F8, 70 (S2)
	LWC1      F0, 14C (S1)
	ADDIU     A0, R0, 359
	SWC1      F0, 10 (SP)
	LW        A2, 144 (S1)
	LW        A3, 148 (S1)
	JAL       80149D5C
	DADDU     A1, R0, R0
	.oDC
	LW        V0, 70 (S2)
	DADDU     V1, V0, R0
	ADDIU     V0, V0, FFFF
	BGTZ      V1, .o114
	SW        V0, 70 (S2)
	LWC1      F0, 14C (S1)
	ADDIU     A0, R0, 759
	SWC1      F0, 10 (SP)
	LW        A2, 144 (S1)
	LW        A3, 148 (S1)
	JAL       80149D5C
	DADDU     A1, R0, R0
	BEQ       R0, R0, .o118
	ADDIU     V0, R0, 2
	.o114
	DADDU     V0, R0, R0
	.o118
	LW        RA, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	JR        RA
	ADDIU     SP, SP, 28

#new:Function $Function_80218150
	ADDIU     SP, SP, FFA0
	SW        S1, 24 (SP)
	DADDU     S1, A0, R0
	SW        RA, 28 (SP)
	SW        S0, 20 (SP)
	SDC1      F30, 58 (SP)
	SDC1      F28, 50 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetFloatVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F30, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F28, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F26, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F24, F0
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	MOV.S     F22, F0
	LW        A0, 148 (S1)
	JAL       {Func:GetActor}
	DADDU     S0, V0, R0
	CVT.D.S   F20, F20
	MFC1      A1, F30
	LIF       F1, 2.3125
	MTC1      R0, F0
	MFC1      A3, F28
	ADD.D     F20, F20, F0
	DADDU     A0, R0, R0
	SW        S0, 1C (SP)
	CVT.S.D   F20, F20
	MFC1      A2, F20
	DADDU     S0, V0, R0
	SWC1      F26, 10 (SP)
	SWC1      F24, 14 (SP)
	JAL       8006FF50
	SWC1      F22, 18 (SP)
	DADDU     A0, V0, R0
	LB        V1, 210 (S0)
	ADDIU     V0, R0, A
	BNE       V1, V0, .o128
	NOP
	LW        V0, C (A0)
	LIO       AT, 3ECCCCCD
	MTC1      AT, F0
	NOP
	SWC1      F0, 28 (V0)
	.o128
	LW        RA, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F30, 58 (SP)
	LDC1      F28, 50 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60

#new:Function $Function_802182A8
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	LAH       A2, 800DC1EC
	JAL       {Func:SetVariable}
	LW        A1, 0 (V0)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18

#new:Function $Function_802182D4
	ADDIU     SP, SP, FFD8
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 20 (SP)
	SW        S3, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S3, V0, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S2, V0, R0
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	LW        A0, 148 (S1)
	JAL       {Func:GetActor}
	DADDU     S1, V0, R0
	DADDU     V1, V0, R0
	LW        V0, 8 (V1)
	LBU       V0, 24 (V0)
	LW        A0, 8 (V1)
	SUBU      S3, S3, V0
	SB        S3, 194 (V1)
	LBU       V0, 25 (A0)
	SUBU      S2, S2, V0
	SB        S2, 195 (V1)
	LBU       V0, 26 (A0)
	SUBU      S0, S0, V0
	SB        S0, 196 (V1)
	LBU       A0, 27 (A0)
	SUBU      S1, S1, A0
	SB        S1, 197 (V1)
	LW        RA, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 28

#new:Function $Function_802183A0
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	DADDU     A0, S0, R0
	JAL       80028F08
	DADDU     A1, V0, R0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20

#new:Function $Function_802183F8
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	DADDU     A0, V0, R0
	ADDIU     V0, R0, FF81
	BNE       A0, V0, .o38
	NOP
	LW        A0, 148 (S1)
	.o38
	JAL       {Func:GetActor}
	NOP
	DADDU     A0, V0, R0
	LBU       V1, 136 (A0)
	ADDIU     V0, R0, 47
	BEQ       V1, V0, .o7C
	SLT       V0, V1, V0
	BNEL      V0, R0, .o9C
	DADDU     A0, S1, R0
	SLTI      V0, V1, 65
	BEQ       V0, R0, .o98
	SLTI      V0, V1, 4D
	BNE       V0, R0, .o9C
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o7C
	LW        V1, A8 (A0)
	ADDIU     V0, R0, 1
	BNE       V1, V0, .o9C
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	BEQ       R0, R0, .oA4
	ADDIU     A2, R0, FFFF
	.o98
	DADDU     A0, S1, R0
	.o9C
	LW        A1, 0 (S0)
	DADDU     A2, R0, R0
	.oA4
	JAL       {Func:SetVariable}
	NOP
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20

PADDING: 802184BC to 802184C0 (0047F56C to 0047F570)
00000000 

% Origin: HEURISTIC
#new:Function $Function_802184C0
	ADDIU     SP, SP, FFC0
	SW        S3, 2C (SP)
	ADDIU     S3, A0, FFFF
	DADDU     A0, S3, R0
	ADDIU     A1, SP, 10
	ADDIU     A2, SP, 14
	ADDIU     A3, SP, 18
	SW        RA, 3C (SP)
	SW        S6, 38 (SP)
	SW        S5, 34 (SP)
	SW        S4, 30 (SP)
	SW        S2, 28 (SP)
	SW        S1, 24 (SP)
	JAL       8011C2B0
	SW        S0, 20 (SP)
	LW        V0, 18 (SP)
	BLEZ      V0, .o188
	DADDU     S0, R0, R0
	LIA       V1, $???_80224BB0
	SLL       V0, S3, 1
	ADDU      S5, V0, V1
	LIO       S4, 55555556
	ORI       S6, R0, 8000
	MULT      S0, S4
	.o68
	SRA       S2, S0, 1F
	MFHI      V1
	SUBU      V1, V1, S2
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      V0, S0, V0
	LHU       V1, 0 (S5)
	ADDIU     V0, V0, 1
	MULT      V1, V0
	SLL       V0, S0, 4
	MFLO      V1
	ADDU      A0, V1, S0
	LW        V1, 14 (SP)
	ANDI      A0, A0, FFFF
	JAL       800645F0
	ADDU      S1, V1, V0
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	ADDU      V0, V0, S6
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SLL       V0, V0, F
	SRA       V0, V0, 10
	SLL       V1, V0, 2
	ADDU      V1, V1, V0
	SLL       V0, V1, 5
	SUBU      V1, V0, V1
	BGEZ      V1, .oE0
	DADDU     V0, V1, R0
	ADDIU     V0, V1, 7FFF
	.oE0
	SRA       V0, V0, F
	ADDIU     V0, V0, 64
	SB        V0, C (S1)
	SUBU      V1, S0, S2
	SRA       A1, V1, 1
	MULT      A1, S4
	SB        V0, D (S1)
	LHU       A0, 0 (S5)
	SRA       V1, V1, 1F
	SRL       A2, A0, F
	MFHI      T1
	SUBU      V1, T1, V1
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      A1, A1, V0
	ADDIU     A1, A1, 1
	SLL       A1, A1, F
	MULT      A2, A1
	SRL       A0, A0, E
	SLL       A0, A0, F
	MFLO      V1
	ADDU      A0, V1, A0
	ADDU      A0, A0, S0
	JAL       800645F0
	ANDI      A0, A0, FFFF
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	LBU       V1, C (S1)
	ADDU      V0, V0, S6
	MULT      V1, V0
	MFLO      V1
	BGEZ      V1, .o170
	SRA       V0, V1, 10
	ORI       V0, R0, FFFF
	ADDU      V1, V1, V0
	SRA       V0, V1, 10
	.o170
	SB        V0, E (S1)
	LW        V0, 18 (SP)
	ADDIU     S0, S0, 1
	SLT       V0, S0, V0
	BNE       V0, R0, .o68
	MULT      S0, S4
	.o188
	LIA       V1, 8009A66C
	LW        V0, 0 (V1)
	DADDU     A0, S3, R0
	DADDU     S0, V0, R0
	ADDIU     V0, V0, 8
	SW        V0, 0 (V1)
	LUI       V0, DE00
	JAL       8011C2EC
	SW        V0, 0 (S0)
	SW        V0, 4 (S0)
	LIA       V0, $???_80224BB0
	SLL       V1, S3, 1
	ADDU      V1, V1, V0
	LHU       V0, 0 (V1)
	ADDIU     V0, V0, 253
	SH        V0, 0 (V1)
	LW        RA, 3C (SP)
	LW        S6, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	JR        RA
	ADDIU     SP, SP, 40

% Origin: HEURISTIC
#new:Function $Function_802186B8
	ADDIU     SP, SP, FFB8
	SW        S2, 28 (SP)
	ADDIU     S2, A0, FFFF
	DADDU     A0, S2, R0
	ADDIU     A1, SP, 10
	ADDIU     A2, SP, 14
	SW        RA, 3C (SP)
	SW        S6, 38 (SP)
	SW        S5, 34 (SP)
	SW        S4, 30 (SP)
	SW        S3, 2C (SP)
	SW        S1, 24 (SP)
	SW        S0, 20 (SP)
	SDC1      F20, 40 (SP)
	JAL       8011C2B0
	ADDIU     A3, SP, 18
	LW        V0, 18 (SP)
	BLEZ      V0, .o2A4
	DADDU     S0, R0, R0
	LIA       V1, $???_80224BB0
	SLL       V0, S2, 1
	ADDU      S4, V0, V1
	LIO       S3, 55555556
	ORI       S6, R0, 8000
	LIF       F21, 28.0
	MTC1      R0, F20
	LUI       S5, 8000
	MULT      S0, S3
	.o7C
	SRA       V1, S0, 1F
	MFHI      T1
	SUBU      V1, T1, V1
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      V0, S0, V0
	LHU       V1, 0 (S4)
	ADDIU     V0, V0, 1
	MULT      V1, V0
	LW        V0, 14 (SP)
	MFLO      V1
	ADDU      A0, V1, S0
	ANDI      A0, A0, FFFF
	SLL       V1, S0, 4
	ADDU      V0, V0, V1
	JAL       800645F0
	ADDIU     S1, V0, C
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	ADDU      V0, V0, S6
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SRA       V0, V0, 1
	SLL       V1, V0, 10
	SRA       V1, V1, 10
	SLL       A0, V1, 2
	ADDU      A0, A0, V1
	SLL       V1, A0, 5
	SUBU      V1, V1, A0
	BGEZ      V1, .oFC
	DADDU     A0, V0, R0
	ADDIU     V1, V1, 7FFF
	.oFC
	SRA       V0, V1, F
	LAD       F2, $ConstDouble_80225FB0
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	ADD.D     F0, F0, F2
	C.LE.D    F20, F0
	NOP
	BC1TL     .o138
	SUB.D     F0, F0, F20
	TRUNC.W.D F4, F0
	MFC1      V0, F4
	BEQ       R0, R0, .o14C
	SB        V0, 0 (S1)
	.o138
	TRUNC.W.D F4, F0
	MFC1      V0, F4
	NOP
	OR        V0, V0, S5
	SB        V0, 0 (S1)
	.o14C
	SLL       V0, A0, 10
	SRA       V0, V0, 10
	SLL       V1, V0, 2
	ADDU      V1, V1, V0
	SLL       V0, V1, 5
	SUBU      V0, V0, V1
	BGEZ      V0, .o170
	ADDIU     V1, S1, 1
	ADDIU     V0, V0, 7FFF
	.o170
	SRA       V0, V0, F
	LAD       F2, $ConstDouble_80225FB8
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	ADD.D     F0, F0, F2
	C.LE.D    F20, F0
	NOP
	BC1TL     .o1AC
	SUB.D     F0, F0, F20
	TRUNC.W.D F4, F0
	MFC1      V0, F4
	BEQ       R0, R0, .o1C0
	SB        V0, 0 (V1)
	.o1AC
	TRUNC.W.D F4, F0
	MFC1      V0, F4
	NOP
	OR        V0, V0, S5
	SB        V0, 0 (V1)
	.o1C0
	SRL       V1, S0, 1F
	ADDU      V1, S0, V1
	SRA       A1, V1, 1
	MULT      A1, S3
	LHU       A0, 0 (S4)
	SRA       V1, V1, 1F
	SRL       A2, A0, F
	MFHI      T1
	SUBU      V1, T1, V1
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      A1, A1, V0
	ADDIU     A1, A1, 1
	SLL       A1, A1, F
	MULT      A2, A1
	SRL       A0, A0, E
	SLL       A0, A0, F
	MFLO      V1
	ADDU      A0, V1, A0
	ADDU      A0, A0, S0
	JAL       800645F0
	ANDI      A0, A0, FFFF
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	LBU       V1, 0 (S1)
	ADDU      V0, V0, S6
	MULT      V1, V0
	MFLO      V1
	BGEZ      V1, .o240
	ADDIU     A0, S1, 2
	ORI       V0, R0, FFFF
	ADDU      V1, V1, V0
	.o240
	SRA       V0, V1, 10
	LAD       F2, $ConstDouble_80225FC0
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	ADD.D     F0, F0, F2
	C.LE.D    F20, F0
	NOP
	BC1TL     .o27C
	SUB.D     F0, F0, F20
	TRUNC.W.D F4, F0
	MFC1      V0, F4
	BEQ       R0, R0, .o290
	SB        V0, 0 (A0)
	.o27C
	TRUNC.W.D F4, F0
	MFC1      V0, F4
	NOP
	OR        V0, V0, S5
	SB        V0, 0 (A0)
	.o290
	LW        V0, 18 (SP)
	ADDIU     S0, S0, 1
	SLT       V0, S0, V0
	BNE       V0, R0, .o7C
	MULT      S0, S3
	.o2A4
	LIA       V1, 8009A66C
	LW        V0, 0 (V1)
	DADDU     A0, S2, R0
	DADDU     S0, V0, R0
	ADDIU     V0, V0, 8
	SW        V0, 0 (V1)
	LUI       V0, DE00
	JAL       8011C2EC
	SW        V0, 0 (S0)
	SW        V0, 4 (S0)
	LIA       V0, $???_80224BB0
	SLL       V1, S2, 1
	ADDU      V1, V1, V0
	LHU       V0, 0 (V1)
	ADDIU     V0, V0, 253
	SH        V0, 0 (V1)
	LW        RA, 3C (SP)
	LW        S6, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F20, 40 (SP)
	JR        RA
	ADDIU     SP, SP, 48

% Origin: HEURISTIC
#new:Function $Function_802189D0
	ADDIU     SP, SP, FFB8
	SW        S2, 28 (SP)
	ADDIU     S2, A0, FFFF
	DADDU     A0, S2, R0
	ADDIU     A1, SP, 10
	ADDIU     A2, SP, 14
	SW        RA, 3C (SP)
	SW        S6, 38 (SP)
	SW        S5, 34 (SP)
	SW        S4, 30 (SP)
	SW        S3, 2C (SP)
	SW        S1, 24 (SP)
	SW        S0, 20 (SP)
	SDC1      F20, 40 (SP)
	JAL       8011C2B0
	ADDIU     A3, SP, 18
	LW        V0, 18 (SP)
	BLEZ      V0, .o2A8
	DADDU     S0, R0, R0
	LIA       V1, $???_80224BB0
	SLL       V0, S2, 1
	ADDU      S4, V0, V1
	LIO       S3, 55555556
	ORI       S6, R0, 8000
	LIF       F21, 28.0
	MTC1      R0, F20
	LUI       S5, 8000
	MULT      S0, S3
	.o7C
	SRA       V1, S0, 1F
	MFHI      T1
	SUBU      V1, T1, V1
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      V0, S0, V0
	LHU       V1, 0 (S4)
	ADDIU     V0, V0, 1
	MULT      V1, V0
	LW        V0, 14 (SP)
	MFLO      V1
	ADDU      A0, V1, S0
	ANDI      A0, A0, FFFF
	SLL       V1, S0, 4
	ADDU      V0, V0, V1
	JAL       800645F0
	ADDIU     S1, V0, C
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	ADDU      V0, V0, S6
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SRA       V0, V0, 1
	SLL       V1, V0, 10
	SRA       V1, V1, 10
	SLL       A0, V1, 2
	ADDU      A0, A0, V1
	SLL       V1, A0, 5
	SUBU      V1, V1, A0
	BGEZ      V1, .oFC
	DADDU     A0, V0, R0
	ADDIU     V1, V1, 7FFF
	.oFC
	SRA       V0, V1, F
	LAD       F2, $ConstDouble_80225FC8
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	ADD.D     F0, F0, F2
	C.LE.D    F20, F0
	NOP
	BC1TL     .o138
	SUB.D     F0, F0, F20
	TRUNC.W.D F4, F0
	MFC1      V0, F4
	BEQ       R0, R0, .o14C
	SB        V0, 0 (S1)
	.o138
	TRUNC.W.D F4, F0
	MFC1      V0, F4
	NOP
	OR        V0, V0, S5
	SB        V0, 0 (S1)
	.o14C
	SLL       V0, A0, 10
	SRA       V0, V0, 10
	SLL       V1, V0, 2
	ADDU      V1, V1, V0
	SLL       V0, V1, 5
	SUBU      V0, V0, V1
	BGEZ      V0, .o170
	ADDIU     V1, S1, 1
	ADDIU     V0, V0, 7FFF
	.o170
	SRA       V0, V0, F
	LIF       F3, 3.390625
	MTC1      R0, F2
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	ADD.D     F0, F0, F2
	C.LE.D    F20, F0
	NOP
	BC1TL     .o1B0
	SUB.D     F0, F0, F20
	TRUNC.W.D F4, F0
	MFC1      V0, F4
	BEQ       R0, R0, .o1C4
	SB        V0, 0 (V1)
	.o1B0
	TRUNC.W.D F4, F0
	MFC1      V0, F4
	NOP
	OR        V0, V0, S5
	SB        V0, 0 (V1)
	.o1C4
	SRL       V1, S0, 1F
	ADDU      V1, S0, V1
	SRA       A1, V1, 1
	MULT      A1, S3
	LHU       A0, 0 (S4)
	SRA       V1, V1, 1F
	SRL       A2, A0, F
	MFHI      T1
	SUBU      V1, T1, V1
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      A1, A1, V0
	ADDIU     A1, A1, 1
	SLL       A1, A1, F
	MULT      A2, A1
	SRL       A0, A0, E
	SLL       A0, A0, F
	MFLO      V1
	ADDU      A0, V1, A0
	ADDU      A0, A0, S0
	JAL       800645F0
	ANDI      A0, A0, FFFF
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	LBU       V1, 0 (S1)
	ADDU      V0, V0, S6
	MULT      V1, V0
	MFLO      V1
	BGEZ      V1, .o244
	ADDIU     A0, S1, 2
	ORI       V0, R0, FFFF
	ADDU      V1, V1, V0
	.o244
	SRA       V0, V1, 10
	LAD       F2, $ConstDouble_80225FD0
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	ADD.D     F0, F0, F2
	C.LE.D    F20, F0
	NOP
	BC1TL     .o280
	SUB.D     F0, F0, F20
	TRUNC.W.D F4, F0
	MFC1      V0, F4
	BEQ       R0, R0, .o294
	SB        V0, 0 (A0)
	.o280
	TRUNC.W.D F4, F0
	MFC1      V0, F4
	NOP
	OR        V0, V0, S5
	SB        V0, 0 (A0)
	.o294
	LW        V0, 18 (SP)
	ADDIU     S0, S0, 1
	SLT       V0, S0, V0
	BNE       V0, R0, .o7C
	MULT      S0, S3
	.o2A8
	LIA       V1, 8009A66C
	LW        V0, 0 (V1)
	DADDU     A0, S2, R0
	DADDU     S0, V0, R0
	ADDIU     V0, V0, 8
	SW        V0, 0 (V1)
	LUI       V0, DE00
	JAL       8011C2EC
	SW        V0, 0 (S0)
	SW        V0, 4 (S0)
	LIA       V0, $???_80224BB0
	SLL       V1, S2, 1
	ADDU      V1, V1, V0
	LHU       V0, 0 (V1)
	ADDIU     V0, V0, 253
	SH        V0, 0 (V1)
	LW        RA, 3C (SP)
	LW        S6, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F20, 40 (SP)
	JR        RA
	ADDIU     SP, SP, 48

% Origin: HEURISTIC
#new:Function $Function_80218CEC
	ADDIU     SP, SP, FFB8
	SW        S2, 28 (SP)
	ADDIU     S2, A0, FFFF
	DADDU     A0, S2, R0
	ADDIU     A1, SP, 10
	ADDIU     A2, SP, 14
	SW        RA, 3C (SP)
	SW        S6, 38 (SP)
	SW        S5, 34 (SP)
	SW        S4, 30 (SP)
	SW        S3, 2C (SP)
	SW        S1, 24 (SP)
	SW        S0, 20 (SP)
	SDC1      F20, 40 (SP)
	JAL       8011C2B0
	ADDIU     A3, SP, 18
	LW        V0, 18 (SP)
	BLEZ      V0, .o2A8
	DADDU     S0, R0, R0
	LIA       V1, $???_80224BB0
	SLL       V0, S2, 1
	ADDU      S4, V0, V1
	LIO       S3, 55555556
	ORI       S6, R0, 8000
	LIF       F21, 28.0
	MTC1      R0, F20
	LUI       S5, 8000
	MULT      S0, S3
	.o7C
	SRA       V1, S0, 1F
	MFHI      T1
	SUBU      V1, T1, V1
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      V0, S0, V0
	LHU       V1, 0 (S4)
	ADDIU     V0, V0, 1
	MULT      V1, V0
	LW        V0, 14 (SP)
	MFLO      V1
	ADDU      A0, V1, S0
	ANDI      A0, A0, FFFF
	SLL       V1, S0, 4
	ADDU      V0, V0, V1
	JAL       800645F0
	ADDIU     S1, V0, C
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	ADDU      V0, V0, S6
	SRL       V1, V0, 1F
	ADDU      V0, V0, V1
	SRA       V0, V0, 1
	SLL       V1, V0, 10
	SRA       V1, V1, 10
	SLL       A0, V1, 2
	ADDU      A0, A0, V1
	SLL       V1, A0, 5
	SUBU      V1, V1, A0
	BGEZ      V1, .oFC
	DADDU     A0, V0, R0
	ADDIU     V1, V1, 7FFF
	.oFC
	SRA       V0, V1, F
	LIF       F3, 3.390625
	MTC1      R0, F2
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	ADD.D     F0, F0, F2
	C.LE.D    F20, F0
	NOP
	BC1TL     .o13C
	SUB.D     F0, F0, F20
	TRUNC.W.D F4, F0
	MFC1      V0, F4
	BEQ       R0, R0, .o150
	SB        V0, 0 (S1)
	.o13C
	TRUNC.W.D F4, F0
	MFC1      V0, F4
	NOP
	OR        V0, V0, S5
	SB        V0, 0 (S1)
	.o150
	SLL       V0, A0, 10
	SRA       V0, V0, 10
	SLL       V1, V0, 2
	ADDU      V1, V1, V0
	SLL       V0, V1, 5
	SUBU      V0, V0, V1
	BGEZ      V0, .o174
	ADDIU     V1, S1, 1
	ADDIU     V0, V0, 7FFF
	.o174
	SRA       V0, V0, F
	LAD       F2, $ConstDouble_80225FD8
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	ADD.D     F0, F0, F2
	C.LE.D    F20, F0
	NOP
	BC1TL     .o1B0
	SUB.D     F0, F0, F20
	TRUNC.W.D F4, F0
	MFC1      V0, F4
	BEQ       R0, R0, .o1C4
	SB        V0, 0 (V1)
	.o1B0
	TRUNC.W.D F4, F0
	MFC1      V0, F4
	NOP
	OR        V0, V0, S5
	SB        V0, 0 (V1)
	.o1C4
	SRL       V1, S0, 1F
	ADDU      V1, S0, V1
	SRA       A1, V1, 1
	MULT      A1, S3
	LHU       A0, 0 (S4)
	SRA       V1, V1, 1F
	SRL       A2, A0, F
	MFHI      T1
	SUBU      V1, T1, V1
	SLL       V0, V1, 1
	ADDU      V0, V0, V1
	SUBU      A1, A1, V0
	ADDIU     A1, A1, 1
	SLL       A1, A1, F
	MULT      A2, A1
	SRL       A0, A0, E
	SLL       A0, A0, F
	MFLO      V1
	ADDU      A0, V1, A0
	ADDU      A0, A0, S0
	JAL       800645F0
	ANDI      A0, A0, FFFF
	SLL       V0, V0, 10
	SRA       V0, V0, 10
	LBU       V1, 0 (S1)
	ADDU      V0, V0, S6
	MULT      V1, V0
	MFLO      V1
	BGEZ      V1, .o244
	ADDIU     A0, S1, 2
	ORI       V0, R0, FFFF
	ADDU      V1, V1, V0
	.o244
	SRA       V0, V1, 10
	LAD       F2, $ConstDouble_80225FE0
	MTC1      V0, F0
	NOP
	CVT.D.W   F0, F0
	ADD.D     F0, F0, F2
	C.LE.D    F20, F0
	NOP
	BC1TL     .o280
	SUB.D     F0, F0, F20
	TRUNC.W.D F4, F0
	MFC1      V0, F4
	BEQ       R0, R0, .o294
	SB        V0, 0 (A0)
	.o280
	TRUNC.W.D F4, F0
	MFC1      V0, F4
	NOP
	OR        V0, V0, S5
	SB        V0, 0 (A0)
	.o294
	LW        V0, 18 (SP)
	ADDIU     S0, S0, 1
	SLT       V0, S0, V0
	BNE       V0, R0, .o7C
	MULT      S0, S3
	.o2A8
	LIA       V1, 8009A66C
	LW        V0, 0 (V1)
	DADDU     A0, S2, R0
	DADDU     S0, V0, R0
	ADDIU     V0, V0, 8
	SW        V0, 0 (V1)
	LUI       V0, DE00
	JAL       8011C2EC
	SW        V0, 0 (S0)
	SW        V0, 4 (S0)
	LIA       V0, $???_80224BB0
	SLL       V1, S2, 1
	ADDU      V1, V1, V0
	LHU       V0, 0 (V1)
	ADDIU     V0, V0, 253
	SH        V0, 0 (V1)
	LW        RA, 3C (SP)
	LW        S6, 38 (SP)
	LW        S5, 34 (SP)
	LW        S4, 30 (SP)
	LW        S3, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F20, 40 (SP)
	JR        RA
	ADDIU     SP, SP, 48

PADDING: 80219008 to 80219010 (004800B8 to 004800C0)
00000000 00000000 

#new:IdleAnimations $IdleAnimations_80219010
.Status:Normal    00090001
.Status:Stone     00090000
.Status:Sleep     00090000
.Status:Poison    00090001
.Status:Stop      00090000
.Status:Static    00090000
.Status:Paralyze  00090000
.Status:Dizzy     00090000
.Status:Dizzy     00090000
.Status:End

#new:DefenseTable $DefenseTable_8021905C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80219068
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_80219114
00800000 01000000 FC1800FF $IdleAnimations_80219010 $DefenseTable_8021905C 00000000 00000000 00000000 00000000 

#new:Actor $GoombarioTutor1
% stats
[Index]        94b 
[Level]        99`b 
[MaxHP]        99`b 
[Coins]         0`b 
[Flags]       00040000 
[StatusTable] $StatusTable_80219068 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80219114 
[Script]      $Script_Init_80219160 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Script $Script_Init_80219160
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80219444 )
	Call     BindIdle    	( .Actor:Self $Script_Idle_802191D0 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_802191E0 )
	Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
	Exec     $Script_80219C74 
	Return
	End

#new:Script $Script_Idle_802191D0
	Return
	End

#new:Script $Script_HandleEvent_802191E0
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Thread
	   Call     8026BF48 ( 00000001 )
	   Call     GetEventType 	( .Actor:Self *Var[0] )
	   Switch  *Var[0] 
	      Case  ==  .Event:Hit
	         Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	         If  *Var[0]  ==  00000000 
	            Call     RandInt     	( 00000002 *Var[0] )
	            Switch  *Var[0] 
	               Case  ==  00000000 
	                  Call     SayMessage  	( 000A002D .Actor:Self 00000001 0009000A 00090002 ) % Ouch! 
	               Case  ==  00000001 
	                  Call     SayMessage  	( 000A002E .Actor:Self 00000001 0009000A 00090002 ) % Ow! 
	               Case  ==  00000002 
	            EndSwitch
	         EndIf
	   EndSwitch
	   Call     8026BF48 ( 00000000 )
	EndThread
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0009000A 
	      ExecWait DoNormalHit 
	   EndCaseGroup
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00090001 
	      ExecWait DoImmune 
	   EndCaseGroup
	   Case  ==  00000030
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0009000A 
	      ExecWait DoNormalHit 
	      Wait     000003E8 
	   Default
	EndSwitch
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_80219444
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000003F )
	Call     SetCamZoom  	( 00000190 )
	Call     SetCamOffsetZ 	( 00000028 )
	Call     CamTargetActor ( .Actor:Self )
	Call     SetAnimation 	( .Actor:Self 00000001 00090003 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     AddToGoalPos 	( .Actor:Self 00000032 00000000 00000000 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Call     SetAnimation 	( .Actor:Self 00000001 00090001 )
	Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFF 00000000 )
	Wait     00000001 
	Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFE 00000000 )
	Wait     00000005 
	Call     8026BA04 ( FFFFFF81 00000000 0000000A 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 00090006 )
	Call     UseCamPreset 	( 00000042 )
	Call     SetCamZoom  	( 00000190 )
	Call     SetCamOffsetZ 	( 00000028 )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     CamTargetActor ( .Actor:Self )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     AddToGoalPos 	( .Actor:Self FFFFFFF6 00000000 00000000 )
	Call     GetBattleFlags2 	( *Var[0] )
	If  *Var[0]  &  00000200 
	   Call     AddToGoalPos 	( .Actor:Self 00000005 0000000A 00000000 )
	EndIf
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.1005859] )
	Thread
	   Wait     00000004 
	   Set  *Var[0]  00000000 
	   Loop     00000004 
	      Add  *Var[0]  0000002D 
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 *Var[0] )
	      Wait     00000001 
	   EndLoop
	   Call     SetAnimation 	( .Actor:Self 00000001 00090006 )
	EndThread
	Thread
	   Call     LoadActionCommand 	( 00000001 )
	   Call     802A9000 ( )
	   Call     802694A4 ( 00000001 )
	   Wait     0000000A 
	   Call     802A9120 ( 0000000C 00000003 )
	EndThread
	Call     PlaySound   	( 000003E2 )
	Call     JumpToGoal  	( .Actor:Self 00000016 00000000 00000001 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 00090006 )
	Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
	Wait     00000001 
	Call     SetActorScale 	( .Actor:Self *Fixed[1.3007812] *Fixed[0.5] *Fixed[1.0] )
	Wait     00000001 
	Call     80269318 ( *Var[0] )
	If  *Var[0]  ==  00000002 
	   Call     802692EC ( 00000003 )
	   Loop     
	      Call     80269318 ( *Var[0] )
	      If  *Var[0]  <  00000002 
	         BreakLoop
	      EndIf
	      Wait     00000001 
	   EndLoop
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	If  *Var[0]  ==  00000001 
	   Call     80269EAC ( 00000005 )
	EndIf
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000000 00000000 00000001 00000020 )
	Call     80269410 ( )
	Set  *Var[F]  *Var[0] 
	Switch  *Var[F] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	   CaseOR  ==  0000000A 
	      Call     SetActorScale 	( .Actor:Self *Fixed[1.1005859] *Fixed[0.80078125] *Fixed[1.0] )
	      Wait     00000001 
	      Call     SetActorScale 	( .Actor:Self *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	      Wait     00000001 
	      Call     SetActorRotation 	( .Actor:Self 00000000 00000000 00000000 )
	      Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00090001 )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Add  *Var[0]  00000028 
	      Set  *Var[1]  00000000 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	      Add  *Var[0]  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000008 00000000 00000001 00000000 )
	      Add  *Var[0]  00000014 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000006 00000000 00000001 00000000 )
	      Sub  *Var[0]  0000000A 
	      Call     JumpToGoal  	( .Actor:Self 00000004 00000000 00000001 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 00090001 )
	      Wait     00000008 
	      Call     UseCamPreset 	( 00000002 )
	      Call     8027D7F0 ( )
	      Call     SetAnimation 	( .Actor:Self 00000001 00090001 )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 00090003 )
	      Call     RunToGoal   	( .Actor:Self 00000000 .False )
	      Call     SetAnimation 	( .Actor:Self 00000001 00090001 )
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_80219C74
	Call     SetBattleFlagBits 	( 02000000 .True )
	Call     802535B4 ( 00000000 )
	Call     8026E198 ( 0000000D )
	Wait     0000000F 
	Call     UseIdleAnimation 	( .Actor:Partner .False )
	Call     EnableIdleScript 	( .Actor:Partner 00000000 )
	Call     SetActorJumpscale 	( .Actor:Partner *Fixed[1.0] )
	Call     GetActorPos 	( .Actor:Partner *Var[0] *Var[1] *Var[2] )
	Call     SetGoalToPos 	( .Actor:Partner *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Partner 0000000A 00000000 00000000 00000000 )
	Call     UseIdleAnimation 	( .Actor:Partner .False )
	Call     SayMessage  	( 000A0019 .Actor:Partner 00000001 00200009 00200005 ) % First, Mario, choose the Jump command and then dec ...
	Call     UseIdleAnimation 	( .Actor:Partner .True )
	Call     8026E020 ( 00000001 )
	Call     802692EC ( 00000002 )
	Call     8026E198 ( 00000012 )
	Call     UseCamPreset 	( 00000002 )
	Wait     0000000F 
	Call     SetGoalToPos 	( .Actor:Partner FFFFFFB7 00000028 000000CA )
	Call     MoveToGoal  	( .Actor:Partner 00000014 00000014 .Easing:CosInOut )
	Call     UseIdleAnimation 	( .Actor:Partner .False )
	Call     SayMessage  	( 000A001A .Actor:Partner 00000001 00200009 00200005 ) % Once you decide on the enemy, the explanation of t ...
	Call     UseIdleAnimation 	( .Actor:Partner .True )
	Call     802692EC ( 00000001 )
	Call     SetBattleFlagBits 	( 00004000 .False )
	Call     80251408 ( FFFFFFFF )
	Thread
	   Loop     0000000F 
	      Call     80251408 ( 00000023 )
	      Wait     00000001 
	   EndLoop
	EndThread
	Wait     0000000F 
	Call     SetGoalToHome 	( .Actor:Partner )
	Call     MoveToGoal  	( .Actor:Partner 00000014 00000014 .Easing:CosInOut )
	Call     802692EC ( 00000002 )
	Call     8026E198 ( 00000000 )
	Call     SetBattleFlagBits2 	( 00000200 .True )
	Loop     
	   Call     80269318 ( *Var[0] )
	   If  *Var[0]  !=  00000002 
	      BreakLoop
	   EndIf
	   Wait     00000001 
	EndLoop
	Call     UseIdleAnimation 	( .Actor:Partner .False )
	Call     SayMessage  	( 000A001B .Actor:Partner 00000001 00200009 00200005 ) % Right now! Just before stomping the enemy. Press   ...
	Loop     
	   Call     8026E108 ( 00008000 *Var[0] )
	   If  *Var[0]  ==  00000000 
	      BreakLoop
	   EndIf
	   Wait     00000001 
	EndLoop
	Loop     
	   Call     8026E098 ( 00008000 *Var[0] )
	   If  *Var[0]  ==  00000001 
	      BreakLoop
	   EndIf
	   Wait     00000001 
	EndLoop
	Call     802532D0 ( 00000100 00000001 00200009 00200005 )
	Call     UseIdleAnimation 	( .Actor:Partner .True )
	Call     802692C0 ( 00000001 )
	Call     802692EC ( 00000001 )
	Call     8026E198 ( 00000008 )
	Call     UseCamPreset 	( 00000002 )
	Wait     0000000F 
	Call     UseIdleAnimation 	( .Actor:Partner .False )
	Call     SayMessage  	( 000A001D .Actor:Partner 00000001 00200009 00200005 ) % When you see "Nice" appear, it means you've succes ...
	Call     UseIdleAnimation 	( .Actor:Partner .True )
	Call     8026E198 ( 00000009 )
	Call     UseCamPreset 	( 00000002 )
	Wait     0000000F 
	Call     UseIdleAnimation 	( .Actor:Partner .False )
	Call     SayMessage  	( 000A001E .Actor:Enemy0 00000001 0009000F 00090001 ) % OK! Here it comes, Mario!
	Call     UseIdleAnimation 	( .Actor:Partner .True )
	Call     802692EC ( 00000002 )
	Call     8026E198 ( 00000000 )
	Loop     
	   Call     80269318 ( *Var[0] )
	   If  *Var[0]  !=  00000002 
	      BreakLoop
	   EndIf
	   Wait     00000001 
	EndLoop
	Call     UseIdleAnimation 	( .Actor:Partner .False )
	Call     SayMessage  	( 000A001F .Actor:Partner 00000001 00200009 00200005 ) % Right now! Press  just before the attack strikes y ...
	Loop     
	   Call     8026E108 ( 00008000 *Var[0] )
	   If  *Var[0]  ==  00000000 
	      BreakLoop
	   EndIf
	   Wait     00000001 
	EndLoop
	Loop     
	   Call     8026E098 ( 00008000 *Var[0] )
	   If  *Var[0]  ==  00000001 
	      BreakLoop
	   EndIf
	   Wait     00000001 
	EndLoop
	Call     802532D0 ( 00000100 00000001 00200009 00200005 )
	Call     UseIdleAnimation 	( .Actor:Partner .True )
	Call     802692C0 ( 00000001 )
	Call     802692EC ( FFFFFFFF )
	Call     8026E198 ( 00000006 )
	Call     UseCamPreset 	( 00000002 )
	Wait     0000000F 
	Call     802692EC ( 00000001 )
	Call     UseIdleAnimation 	( .Actor:Partner .False )
	Call     SayMessage  	( 000A0020 .Actor:Partner 00000001 00200009 00200005 ) % Yes! You successfully used the action command. Thi ...
	Call     UseIdleAnimation 	( .Actor:Partner .True )
	Call     8026E198 ( 0000000D )
	Call     8026E020 ( 00000002 )
	Call     802692EC ( 00000002 )
	Call     8026E198 ( 00000012 )
	Call     UseIdleAnimation 	( .Actor:Partner .False )
	Call     SayMessage  	( 000A0022 .Actor:Partner 00000001 00200009 00200005 ) % Once you choose an enemy to attack, move the Contr ...
	Loop     
	   Call     8026E108 ( 00040000 *Var[0] )
	   If  *Var[0]  ==  00000000 
	      BreakLoop
	   EndIf
	   Wait     00000001 
	EndLoop
	Loop     
	   Call     8026E098 ( 00040000 *Var[0] )
	   If  *Var[0]  ==  00000001 
	      BreakLoop
	   EndIf
	   Wait     00000001 
	EndLoop
	Call     802532D0 ( 00000100 00000001 00200009 00200005 )
	Call     UseIdleAnimation 	( .Actor:Partner .True )
	Call     802692EC ( 00000001 )
	Call     8026E198 ( 00000000 )
	Wait     00000005 
	Call     802692EC ( 00000002 )
	Loop     
	   Call     80269318 ( *Var[0] )
	   If  *Var[0]  !=  00000002 
	      BreakLoop
	   EndIf
	   Call     8026E108 ( 00040000 *Var[0] )
	   If  *Var[0]  ==  00000000 
	      Call     802692EC ( FFFFFFFF )
	      Call     802789A4 ( 00000000 )
	      Call     UseIdleAnimation 	( .Actor:Partner .False )
	      Call     SayMessage  	( 000A0023 .Actor:Partner 00000001 00200009 00200005 ) % Move the Control Stick to the left and keep it the ...
	      Loop     
	         Call     8026E098 ( 00040000 *Var[0] )
	         If  *Var[0]  ==  00000001 
	            BreakLoop
	         EndIf
	         Wait     00000001 
	      EndLoop
	      Call     802532D0 ( 00000100 00000001 00200009 00200005 )
	      Call     UseIdleAnimation 	( .Actor:Partner .True )
	      Call     802692EC ( 00000002 )
	      Call     80278A1C ( 00000000 )
	   EndIf
	   Wait     00000001 
	EndLoop
	Loop     
	   Call     802695A8 ( *Var[0] )
	   If  *Var[0]  ==  00000003 
	      BreakLoop
	   EndIf
	   Wait     00000001 
	EndLoop
	Call     UseIdleAnimation 	( .Actor:Partner .False )
	Call     SayMessage  	( 000A0024 .Actor:Partner 00000001 00200009 00200005 ) %  flashes as soon as your power reaches its maximum ...
	Loop     
	   Call     8026E108 ( 00040000 *Var[0] )
	   If  *Var[0]  ==  00000000 
	      BreakLoop
	   EndIf
	   Wait     00000001 
	EndLoop
	Call     802532D0 ( 00000100 00000001 00200009 00200005 )
	Call     UseIdleAnimation 	( .Actor:Partner .True )
	Call     802692C0 ( 00000001 )
	Call     802692EC ( 00000001 )
	Call     8026E198 ( 00000008 )
	Call     UseCamPreset 	( 00000002 )
	Wait     0000000F 
	Call     UseIdleAnimation 	( .Actor:Partner .False )
	Call     SayMessage  	( 000A0025 .Actor:Partner 00000001 00200009 00200005 ) % All right! You successfully used the action comman ...
	Call     UseIdleAnimation 	( .Actor:Partner .True )
	Call     SetActorFlagBits 	( .Actor:Enemy0 00200000 .True )
	Call     8026E198 ( 00000000 )
	Call     8026E198 ( 0000000D )
	Call     80253538 ( 001E001D )
	Call     802532D0 ( 00000100 00000001 00200009 00200005 )
	If  *Var[0]  ==  00000001 
	   Call     SayMessage  	( 000A0027 .Actor:Partner 00000001 00200009 00200005 ) % You don't need to practice anymore...? That's our  ...
	   Goto     00000064 
	EndIf
	Call     UseIdleAnimation 	( .Actor:Partner .False )
	Call     SayMessage  	( 000A0028 .Actor:Partner 00000001 00200009 00200005 ) % The action command will serve you well, so practic ...
	Call     UseIdleAnimation 	( .Actor:Partner .True )
	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	Call     SetBattleFlagBits2 	( 00000200 .False )
	Label    0000000A 
	Call     8026E020 ( 00000083 )
	Call     802692EC ( 00000002 )
	Call     8026E198 ( 00000012 )
	Call     GetMenuSelection 	( *Var[0] *Var[1] *Var[2] )
	If  *Var[0]  ==  00000007 
	   Goto     00000063 
	EndIf
	Call     802692EC ( 00000001 )
	Call     8026E198 ( 00000008 )
	Call     UseIdleAnimation 	( .Actor:Partner .False )
	Call     80269524 ( *Var[0] )
	Switch  *Var[0] 
	   Case  ==  FFFFFFFF 
	      Call     SayMessage  	( 000A002A .Actor:Partner 00000001 00200009 00200005 ) % Almost!! That was a little bit too early.
	   Case  ==  00000000 
	      Call     SayMessage  	( 000A002B .Actor:Partner 00000001 00200009 00200005 ) % Almost!! That was a little bit too late.
	   Case  ==  00000001 
	      Call     SayMessage  	( 000A0029 .Actor:Partner 00000001 00200009 00200005 ) % Well done, Mario!! You successfully used the actio ...
	EndSwitch
	Call     UseIdleAnimation 	( .Actor:Partner .True )
	Call     SetEnemyHP  	( .Actor:Enemy0 00000063 )
	Call     SetActorFlagBits 	( .Actor:Enemy0 00200000 .False )
	Call     802692EC ( 00000001 )
	Call     8026E198 ( 00000006 )
	Call     UseIdleAnimation 	( .Actor:Partner .False )
	Call     8026957C ( *Var[0] )
	Switch  *Var[0] 
	   Case  ==  FFFFFFFF 
	      Call     SayMessage  	( 000A002A .Actor:Partner 00000001 00200009 00200005 ) % Almost!! That was a little bit too early.
	   Case  ==  00000000 
	      Call     SayMessage  	( 000A002B .Actor:Partner 00000001 00200009 00200005 ) % Almost!! That was a little bit too late.
	   Case  ==  00000001 
	      Call     SayMessage  	( 000A0029 .Actor:Partner 00000001 00200009 00200005 ) % Well done, Mario!! You successfully used the actio ...
	EndSwitch
	Call     UseIdleAnimation 	( .Actor:Partner .True )
	Call     8026E198 ( 0000000D )
	Goto     0000000A 
	Label    00000063 
	Call     UseIdleAnimation 	( .Actor:Partner .False )
	Call     SayMessage  	( 000A002C .Actor:Partner 00000001 00200009 00200005 ) % Well, I guess that's about all I can teach you.
	Label    00000064 
	Call     8026E198 ( 00000000 )
	Call     8026E16C ( 0000001E )
	Call     $Function_80218000 ( )
	Wait     00002710 
	Return
	End

PADDING: 8021ACA8 to 8021ACB0 (00481D58 to 00481D60)
00000000 00000000 

#new:DefenseTable $DefenseTable_8021ACB0
.Element:Normal 00000000
.Element:Water  FFFFFFFE
.Element:Ice    FFFFFFFE
.Element:Fire   00000063
.Element:End

#new:StatusTable $StatusTable_8021ACD4
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze    0`
.Status:Shrink     90`
.Status:Stop       85`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8021AD80
00800000 01000000 FE1900FF $IdleAnimations_8021AE5C $DefenseTable_8021ACB0 00000002 00000000 FDF60000 00000000 
00120001 02000000 001800FF $IdleAnimations_8021AEA8 $DefenseTable_8021ACB0 00000000 00000000 FFF60000 00000000 
00120001 03000000 001800FF $IdleAnimations_8021AEA8 $DefenseTable_8021ACB0 00000000 00000000 FFF60000 00000000 
00120001 04000000 001800FF $IdleAnimations_8021AEA8 $DefenseTable_8021ACB0 00000000 00000000 FFF60000 00000000 
00120001 05000000 001800FF $IdleAnimations_8021AEA8 $DefenseTable_8021ACB0 00000000 00000000 FFF60000 00000000 

#new:Actor $Ember
% stats
[Index]        45b 
[Level]        24`b 
[MaxHP]        10`b 
[Coins]         2`b 
[Flags]       00000200 
[StatusTable] $StatusTable_8021ACD4 
% ai
[SpriteCount]   5`s 
[SpriteTable] $SpriteTable_8021AD80 
[Script]      $Script_Init_8021AEB4 
% move effectiveness
[Escape]       60`b 
[Item]         50`b 
[AirLift]      80`b 
[Hurricane]    75`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce]  80`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         33`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_8021AE5C
.Status:Normal    00460101
.Status:Stone     00460100
.Status:Sleep     00460101
.Status:Poison    00460101
.Status:Stop      00460100
.Status:Static    00460101
.Status:Paralyze  00460100
.Status:Dizzy     0046010A
.Status:Fear      0046010A
.Status:End

#new:IdleAnimations $IdleAnimations_8021AEA8
.Status:Normal    00460101
.Status:End

#new:Script $Script_Init_8021AEB4
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021D284 )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8021B07C )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021B8BC )
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
	   Case  ==  00000001 
	      Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	EndSwitch
	Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
	Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
	Call     SetSpriteScale ( .Actor:Self 00000004 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
	Call     SetSpriteScale ( .Actor:Self 00000005 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
	Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[1]  00000005 
	Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     HPBarToHome 	( .Actor:Self )
	Return
	End

#new:Script $Script_Idle_8021B07C
	Label    00000000 
	Call     MakeLerp    	( 00000000 0000000A 00000019 0000000A )
	Label    00000001 
	Call     UpdateLerp  	( )
	Call     GetHomePos  	( .Actor:Self *Var[2] *Var[3] *Var[4] )
	Add  *Var[0]  *Var[3] 
	Call     SetActorPos 	( .Actor:Self *Var[2] *Var[0] *Var[4] )
	If  *Var[1]  ==  00000001 
	   Label    0000000B 
	   Wait     00000001 
	   Call     GetStatusFlags ( .Actor:Self *Var[0] )
	   If  *Var[0]  &  0035D000 
	      Goto     0000000B 
	   EndIf
	   Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	   If  *Var[0]  ==  00000001 
	      Goto     0000000B 
	   EndIf
	   Goto     00000001 
	EndIf
	Call     MakeLerp    	( 0000000A 00000000 00000019 0000000A )
	Label    00000002 
	Call     UpdateLerp  	( )
	Call     GetHomePos  	( .Actor:Self *Var[2] *Var[3] *Var[4] )
	Add  *Var[0]  *Var[3] 
	Call     SetActorPos 	( .Actor:Self *Var[2] *Var[0] *Var[4] )
	If  *Var[1]  ==  00000001 
	   Label    00000016 
	   Wait     00000001 
	   Call     GetStatusFlags ( .Actor:Self *Var[0] )
	   If  *Var[0]  &  0035D000 
	      Goto     00000016 
	   EndIf
	   Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	   If  *Var[0]  ==  00000001 
	      Goto     00000016 
	   EndIf
	   Goto     00000002 
	EndIf
	Goto     00000000 
	Return
	End

#new:Script $Script_8021B2FC
	Call     SetAnimation 	( .Actor:Self 00000001 00460103 )
	Call     SetGoalToHome 	( .Actor:Self )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	Thread
	   Call     $Function_80218020 ( )
	EndThread
	Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:SinOut )
	Call     SetAnimation 	( .Actor:Self 00000001 00460101 )
	Return
	End

#new:Script $Script_8021B398
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[5] )
	Call     GetIndexFromHome 	( *Var[0] *Var[5] )
	Mod  *Var[5]  00000004 
	Switch  *Var[5] 
	   Case  ==  00000000 
	      Set  *Flag[01]  00000001 
	   Case  ==  00000001 
	      Set  *Flag[02]  00000001 
	   Case  ==  00000002 
	      Set  *Flag[03]  00000001 
	   Case  ==  00000003 
	      Set  *Flag[04]  00000001 
	EndSwitch
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	If  *Flag[01]  ==  00000000 
	   Set  *Var[A]  00000000 
	   Return
	EndIf
	If  *Flag[02]  ==  00000000 
	   Set  *Var[A]  00000001 
	   Return
	EndIf
	If  *Flag[03]  ==  00000000 
	   Set  *Var[A]  00000002 
	   Return
	EndIf
	If  *Flag[04]  ==  00000000 
	   Set  *Var[A]  00000003 
	   Return
	EndIf
	Set  *Var[A]  FFFFFFFF 
	Return
	End

#new:Vector3D $Vector3D_8021B594
0` -1000` 0`

#new:SpecialFormation $SpecialFormation_8021B5A0
$Ember $Vector3D_8021B594 00000000 00000000 00000000 00000000 00000000 

#new:Script $Script_Split
	Call     GetLastDamage 	( .Actor:Self *Var[0] )
	If  *Var[0]  ==  00000000 
	   Return
	EndIf
	Call     GetActorHP  	( .Actor:Self *Var[0] )
	If  *Var[0]  <=  00000000 
	   Return
	EndIf
	Call     GetLastElement ( *Var[0] )
	If  *Var[0]  &  20000000 
	   Return
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	If  *Var[0]  >=  00000002 
	   Return
	EndIf
	ExecWait $Script_8021B398 
	Switch  *Var[A] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000001 
	   CaseOR  ==  00000002 
	   CaseOR  ==  00000003 
	      Call     SummonEnemy 	( $SpecialFormation_8021B5A0 00000000 )
	      Call     SetActorVar 	( *Var[0] 00000002 00000001 )
	      Call     GetActorHP  	( .Actor:Self *Var[B] )
	      Call     SetEnemyHP  	( *Var[0] *Var[B] )
	      Call     GetActorPos 	( .Actor:Self *Var[B] *Var[C] *Var[D] )
	      Call     SetActorPos 	( *Var[0] *Var[B] *Var[C] *Var[D] )
	      Call     SetGoalToIndex ( *Var[0] *Var[A] )
	      Call     GetGoalPos  	( *Var[0] *Var[B] *Var[C] *Var[D] )
	      Call     SetHomePos  	( *Var[0] *Var[B] *Var[C] *Var[D] )
	      Call     SetActorJumpscale 	( *Var[0] *Fixed[1.2001953] )
	      Call     JumpToGoal  	( *Var[0] 00000014 00000000 00000001 00000000 )
	      Call     HPBarToHome 	( *Var[0] )
	      Call     GetActorVar 	( .Actor:Self 00000001 *Var[1] )
	      Switch  *Var[1] 
	         Case  ==  00000000 
	            Call     SetActorVar 	( *Var[0] 00000001 00000001 )
	         Case  ==  00000001 
	            Call     SetActorVar 	( *Var[0] 00000001 00000002 )
	      EndSwitch
	      Call     SetActorVar 	( .Actor:Self 00000001 00000003 )
	      Call     SetActorVar 	( *Var[0] 00000002 00000000 )
	   EndCaseGroup
	   Default
	EndSwitch
	Return
	End

#new:Script $Script_HandleEvent_8021B8BC
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      Exec     $Script_Split 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460107 
	      ExecWait DoNormalHit 
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      Exec     $Script_Split 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460108 
	      SetConst  *Var[2]  00460109 
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460108 
	      SetConst  *Var[2]  00460109 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460109 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      Exec     $Script_Split 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460107 
	      ExecWait 8029B998 
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460107 
	      ExecWait 8029B998 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460107 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:ShockHit
	      Call     PlaySoundAtActor 	( .Actor:Self 00000759 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460107 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460107 
	      ExecWait 8029BD70 
	      ExecWait $Script_8021B2FC 
	   Case  ==  .Event:ShockDeath
	      Call     PlaySoundAtActor 	( .Actor:Self 00000759 )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460107 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460107 
	      ExecWait DoDeath 
	      Return
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	   CaseOR  ==  .Event:AirLiftFailed
	   CaseOR  ==  .Event:BurnTaunt
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460101 
	      ExecWait DoImmune 
	   EndCaseGroup
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460107 
	      ExecWait DoNormalHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460107 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:BeginFirstStrike
	      Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
	      Call     HPBarToCurrent ( .Actor:Self )
	   Case  ==  .Event:EndFirstStrike
	      ExecWait $Script_8021B2FC 
	      Call     HPBarToHome 	( .Actor:Self )
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460101 
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460103 
	      SetConst  *Var[2]  00460107 
	      ExecWait DoScareAway 
	      Return
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460103 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00460103 
	      ExecWait DoBlowAway 
	      Return
	   Case  ==  .Event:UpAndAway
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021BE64
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 00460103 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  0000001E 
	Set  *Var[1]  00000005 
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	Thread
	   Call     $Function_80218020 ( )
	EndThread
	Call     MoveToGoal  	( .Actor:Self 00000000 00000000 .Easing:SinOut )
	Call     SetAnimation 	( .Actor:Self 00000001 00460101 )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     SetAnimation 	( .Actor:Self 00000001 00460104 )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000014 
	      Set  *Var[1]  00000000 
	      Add  *Var[2]  00000001 
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Sub  *Var[0]  0000001E 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	      Sub  *Var[0]  00000014 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	      Sub  *Var[0]  0000000A 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 00000003 00000000 00000001 00000000 )
	      Wait     0000000E 
	      Call     UseCamPreset 	( 00000002 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      ExecWait $Script_8021B2FC 
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetAnimation 	( .Actor:Self 00000001 00460104 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[2]  00000001 
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.6005859] )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000002 00000000 00000000 00000004 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Set  *Var[0]  00000001 
	      Set  *Var[1]  00460104 
	      ExecWait 8029BD70 
	      Wait     00000005 
	      ExecWait $Script_8021B2FC 
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021C454
	Set  *Var[6]  00000002 
	Loop     00000004 
	   Thread
	      Call     GetStatusFlags ( .Actor:Self *Var[A] )
	      If  *Var[A]  &  00080000 
	         Call     SetSpriteScale ( .Actor:Self *Var[6] *Fixed[0.20019531] *Fixed[0.20019531] *Fixed[0.20019531] )
	      Else
	         Call     SetSpriteScale ( .Actor:Self *Var[6] *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
	      EndIf
	      Call     SetSpritePos 	( .Actor:Self *Var[6] *Var[0] *Var[1] *Var[2] )
	      Call     SetSpriteFlagBits 	( .Actor:Self *Var[6] 00000001 .False )
	      Call     SetSpriteSpeed ( .Actor:Self *Var[6] *Fixed[8.0] )
	      Call     SetSpriteJumpscale 	( .Actor:Self *Var[6] *Fixed[0.0107421875] )
	      Call     8026FA00 ( FFFFFF81 *Var[6] 00000002 000002D0 00000000 )
	      Call     JumpSpriteA 	( .Actor:Self *Var[6] *Var[3] *Var[4] *Var[5] 00000000 .False )
	      Call     SetSpriteFlagBits 	( .Actor:Self *Var[6] 00000001 .True )
	   EndThread
	   Wait     00000003 
	   Add  *Var[6]  00000001 
	EndLoop
	Return
	End

#new:Script $Script_8021C5F8
	Exec     $Script_8021C454 
	Call     GetDistanceToTarget 	( .Actor:Self *Var[0] )
	DivF  *Var[0]  *Fixed[8.0] 
	Add  *Var[0]  00000001 
	Wait     *Var[0] 
	Return
	End

#new:Script $Script_8021C654
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Partner )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[A] )
	If  *Var[A]  ==  00000001 
	   Add  *Var[0]  00000064 
	   Set  *Var[1]  00000005 
	Else
	   Add  *Var[0]  0000001E 
	   Set  *Var[1]  00000032 
	EndIf
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetAnimation 	( .Actor:Self 00000001 00460103 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[6.0] )
	Thread
	   Call     $Function_80218020 ( )
	EndThread
	Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFFC .Easing:SinOut )
	Call     SetAnimation 	( .Actor:Self 00000001 00460101 )
	Wait     0000000A 
	Call     SetAnimation 	( .Actor:Self 00000001 00460105 )
	Wait     0000001E 
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     SetAnimation 	( .Actor:Self 00000001 00460106 )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000005 
	      Add  *Var[1]  00000004 
	      Add  *Var[2]  00000002 
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	      Sub  *Var[3]  00000064 
	      Add  *Var[5]  00000002 
	      ExecWait $Script_8021C5F8 
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Wait     00000014 
	      Call     UseCamPreset 	( 00000002 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      ExecWait $Script_8021B2FC 
	      Wait     00000014 
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetAnimation 	( .Actor:Self 00000001 00460106 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub  *Var[0]  00000005 
	Add  *Var[1]  00000004 
	Add  *Var[2]  00000002 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Sub  *Var[4]  00000006 
	Add  *Var[5]  00000002 
	ExecWait $Script_8021C5F8 
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000002 00000000 00000000 00000003 00000020 )
	Wait     00000014 
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      ExecWait $Script_8021B2FC 
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021CBC8
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 00460103 )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     AddToGoalPos 	( .Actor:Self 0000001E 00000000 00000000 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
	Thread
	   Call     $Function_80218020 ( )
	EndThread
	Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFFC .Easing:SinOut )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Wait     0000000A 
	      Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
	      Call     PlaySoundAtActor 	( .Actor:Self 000002CF )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	      Call     SetAnimation 	( .Actor:Self 00000001 00460104 )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
	      Call     8026F838 ( FFFFFF81 00000002 )
	      Call     PlaySoundAtActor 	( .Actor:Self 000002EF )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  0000001E 
	      Add  *Var[2]  00000002 
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 00460104 )
	      Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Wait     0000001E 
	      Call     UseCamPreset 	( 00000002 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      ExecWait $Script_8021B2FC 
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Wait     00000005 
	Call     8026F740 ( FFFFFF81 00000002 00000000 00000000 )
	Call     PlaySoundAtActor 	( .Actor:Self 000002CF )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[5.0] )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.8007812] )
	Call     SetAnimation 	( .Actor:Self 00000001 00460104 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
	Call     8026F838 ( FFFFFF81 00000002 )
	Set  *Var[A]  *Var[0] 
	Set  *Var[B]  *Var[1] 
	Set  *Var[C]  *Var[2] 
	Call     PlaySoundAtActor 	( .Actor:Self 000002EF )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[2]  00000002 
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[8.0] )
	Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:QuadraticOut )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 00000002 00000000 00000000 00000004 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	      Call     MoveToGoal  	( .Actor:Self 00000000 FFFFFFF6 .Easing:Linear )
	      Wait     00000014 
	      ExecWait $Script_8021B2FC 
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self FFFFFFFF )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_8021D284
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	   Switch  *Var[0] 
	      Case  ==  00000001 
	         ExecWait $Script_8021BE64 
	      Case  ==  00000000 
	         ExecWait $Script_8021CBC8 
	   EndSwitch
	   Return
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000001 
	      Call     GetStatusFlags ( .Actor:Partner *Var[0] )
	      If  *Var[0]  &  01000000 
	         ExecWait $Script_8021BE64 
	      Else
	         Call     RandInt     	( 000003E8 *Var[0] )
	         If  *Var[0]  <=  0000012C 
	            ExecWait $Script_8021C654 
	         Else
	            ExecWait $Script_8021BE64 
	         EndIf
	      EndIf
	   Case  ==  00000000 
	      Call     GetStatusFlags ( .Actor:Partner *Var[0] )
	      If  *Var[0]  &  01000000 
	         ExecWait $Script_8021CBC8 
	      Else
	         Call     RandInt     	( 000003E8 *Var[0] )
	         If  *Var[0]  <=  0000012C 
	            ExecWait $Script_8021C654 
	         Else
	            ExecWait $Script_8021CBC8 
	         EndIf
	      EndIf
	EndSwitch
	Return
	End

PADDING: 8021D47C to 8021D480 (0048452C to 00484530)
00000000 

% Origin: HINT
#new:DefenseTable $DefenseTable_8021D480
.Element:Normal 00000000
.Element:End

#new:DefenseTable $DefenseTable_8021D48C
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_8021D498
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep     100`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze  100`
.Status:Shrink    100`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:StatusTable $StatusTable_8021D544
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep     100`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy     100`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze  100`
.Status:Shrink    100`
.Status:Stop      100`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

% Origin: HINT
#new:SpriteTable $SpriteTable_8021D5F0
00800000 01000000 022300FF $IdleAnimations_8021D6D0 $DefenseTable_8021D480 00000000 00000000 FBF40000 00000000 

#new:SpriteTable $SpriteTable_8021D614
00020001 01000000 022300FF $IdleAnimations_8021D6D0 $DefenseTable_8021D48C 00000000 00000000 FBF40000 00000000 
00800000 02000000 F62300FF $IdleAnimations_8021D71C $DefenseTable_8021D48C 00000000 00000000 00F80000 00000000 
00020001 03000000 000000FF $IdleAnimations_8021D768 $DefenseTable_8021D48C 00000000 00000000 00000000 00000000 

% Origin: HINT
#new:Actor $Magikoopa
% stats
[Index]        95b 
[Level]        32`b 
[MaxHP]         8`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8021D498 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8021D5F0 
[Script]      $Script_Init_8021E100 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce] 100`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Actor $FlyingMagikoopa
% stats
[Index]        96b 
[Level]        32`b 
[MaxHP]         8`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_8021D544 
% ai
[SpriteCount]   3`s 
[SpriteTable] $SpriteTable_8021D614 
[Script]      $Script_Init_8021E2C0 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce] 100`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         48`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_8021D6D0
.Status:Normal    00560001
.Status:Stone     00560000
.Status:Sleep     00560008
.Status:Poison    00560001
.Status:Stop      00560000
.Status:Static    00560001
.Status:Paralyze  00560000
.Status:Dizzy     00560007
.Status:Fear      00560007
.Status:End

#new:IdleAnimations $IdleAnimations_8021D71C
.Status:Normal    00570001
.Status:Stone     00570000
.Status:Sleep     00570008
.Status:Poison    00570001
.Status:Stop      00570000
.Status:Static    00570001
.Status:Paralyze  00570000
.Status:Dizzy     00570007
.Status:Fear      00570007
.Status:End

#new:IdleAnimations $IdleAnimations_8021D768
.Status:Normal    0057000A
.Status:End

#new:Script $Script_Idle_8021D774
	Return
	End

#new:Script $Script_8021D784
	Call     GetBattleFlags ( *Var[0] )
	If  *Var[0]  !&  00080000 
	   If  *Var[0]  &  00000240 
	      Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
	   EndIf
	Else
	   Call     $Function_802182A8 ( *Var[0] )
	   Switch  *Var[0] 
	      CaseOR  ==  00000083 
	      CaseOR  ==  00000084 
	      CaseOR  ==  00000085 
	      CaseOR  ==  00000088 
	         Call     GetBattleFlags ( *Var[0] )
	         If  *Var[0]  &  00000240 
	            Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
	         EndIf
	      EndCaseGroup
	   EndSwitch
	EndIf
	Return
	End

#new:Script $Script_8021D890
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	If  *Var[0]  ==  00000001 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560004 )
	   Goto     00000000 
	EndIf
	Call     GetLastElement ( *Var[0] )
	If  *Var[0]  &  00000400 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560004 )
	   Goto     00000000 
	EndIf
	Return
	Label    00000000 
	Call     8027D32C ( FFFFFF81 )
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  &  00080000 
	   Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	EndIf
	Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00800000 .True )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000001 00020001 .False )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00020001 .True )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00800000 .False )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00100000 .True )
	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub  *Var[2]  00000001 
	Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
	Call     PlaySoundAtActor 	( .Actor:Self 00000301 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Set  *Var[1]  00000000 
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.80078125] )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
	Call     $Function_802183A0 ( 00000096 0000000A )
	Thread
	   Call     ShakeCam    	( 00000001 00000000 00000005 *Fixed[0.7001953] )
	EndThread
	Call     GetEventType 	( .Actor:Self *Var[3] )
	If  *Var[3]  ==  0000000F
	   Call     SetAnimation 	( .Actor:Self 00000001 00560004 )
	   Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	   Add  *Var[4]  0000000A 
	   Add  *Var[5]  00000005 
	   Call     PlayEffect  	( {FX:SmokeBurst:Black} *Var[3] *Var[4] *Var[5] *Fixed[1.0] 0000000A 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	EndIf
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000001 00000000 )
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpToGoal  	( .Actor:Self 00000005 00000000 00000001 00000000 )
	Loop     00000014 
	   Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
	   Wait     00000001 
	   Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
	   Wait     00000001 
	EndLoop
	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
	Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
	Call     SetActorFlagBits 	( .Actor:Self 00000200 .False )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021E6D8 )
	Call     SetActorType 	( FFFFFF81 00000095 )
	Call     SetStatusTable ( .Actor:Self $StatusTable_8021D498 )
	Call     $Function_802182D4 ( FFFFFFF6 00000014 0000000A 00000020 )
	Call     SetActorFlagBits 	( .Actor:Self 00001000 .True )
	Call     8026F6EC ( FFFFFF81 )
	Call     GetIndexFromPos 	( .Actor:Self *Var[0] )
	Mod  *Var[0]  00000004 
	Call     SetGoalToIndex ( .Actor:Self *Var[0] )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     HPBarToHome 	( .Actor:Self )
	Return
	End

#new:Script $Script_RunAway
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     8027D32C ( FFFFFF81 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	If  *Var[0]  !=  .Event:ScareAway
	   Call     UseCamPreset 	( 0000000E )
	   Call     CamTargetActor ( .Actor:Self )
	   Call     MoveCamOver 	( 0000000F )
	   Wait     0000000F 
	   Call     UseCamPreset 	( 00000001 )
	EndIf
	Call     SetActorSpeed 	( .Actor:Self *Fixed[1.0] )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  00000014 
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Wait     0000000A 
	Call     SetActorAngle 	( .Actor:Self 000000B4 )
	Call     EnableActorBlur 	( .Actor:Self 00000001 )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[10.0] )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  000000C8 
	Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     RunToGoal   	( .Actor:Self 00000000 .False )
	Call     8027D7F0 ( )
	Call     UseCamPreset 	( 00000002 )
	ExecWait 80298BF0 
	Call     8027D32C ( FFFFFF81 )
	Call     RemoveActor 	( .Actor:Self )
	Return
	End

% Origin: HINT
#new:Script $Script_NextTurn_8021E0B0
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	ConstAND *Var[0] FFFFFFFE 
	Call     SetActorVar 	( .Actor:Self 00000000 *Var[0] )
	Return
	End

% Origin: HINT
#new:Script $Script_Init_8021E100
	Call     BindIdle    	( .Actor:Self $Script_Idle_8021D774 )
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80223B24 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021E6D8 )
	Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_8021E0B0 )
	Call     GetBattleVar 	( 00000002 *Var[0] )
	If  *Var[0]  ==  00000000 
	   Call     SetBattleVar 	( 00000002 FFFFFFFF )
	EndIf
	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000004 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000005 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000006 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000007 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000009 FFFFFFFF )
	Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
	Call     SetActorVar 	( .Actor:Self 0000000B FFFFFFFF )
	Return
	End

#new:Script $Script_Init_8021E2C0
	Call     BindIdle    	( .Actor:Self $Script_Idle_8021D774 )
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_80223B24 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021EDF0 )
	Call     GetBattleVar 	( 00000002 *Var[0] )
	If  *Var[0]  ==  00000000 
	   Call     SetBattleVar 	( 00000002 FFFFFFFF )
	EndIf
	Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000004 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000005 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000006 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000007 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000008 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000009 FFFFFFFF )
	Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
	Call     SetActorVar 	( .Actor:Self 0000000B FFFFFFFF )
	Return
	End

#new:Script $Script_8021E46C
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	If  *Var[0]  ==  00000001 
	   Return
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
	Call     ActorExists 	( *Var[0] *Var[1] )
	If  *Var[1]  ==  00000000 
	   Return
	EndIf
	Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
	Call     GetLastElement ( *Var[A] )
	If  *Var[A]  &  20000000 
	   Label    00000000 
	   Call     GetBattleFlags ( *Var[A] )
	   If  *Var[A]  &  00000100 
	      Wait     00000001 
	      Goto     00000000 
	   EndIf
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000009 *Var[0] )
	Call     SetActorVar 	( .Actor:Self 00000009 FFFFFFFF )
	Call     GetActorFlags 	( .Actor:Self *Var[A] )
	If  *Var[A]  &  00000200 
	   Call     SetSpriteEventBits 	( .Actor:Self 00000002 00400000 .False )
	Else
	   Call     SetSpriteEventBits 	( .Actor:Self 00000001 00400000 .False )
	EndIf
	Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
	Call     RemoveActor 	( *Var[0] )
	Thread
	   Add  *Var[3]  00000002 
	   Loop     00000002 
	      Call     PlayEffect  	( {FX:BigSmokePuff} *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	      Wait     00000002 
	   EndLoop
	EndThread
	Return
	End

#new:Script $Script_HandleEvent_8021E6D8
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetSpriteAlpha ( .Actor:Self 00000001 000000FF )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   Case  ==  .Event:HitCombo
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      ConstOR  *Var[0] 00000001 
	      Call     SetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560004 
	      ExecWait DoNormalHit 
	   CaseOR  ==  .Event:Hit
	   CaseOR  ==  .Event:UpAndAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560004 
	      ExecWait DoNormalHit 
	      ExecWait $Script_8021E46C 
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560005 
	      SetConst  *Var[2]  00560006 
	      ExecWait DoBurnHit 
	      ExecWait $Script_8021E46C 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560005 
	      SetConst  *Var[2]  00560006 
	      ExecWait DoBurnHit 
	      ExecWait $Script_8021E46C 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560006 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560004 
	      ExecWait 8029B998 
	      ExecWait $Script_8021E46C 
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560004 
	      ExecWait 8029B998 
	      ExecWait $Script_8021E46C 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560004 
	      ExecWait DoDeath 
	      Return
	   Case  ==  00000017
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560001 
	      ExecWait DoImmune 
	   Case  ==  .Event:Immune
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560001 
	      ExecWait DoImmune 
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      If  *Var[0]  &  00000001 
	         ExecWait $Script_8021E46C 
	         Return
	      EndIf
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  !=  00000000 
	         ExecWait $Script_8021E46C 
	      EndIf
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560004 
	      ExecWait DoNormalHit 
	      ExecWait $Script_8021E46C 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560004 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560001 
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      ExecWait $Script_8021E46C 
	      Call     SetAnimation 	( .Actor:Self 00000001 00560004 )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
	      Wait     0000000F 
	      Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
	      ExecWait $Script_RunAway 
	      Return
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560002 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      ExecWait $Script_8021E46C 
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  !&  0035D000 
	         If  *Var[0]  &  00080000 
	            Call     SetSpriteOffset 	( .Actor:Self 00000001 00000000 00000002 00000000 )
	         Else
	            Call     SetSpriteOffset 	( .Actor:Self 00000001 FFFFFFFC 00000005 00000000 )
	         EndIf
	      EndIf
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560004 
	      ExecWait DoBlowAway 
	      Return
	   Case  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560001 
	      ExecWait DoImmune 
	   Case  ==  .Event:StarBeam
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00560004 
	      ExecWait DoNormalHit 
	      ExecWait $Script_8021E46C 
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_HandleEvent_8021EDF0
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetSpriteAlpha ( .Actor:Self 00000002 000000FF )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   Case  ==  .Event:HitCombo
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      ConstOR  *Var[0] 00000001 
	      Call     SetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      ExecWait $Script_8021D784 
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570004 
	      ExecWait DoNormalHit 
	   CaseOR  ==  .Event:Hit
	   CaseOR  ==  .Event:FallTrigger
	      ExecWait $Script_8021D784 
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570004 
	      ExecWait DoNormalHit 
	      ExecWait $Script_8021E46C 
	      ExecWait $Script_8021D890 
	   EndCaseGroup
	   Case  ==  .Event:UpAndAway
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570004 
	      ExecWait DoNormalHit 
	      ExecWait $Script_8021E46C 
	   CaseOR  ==  .Event:BurnHit
	   CaseOR  ==  0000000F
	      ExecWait $Script_8021D784 
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570005 
	      SetConst  *Var[2]  00570006 
	      ExecWait DoBurnHit 
	      ExecWait $Script_8021E46C 
	      ExecWait $Script_8021D890 
	   EndCaseGroup
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570005 
	      SetConst  *Var[2]  00570006 
	      ExecWait DoBurnHit 
	      ExecWait $Script_8021E46C 
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570006 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570004 
	      ExecWait 8029B998 
	      ExecWait $Script_8021E46C 
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570004 
	      ExecWait 8029B998 
	      ExecWait $Script_8021E46C 
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570004 
	      ExecWait DoDeath 
	      Return
	   Case  ==  00000017
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570001 
	      ExecWait DoImmune 
	   Case  ==  .Event:Immune
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570001 
	      ExecWait DoImmune 
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	      If  *Var[0]  &  00000001 
	         ExecWait $Script_8021E46C 
	         Return
	      EndIf
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  !=  00000000 
	         ExecWait $Script_8021E46C 
	      EndIf
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570004 
	      ExecWait DoNormalHit 
	      ExecWait $Script_8021E46C 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570004 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:BeginFirstStrike
	      Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
	      Call     HPBarToCurrent ( .Actor:Self )
	   Case  ==  .Event:EndFirstStrike
	      Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     SetActorSpeed 	( .Actor:Self *Fixed[4.0] )
	      Call     MoveToGoal  	( .Actor:Self 00000000 00000001 .Easing:Linear )
	      Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
	      Call     HPBarToHome 	( .Actor:Self )
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570001 
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      ExecWait $Script_8021E46C 
	      Call     SetAnimation 	( .Actor:Self 00000002 00570004 )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.5] )
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000001 00000000 )
	      Wait     0000000F 
	      Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
	      ExecWait $Script_RunAway 
	      Return
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570002 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      ExecWait $Script_8021E46C 
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  !&  0035D000 
	         If  *Var[0]  &  00080000 
	            Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFFD 00000000 00000000 )
	         Else
	            Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFF1 00000000 00000000 )
	         EndIf
	      EndIf
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570004 
	      ExecWait DoBlowAway 
	      Return
	   Case  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570001 
	      ExecWait DoImmune 
	   Case  ==  .Event:StarBeam
	      SetConst  *Var[0]  00000002 
	      SetConst  *Var[1]  00570004 
	      ExecWait DoNormalHit 
	      ExecWait $Script_8021E46C 
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_HealOne
	Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
	Call     SetActorVar 	( .Actor:Self 0000000B 00000000 )
	Call     ActorVarAdd 	( .Actor:Self 00000004 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000000E )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 0000000F )
	Wait     0000000F 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
	EndIf
	Wait     00000005 
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      Sub  *Var[0]  00000006 
	      Add  *Var[1]  0000000C 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Else
	      Sub  *Var[0]  00000010 
	      Add  *Var[1]  0000001F 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	Else
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      Sub  *Var[0]  0000000C 
	      Add  *Var[1]  0000000E 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Else
	      Sub  *Var[0]  0000001E 
	      Add  *Var[1]  00000024 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	EndIf
	Wait     0000001E 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
	EndIf
	Wait     00000005 
	Thread
	   Wait     00000005 
	   Call     PlaySoundAtActor 	( *Var[B] 0000206D )
	   Call     PlaySoundAtActor 	( *Var[B] 00000214 )
	   Wait     0000001E 
	   Call     PlaySoundAtActor 	( *Var[B] 0000025C )
	EndThread
	Thread
	   Call     8026BF48 ( 00000001 )
	   Call     HealActor   	( *Var[B] 00000000 00000000 )
	   Call     8026BF48 ( 00000000 )
	EndThread
	Call     8027114C ( )
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 0000000A )
	Wait     0000000A 
	Call     8027D7F0 ( )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_HealAll
	Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
	Call     SetActorVar 	( .Actor:Self 0000000B 00000001 )
	Call     ActorVarAdd 	( .Actor:Self 00000003 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000000E )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 0000000F )
	Wait     0000000F 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
	EndIf
	Wait     00000005 
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      Sub  *Var[0]  00000006 
	      Add  *Var[1]  0000000C 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Else
	      Sub  *Var[0]  00000010 
	      Add  *Var[1]  0000001F 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	Else
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      Sub  *Var[0]  0000000C 
	      Add  *Var[1]  0000000E 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Else
	      Sub  *Var[0]  0000001E 
	      Add  *Var[1]  00000024 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:RedEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	EndIf
	Wait     0000001E 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
	EndIf
	Wait     00000005 
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Set  *Flag[00]  00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetActorType 	( *Var[0] *Var[1] )
	If  *Var[1]  ==  00000047 
	   Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
	   If  *Var[1]  ==  00000001 
	      Set  *Flag[00]  00000001 
	   EndIf
	EndIf
	If  *Flag[00]  ==  00000000 
	   Thread
	      Wait     00000005 
	      Call     PlaySoundAtActor 	( *Var[0] 0000206D )
	      Call     PlaySoundAtActor 	( *Var[0] 00000214 )
	      Wait     0000001E 
	      Call     PlaySoundAtActor 	( *Var[0] 0000025C )
	   EndThread
	   Thread
	      Call     8026BF48 ( 00000001 )
	      Call     HealActor   	( *Var[0] 00000000 00000001 )
	      Call     8026BF48 ( 00000000 )
	   EndThread
	EndIf
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	Call     8027114C ( )
	Wait     00000001 
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 0000000A )
	Wait     0000000A 
	Call     8027D7F0 ( )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_ShapeSpell
	Call     SetActorVar 	( .Actor:Self 0000000B 00000002 )
	Set  *Flag[00]  00000000 
	Set  *Flag[01]  00000000 
	Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
	If  *Var[0]  ==  00000001 
	   Set  *Flag[00]  00000001 
	   Call     GetActorVar 	( .Actor:Self 00000009 *Var[A] )
	EndIf
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  &  00000200 
	   Set  *Flag[01]  00000001 
	EndIf
	Call     UseIdleAnimation 	( .Actor:Self .False )
	If  *Flag[00]  ==  00000001 
	   Call     UseIdleAnimation 	( *Var[A] .False )
	EndIf
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     UseCamPreset 	( 00000002 )
	   Call     MoveCamOver 	( 00000001 )
	Else
	   Call     UseCamPreset 	( 00000002 )
	   Call     MoveCamOver 	( 0000000A )
	EndIf
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
	If  *Flag[01]  ==  00000000 
	   If  *Flag[00]  ==  00000001 
	      Call     SetAnimation 	( *Var[A] 00000001 00560002 )
	      Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000011 
	      Add  *Var[1]  00000021 
	      Call     PlayEffect  	( {FX:GatherMagic:Pink} *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	   Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[3] )
	   If  *Var[3]  &  00080000 
	      Sub  *Var[0]  00000006 
	      Add  *Var[1]  0000000D 
	   Else
	      Sub  *Var[0]  00000011 
	      Add  *Var[1]  00000021 
	   EndIf
	   Call     PlayEffect  	( {FX:GatherMagic:Pink} *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Else
	   If  *Flag[00]  ==  00000001 
	      Call     SetAnimation 	( *Var[A] 00000001 00570002 )
	      Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  0000001E 
	      Add  *Var[1]  00000024 
	      Call     PlayEffect  	( {FX:GatherMagic:Pink} *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	   Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[3] )
	   If  *Var[3]  &  00080000 
	      Sub  *Var[0]  0000000C 
	      Add  *Var[1]  0000000E 
	   Else
	      Sub  *Var[0]  0000001E 
	      Add  *Var[1]  00000024 
	   EndIf
	   Call     PlayEffect  	( {FX:GatherMagic:Pink} *Var[0] *Var[1] *Var[2] *Fixed[0.5] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	EndIf
	Wait     0000001E 
	Call     CheckPlayerHit ( .Actor:Self *Var[9] 00000000 00000000 00000001 00000010 )
	Switch  *Var[9] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      If  *Flag[00]  ==  00000001 
	         Call     PlaySoundAtActor 	( *Var[A] .Sound:SpellCast2 )
	      EndIf
	      Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
	      If  *Flag[01]  ==  00000000 
	         If  *Flag[00]  ==  00000001 
	            Call     SetAnimation 	( *Var[A] 00000001 00560003 )
	         EndIf
	         Call     SetAnimation 	( .Actor:Self 00000001 00560003 )
	      Else
	         If  *Flag[00]  ==  00000001 
	            Call     SetAnimation 	( *Var[A] 00000001 00570003 )
	         EndIf
	         Call     SetAnimation 	( .Actor:Self 00000002 00570003 )
	      EndIf
	      Wait     00000005 
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[4] *Var[5] *Var[6] )
	      Sub  *Var[4]  00000032 
	      Set  *Var[5]  00000000 
	      If  *Flag[01]  ==  00000000 
	         If  *Flag[00]  ==  00000001 
	            Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
	            Sub  *Var[0]  00000014 
	            Add  *Var[1]  00000014 
	            Call     $Function_80218150 ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 0000001E )
	         EndIf
	         Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     GetStatusFlags ( .Actor:Self *Var[3] )
	         If  *Var[3]  &  00080000 
	            Sub  *Var[0]  00000008 
	            Add  *Var[1]  00000008 
	         Else
	            Sub  *Var[0]  00000014 
	            Add  *Var[1]  00000014 
	         EndIf
	         Call     $Function_80218150 ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 0000001E )
	      Else
	         If  *Flag[00]  ==  00000001 
	            Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
	            Sub  *Var[0]  00000014 
	            Add  *Var[1]  00000014 
	            Call     $Function_80218150 ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 0000001E )
	         EndIf
	         Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	         Call     GetStatusFlags ( .Actor:Self *Var[3] )
	         If  *Var[3]  &  00080000 
	            Sub  *Var[0]  00000008 
	            Add  *Var[1]  00000008 
	         Else
	            Sub  *Var[0]  00000014 
	            Add  *Var[1]  00000014 
	         EndIf
	         Call     $Function_80218150 ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 0000001E )
	      EndIf
	      Wait     00000032 
	      If  *Var[9]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Wait     0000000F 
	      Call     8027D7F0 ( )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      If  *Flag[00]  ==  00000001 
	         Call     UseIdleAnimation 	( *Var[A] .True )
	      EndIf
	      Return
	   EndCaseGroup
	EndSwitch
	If  *Flag[00]  ==  00000001 
	   Call     PlaySoundAtActor 	( *Var[A] .Sound:SpellCast2 )
	EndIf
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast2 )
	If  *Flag[01]  ==  00000000 
	   If  *Flag[00]  ==  00000001 
	      Call     SetAnimation 	( *Var[A] 00000001 00560003 )
	   EndIf
	   Call     SetAnimation 	( .Actor:Self 00000001 00560003 )
	Else
	   If  *Flag[00]  ==  00000001 
	      Call     SetAnimation 	( *Var[A] 00000001 00570003 )
	   EndIf
	   Call     SetAnimation 	( .Actor:Self 00000002 00570003 )
	EndIf
	Wait     00000005 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[4] *Var[5] *Var[6] )
	If  *Flag[01]  ==  00000000 
	   If  *Flag[00]  ==  00000001 
	      Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000014 
	      Add  *Var[1]  00000014 
	      Call     $Function_80218150 ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 00000014 )
	   EndIf
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[3] )
	   If  *Var[3]  &  00080000 
	      Sub  *Var[0]  00000008 
	      Add  *Var[1]  00000008 
	   Else
	      Sub  *Var[0]  00000014 
	      Add  *Var[1]  00000014 
	   EndIf
	   Call     $Function_80218150 ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 00000014 )
	Else
	   If  *Flag[00]  ==  00000001 
	      Call     GetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000014 
	      Add  *Var[1]  00000014 
	      Call     $Function_80218150 ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 00000014 )
	   EndIf
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[3] )
	   If  *Var[3]  &  00080000 
	      Sub  *Var[0]  00000008 
	      Add  *Var[1]  00000008 
	   Else
	      Sub  *Var[0]  00000014 
	      Add  *Var[1]  00000014 
	   EndIf
	   Call     $Function_80218150 ( *Var[0] *Var[1] *Var[6] *Var[4] *Var[5] *Var[6] 00000014 )
	EndIf
	Wait     00000012 
	If  *Flag[00]  ==  00000001 
	   Wait     00000002 
	   Call     DamageTarget 	( .Actor:Self *Var[0] 10000010 00000000 00000000 00000000 00000020 )
	Else
	   Wait     00000002 
	   Call     DamageTarget 	( .Actor:Self *Var[0] 10000010 00000000 00000000 00000003 00000020 )
	EndIf
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Wait     00000014 
	      Call     8027D7F0 ( )
	   EndCaseGroup
	EndSwitch
	Call     UseIdleAnimation 	( .Actor:Self .True )
	If  *Flag[00]  ==  00000001 
	   Call     UseIdleAnimation 	( *Var[A] .True )
	EndIf
	Return
	End

#new:Script $Script_80221144
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetIndexFromHome 	( *Var[0] *Var[1] )
	Mod  *Var[1]  00000004 
	Switch  *Var[1] 
	   Case  ==  00000000 
	      Set  *Flag[0B]  00000001 
	   Case  ==  00000001 
	      Set  *Flag[0C]  00000001 
	   Case  ==  00000002 
	      Set  *Flag[0D]  00000001 
	   Case  ==  00000003 
	      Set  *Flag[0E]  00000001 
	EndSwitch
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	Set  *Var[0]  FFFFFFFF 
	Call     GetIndexFromHome 	( .Actor:Self *Var[1] )
	Mod  *Var[1]  00000004 
	Switch  *Var[1] 
	   Case  ==  00000000 
	      If  *Flag[0C]  ==  00000000 
	         Set  *Var[0]  00000001 
	      EndIf
	   Case  ==  00000001 
	      If  *Flag[0B]  ==  00000000 
	         Set  *Var[0]  00000000 
	      EndIf
	      If  *Flag[0D]  ==  00000000 
	         Set  *Var[0]  00000002 
	      EndIf
	   Case  ==  00000002 
	      If  *Flag[0C]  ==  00000000 
	         Set  *Var[0]  00000001 
	      EndIf
	      If  *Flag[0E]  ==  00000000 
	         Set  *Var[0]  00000003 
	      EndIf
	   Case  ==  00000003 
	      If  *Flag[0D]  ==  00000000 
	         Set  *Var[0]  00000002 
	      EndIf
	EndSwitch
	If  *Var[0]  !=  FFFFFFFF 
	   Call     GetActorFlags 	( .Actor:Self *Var[1] )
	   If  *Var[1]  &  00000200 
	      Add  *Var[0]  00000004 
	   EndIf
	EndIf
	Return
	End

#new:Script $Script_HandleEvent_8022142C
	Return
	End

#new:Script $Script_Init_8022143C
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022142C )
	Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
	Return
	End

#new:Script $Script_Init_80221478
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022142C )
	Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
	Return
	End

#new:DefenseTable $DefenseTable_802214B4
.Element:Normal 00000000
.Element:End

#new:DefenseTable $DefenseTable_802214C0
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_802214CC
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:StatusTable $StatusTable_80221578
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_80221624
00800000 01000000 022300FF $IdleAnimations_8021D6D0 $DefenseTable_802214B4 00000020 00000000 FBF40000 00000000 

#new:SpriteTable $SpriteTable_80221648
00800000 01000000 F62300FF $IdleAnimations_8021D71C $DefenseTable_802214C0 00000020 00000000 00F80000 00000000 

#new:Actor $Magiclone
% stats
[Index]        4Fb 
[Level]        26`b 
[MaxHP]        11`b 
[Coins]         0`b 
[Flags]       00200000 
[StatusTable] $StatusTable_802214CC 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80221624 
[Script]      $Script_Init_8022143C 
% move effectiveness
[Escape]       40`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  75`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         36`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  32`b % dx dy

#new:Actor $FlyingMagiclone
% stats
[Index]        50b 
[Level]        26`b 
[MaxHP]        11`b 
[Coins]         2`b 
[Flags]       00200200 
[StatusTable] $StatusTable_80221578 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_80221648 
[Script]      $Script_Init_80221478 
% move effectiveness
[Escape]       40`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  75`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         48`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -25`b  20`b % dx dy
[StatusIcon]    1`b  34`b % dx dy

#new:Vector3D $Vector3D_802216BC
0` -1000` 0`

#new:SpecialFormation $SpecialFormation_802216C8
$Magiclone $Vector3D_802216BC 00000000 00000000 00000000 00000000 00000000 

#new:SpecialFormation $SpecialFormation_802216E4
$FlyingMagiclone $Vector3D_802216BC 00000000 00000000 00000000 00000000 00000000 

#new:Script $Script_MakeCopy
	Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
	If  *Var[0]  ==  00000001 
	   ExecWait $Script_RunAway 
	   Return
	EndIf
	Call     SetActorVar 	( .Actor:Self 0000000A 00000001 )
	Call     SetActorVar 	( .Actor:Self 0000000B 00000003 )
	Set  *Flag[00]  00000000 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  &  00000200 
	   Set  *Flag[00]  00000001 
	EndIf
	If  *Flag[00]  ==  00000000 
	   Call     SummonEnemy 	( $SpecialFormation_802216C8 00000000 )
	Else
	   Call     SummonEnemy 	( $SpecialFormation_802216E4 00000000 )
	EndIf
	Call     SetActorVar 	( .Actor:Self 00000009 *Var[0] )
	Set  *Var[A]  *Var[0] 
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     EnableIdleScript 	( *Var[A] 00000000 )
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     UseIdleAnimation 	( *Var[A] .False )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000000E )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 00000019 )
	Wait     00000019 
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast3 )
	If  *Flag[00]  ==  00000000 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
	   Call     SetAnimation 	( *Var[A] 00000001 00560002 )
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Add  *Var[1]  00000017 
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
	   Call     SetAnimation 	( *Var[A] 00000001 00570002 )
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Add  *Var[1]  00000017 
	EndIf
	Call     PlayEffect  	( {FX:EnergyIn:Stars} *Var[0] *Var[1] *Var[2] *Fixed[1.0] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Wait     0000000A 
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     EnableIdleScript 	( *Var[9] 00000001 )
	Wait     0000001E 
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[2]  FFFFFFFD 
	Call     SetActorPos 	( *Var[A] *Var[0] *Var[1] *Var[2] )
	Set  *Var[9]  *Var[A] 
	Wait     0000000F 
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 0000001E )
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast4 )
	Call     PlaySoundAtActor 	( *Var[9] .Sound:SpellCast4 )
	Call     SetSpriteFlagBits 	( *Var[9] 00000001 00800000 .False )
	Call     RandInt     	( 000003E8 *Var[0] )
	If  *Var[0]  <  000001F4 
	   Call     SetActorSpeed 	( .Actor:Self *Fixed[2.0] )
	   ExecWait $Script_80221144 
	   Call     SetGoalToIndex ( .Actor:Self *Var[0] )
	   Call     MoveToGoal  	( .Actor:Self 00000000 00000000 .Easing:Linear )
	Else
	   Call     SetActorSpeed 	( *Var[9] *Fixed[2.0] )
	   ExecWait $Script_80221144 
	   Call     SetGoalToIndex ( *Var[9] *Var[0] )
	   Call     MoveToGoal  	( *Var[9] 00000000 00000000 .Easing:Linear )
	EndIf
	Call     SetSpriteFlagBits 	( *Var[9] 00000001 00800000 .True )
	Call     GetActorHP  	( .Actor:Self *Var[0] )
	Call     SetEnemyHP  	( *Var[9] *Var[0] )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     ForceHomePos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     HPBarToHome 	( .Actor:Self )
	Call     GetActorPos 	( *Var[9] *Var[0] *Var[1] *Var[2] )
	Call     ForceHomePos 	( *Var[9] *Var[0] *Var[1] *Var[2] )
	Call     HPBarToHome 	( *Var[9] )
	If  *Flag[00]  ==  00000000 
	   Call     SetSpriteEventBits 	( .Actor:Self 00000001 00400000 .True )
	Else
	   Call     SetSpriteEventBits 	( .Actor:Self 00000002 00400000 .True )
	EndIf
	If  *Flag[00]  ==  00000000 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
	   Call     SetAnimation 	( *Var[9] 00000001 00560001 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
	   Call     SetAnimation 	( *Var[9] 00000001 00570001 )
	EndIf
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Call     UseIdleAnimation 	( *Var[9] .True )
	Return
	End

#new:Script $Script_BoostAttack
	Set  *Flag[00]  00000000 
	Label    0000000A 
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetIndexFromHome 	( *Var[0] *Var[1] )
	Call     GetBattleVar 	( 00000002 *Var[2] )
	If  *Var[1]  >  *Var[2] 
	   Call     $Function_802183F8 ( *Var[0] *Var[3] )
	   If  *Var[3]  ==  00000000 
	      Call     GetActorAttackBoost 	( *Var[0] *Var[4] )
	      If  *Var[4]  <  00000000 
	         Set  *Var[8]  *Var[0] 
	         Call     SetBattleVar 	( 00000002 *Var[1] )
	         Goto     00000064 
	      EndIf
	   EndIf
	EndIf
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	If  *Flag[00]  ==  00000000 
	   Set  *Flag[00]  00000001 
	   Call     SetBattleVar 	( 00000002 FFFFFFFF )
	   Goto     0000000A 
	EndIf
	Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
	If  *Var[0]  ==  00000001 
	   ExecWait $Script_RunAway 
	   Return
	EndIf
	ExecWait $Script_ShapeSpell 
	Return
	Label    00000064 
	Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
	Call     SetActorVar 	( .Actor:Self 0000000B 00000004 )
	Call     ActorVarAdd 	( .Actor:Self 00000005 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000000E )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 0000000F )
	Wait     0000000F 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
	EndIf
	Wait     00000005 
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      Sub  *Var[0]  00000006 
	      Add  *Var[1]  0000000C 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Else
	      Sub  *Var[0]  00000010 
	      Add  *Var[1]  0000001F 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	Else
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      Sub  *Var[0]  0000000C 
	      Add  *Var[1]  0000000E 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Else
	      Sub  *Var[0]  0000001E 
	      Add  *Var[1]  00000024 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	EndIf
	Wait     0000001E 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
	EndIf
	Wait     00000005 
	Thread
	   Wait     0000000A 
	   Call     PlaySoundAtActor 	( *Var[8] 000002DD )
	EndThread
	Thread
	   Call     8026BF48 ( 00000001 )
	   Call     BoostAttack 	( *Var[8] 00000000 )
	   Call     8026BF48 ( 00000000 )
	EndThread
	Call     8027114C ( )
	Call     UseCamPreset 	( 00000002 )
	Wait     0000000A 
	Call     8027D7F0 ( )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_BoostDefense
	Set  *Flag[00]  00000000 
	Label    0000000A 
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetIndexFromHome 	( *Var[0] *Var[1] )
	Call     GetBattleVar 	( 00000002 *Var[2] )
	If  *Var[1]  >  *Var[2] 
	   Call     $Function_802183F8 ( *Var[0] *Var[3] )
	   If  *Var[3]  ==  00000000 
	      Call     GetActorDefenseBoost 	( *Var[0] *Var[4] )
	      If  *Var[4]  <  00000000 
	         Set  *Var[8]  *Var[0] 
	         Call     SetBattleVar 	( 00000002 *Var[1] )
	         Goto     00000064 
	      EndIf
	   EndIf
	EndIf
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	If  *Flag[00]  ==  00000000 
	   Set  *Flag[00]  00000001 
	   Call     SetBattleVar 	( 00000002 FFFFFFFF )
	   Goto     0000000A 
	EndIf
	Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
	If  *Var[0]  ==  00000001 
	   ExecWait $Script_RunAway 
	   Return
	EndIf
	ExecWait $Script_ShapeSpell 
	Return
	Label    00000064 
	Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
	Call     SetActorVar 	( .Actor:Self 0000000B 00000005 )
	Call     ActorVarAdd 	( .Actor:Self 00000006 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000000E )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 0000000F )
	Wait     0000000F 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
	EndIf
	Wait     00000005 
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      Sub  *Var[0]  00000006 
	      Add  *Var[1]  0000000C 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Else
	      Sub  *Var[0]  00000010 
	      Add  *Var[1]  0000001F 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	Else
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      Sub  *Var[0]  0000000C 
	      Add  *Var[1]  0000000E 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Else
	      Sub  *Var[0]  0000001E 
	      Add  *Var[1]  00000024 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:YellowEnergy} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	EndIf
	Wait     0000001E 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
	EndIf
	Wait     00000005 
	Thread
	   Wait     0000000A 
	   Call     PlaySoundAtActor 	( *Var[8] 000002DD )
	EndThread
	Thread
	   Call     8026BF48 ( 00000001 )
	   Call     BoostDefense 	( *Var[8] 00000000 )
	   Call     8026BF48 ( 00000000 )
	EndThread
	Call     8027114C ( )
	Call     UseCamPreset 	( 00000002 )
	Wait     0000000A 
	Call     8027D7F0 ( )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_Electrify
	Set  *Flag[00]  00000000 
	Label    0000000A 
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetIndexFromHome 	( *Var[0] *Var[1] )
	Call     GetBattleVar 	( 00000002 *Var[2] )
	If  *Var[1]  >  *Var[2] 
	   Call     $Function_802183F8 ( *Var[0] *Var[3] )
	   If  *Var[3]  ==  00000000 
	      Call     GetStatusFlags ( *Var[0] *Var[4] )
	      If  *Var[4]  !&  04002000 
	         Set  *Var[8]  *Var[0] 
	         Call     SetBattleVar 	( 00000002 *Var[1] )
	         Goto     00000064 
	      EndIf
	   EndIf
	EndIf
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	If  *Flag[00]  ==  00000000 
	   Set  *Flag[00]  00000001 
	   Call     SetBattleVar 	( 00000002 FFFFFFFF )
	   Goto     0000000A 
	EndIf
	Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
	If  *Var[0]  ==  00000001 
	   ExecWait $Script_RunAway 
	   Return
	EndIf
	ExecWait $Script_ShapeSpell 
	Return
	Label    00000064 
	Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
	Call     SetActorVar 	( .Actor:Self 0000000B 00000006 )
	Call     ActorVarAdd 	( .Actor:Self 00000007 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000000E )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 0000000F )
	Wait     0000000F 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
	EndIf
	Wait     00000005 
	Call     PlaySoundAtActor 	( .Actor:Self 000002F0 )
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      Sub  *Var[0]  00000006 
	      Add  *Var[1]  0000000C 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:SnakingStatic} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Else
	      Sub  *Var[0]  00000010 
	      Add  *Var[1]  0000001F 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:SnakingStatic} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	Else
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      Sub  *Var[0]  0000000C 
	      Add  *Var[1]  0000000E 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:SnakingStatic} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Else
	      Sub  *Var[0]  0000001E 
	      Add  *Var[1]  00000024 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:SnakingStatic} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	EndIf
	Wait     0000001E 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
	EndIf
	Wait     00000005 
	Thread
	   Wait     0000000A 
	   Loop     00000004 
	      Call     PlaySoundAtActor 	( *Var[8] 000003D2 )
	      Call     RandInt     	( 00000003 *Var[0] )
	      Add  *Var[0]  00000003 
	      Wait     *Var[0] 
	   EndLoop
	EndThread
	Thread
	   Call     8026BF48 ( 00000001 )
	   Call     ElectrifyActor ( *Var[8] 00000000 )
	   Call     8026BF48 ( 00000000 )
	EndThread
	Call     8027114C ( )
	Call     UseCamPreset 	( 00000002 )
	Wait     0000000A 
	Call     8027D7F0 ( )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_Vanish
	Set  *Flag[00]  00000000 
	Label    0000000A 
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetIndexFromHome 	( *Var[0] *Var[1] )
	Call     GetBattleVar 	( 00000002 *Var[2] )
	If  *Var[1]  >  *Var[2] 
	   Call     $Function_802183F8 ( *Var[0] *Var[3] )
	   If  *Var[3]  ==  00000000 
	      Call     GetStatusFlags ( *Var[0] *Var[4] )
	      If  *Var[4]  !&  04002000 
	         Set  *Var[8]  *Var[0] 
	         Call     SetBattleVar 	( 00000002 *Var[1] )
	         Goto     00000064 
	      EndIf
	   EndIf
	EndIf
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	If  *Flag[00]  ==  00000000 
	   Set  *Flag[00]  00000001 
	   Call     SetBattleVar 	( 00000002 FFFFFFFF )
	   Goto     0000000A 
	EndIf
	Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
	If  *Var[0]  ==  00000001 
	   ExecWait $Script_RunAway 
	   Return
	EndIf
	ExecWait $Script_ShapeSpell 
	Return
	Label    00000064 
	Call     SetActorVar 	( .Actor:Self 0000000A 00000000 )
	Call     SetActorVar 	( .Actor:Self 0000000B 00000007 )
	Call     ActorVarAdd 	( .Actor:Self 00000008 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000000E )
	Call     CamTargetActor ( .Actor:Self )
	Call     MoveCamOver 	( 0000000F )
	Wait     0000000F 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560002 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570002 )
	EndIf
	Wait     00000005 
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:SpellCast1 )
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      Sub  *Var[0]  00000006 
	      Add  *Var[1]  0000000C 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:WhiteWaves} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Else
	      Sub  *Var[0]  00000010 
	      Add  *Var[1]  0000001F 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:WhiteWaves} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	Else
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      Sub  *Var[0]  0000000C 
	      Add  *Var[1]  0000000E 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:WhiteWaves} *Var[0] *Var[1] *Var[2] *Fixed[0.12011719] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   Else
	      Sub  *Var[0]  0000001E 
	      Add  *Var[1]  00000024 
	      Sub  *Var[2]  00000002 
	      Call     PlayEffect  	( {FX:RadialFlowOut:WhiteWaves} *Var[0] *Var[1] *Var[2] *Fixed[0.30078125] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	   EndIf
	EndIf
	Wait     0000001E 
	Call     GetActorFlags 	( .Actor:Self *Var[0] )
	If  *Var[0]  !&  00000200 
	   Call     SetAnimation 	( .Actor:Self 00000001 00560001 )
	Else
	   Call     SetAnimation 	( .Actor:Self 00000002 00570001 )
	EndIf
	Wait     00000005 
	Thread
	   Wait     0000000A 
	   Call     PlaySoundAtActor 	( *Var[8] 000002DB )
	EndThread
	Thread
	   Call     8026BF48 ( 00000001 )
	   Call     VanishActor 	( *Var[8] 00000000 )
	   Call     8026BF48 ( 00000000 )
	EndThread
	Call     8027114C ( )
	Call     UseCamPreset 	( 00000002 )
	Wait     0000000A 
	Call     8027D7F0 ( )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_80223B24
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   ExecWait $Script_ShapeSpell 
	   Return
	EndIf
	Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
	If  *Var[0]  ==  00000001 
	   Goto     00000014 
	EndIf
	Set  *Var[A]  00000000 
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000000 
	Set  *Flag[00]  00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetActorType 	( *Var[0] *Var[1] )
	If  *Var[1]  ==  00000047 
	   Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
	   If  *Var[1]  ==  00000001 
	      Set  *Flag[00]  00000001 
	   EndIf
	EndIf
	Call     GetActorHP  	( *Var[0] *Var[2] )
	Call     GetEnemyMaxHP 	( *Var[0] *Var[3] )
	MulF  *Var[2]  *Fixed[100.0] 
	DivF  *Var[2]  *Var[3] 
	If  *Flag[00]  ==  00000000 
	   If  *Var[2]  <=  00000000 
	      Call     RandInt     	( 00000063 *Var[4] )
	      Add  *Var[4]  00000001 
	      If  *Var[4]  <  00000000 
	         Add  *Var[A]  00000001 
	         Set  *Var[B]  *Var[0] 
	      EndIf
	   EndIf
	EndIf
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000000 
	EndIf
	If  *Var[A]  >  00000000 
	   Goto     0000000A 
	EndIf
	Set  *Var[A]  00000000 
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000001 
	Set  *Flag[00]  00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetActorType 	( *Var[0] *Var[1] )
	If  *Var[1]  ==  00000047 
	   Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
	   If  *Var[1]  ==  00000001 
	      Set  *Flag[00]  00000001 
	   EndIf
	EndIf
	Call     GetActorHP  	( *Var[0] *Var[2] )
	Call     GetEnemyMaxHP 	( *Var[0] *Var[3] )
	MulF  *Var[2]  *Fixed[100.0] 
	DivF  *Var[2]  *Var[3] 
	If  *Flag[00]  ==  00000000 
	   If  *Var[2]  <=  00000000 
	      Call     RandInt     	( 00000063 *Var[4] )
	      Add  *Var[4]  00000001 
	      If  *Var[4]  <  00000000 
	         Add  *Var[A]  00000001 
	         Set  *Var[B]  *Var[0] 
	      EndIf
	   EndIf
	EndIf
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000001 
	EndIf
	If  *Var[A]  >  00000000 
	   Goto     0000000A 
	EndIf
	Set  *Var[A]  00000000 
	Call     CreateTargetList 	( 00008002 )
	Call     InitTargetIterator 	( )
	Label    00000002 
	Set  *Flag[00]  00000000 
	Call     GetOwnerTarget ( *Var[0] *Var[1] )
	Call     GetActorType 	( *Var[0] *Var[1] )
	If  *Var[1]  ==  00000047 
	   Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
	   If  *Var[1]  ==  00000001 
	      Set  *Flag[00]  00000001 
	   EndIf
	EndIf
	Call     GetActorHP  	( *Var[0] *Var[2] )
	Call     GetEnemyMaxHP 	( *Var[0] *Var[3] )
	MulF  *Var[2]  *Fixed[100.0] 
	DivF  *Var[2]  *Var[3] 
	If  *Flag[00]  ==  00000000 
	   If  *Var[2]  <=  00000000 
	      Call     RandInt     	( 00000063 *Var[4] )
	      Add  *Var[4]  00000001 
	      If  *Var[4]  <  00000000 
	         Add  *Var[A]  00000001 
	         Set  *Var[B]  *Var[0] 
	      EndIf
	   EndIf
	EndIf
	Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	If  *Var[0]  !=  FFFFFFFF 
	   Goto     00000002 
	EndIf
	If  *Var[A]  >  00000000 
	   Goto     0000000A 
	EndIf
	Goto     00000014 
	Label    0000000A 
	Call     8026A14C ( FFFFFF81 00008002 *Var[0] )
	If  *Var[0]  ==  00000001 
	   ExecWait $Script_RunAway 
	   Return
	EndIf
	If  *Var[A]  ==  00000001 
	   Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
	   If  *Var[0]  <  00000000 
	      Call     RandInt     	( 000003E8 *Var[0] )
	      If  *Var[0]  <  00000000 
	         ExecWait $Script_HealOne 
	         Return
	      EndIf
	   Else
	      Call     GetActorVar 	( .Actor:Self 00000003 *Var[0] )
	      If  *Var[0]  <  00000000 
	         Call     RandInt     	( 000003E8 *Var[0] )
	         If  *Var[0]  <  00000000 
	            ExecWait $Script_HealAll 
	            Return
	         EndIf
	      EndIf
	   EndIf
	Else
	   Call     GetActorVar 	( .Actor:Self 00000003 *Var[0] )
	   If  *Var[0]  <  00000000 
	      Call     RandInt     	( 000003E8 *Var[0] )
	      If  *Var[0]  <  00000000 
	         ExecWait $Script_HealAll 
	         Return
	      EndIf
	   Else
	      Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
	      If  *Var[0]  <  00000000 
	         SetF  *Var[9]  *Fixed[100.0] 
	         Call     CreateTargetList 	( 00008002 )
	         Call     InitTargetIterator 	( )
	         Label    0000000B 
	         Set  *Flag[00]  00000000 
	         Call     GetOwnerTarget ( *Var[0] *Var[1] )
	         Call     GetActorType 	( *Var[0] *Var[1] )
	         If  *Var[1]  ==  00000047 
	            Call     GetActorVar 	( *Var[0] 00000008 *Var[1] )
	            If  *Var[1]  ==  00000001 
	               Set  *Flag[00]  00000001 
	            EndIf
	         EndIf
	         Call     GetActorHP  	( *Var[0] *Var[2] )
	         Call     GetEnemyMaxHP 	( *Var[0] *Var[3] )
	         MulF  *Var[2]  *Fixed[100.0] 
	         DivF  *Var[2]  *Var[3] 
	         If  *Flag[00]  ==  00000000 
	            If  *Var[2]  <=  *Var[9] 
	               SetF  *Var[9]  *Var[2] 
	               Set  *Var[B]  *Var[0] 
	            EndIf
	         EndIf
	         Call     ChooseNextTarget 	( .Iter:Next *Var[0] )
	         If  *Var[0]  !=  FFFFFFFF 
	            Goto     0000000B 
	         EndIf
	         Call     RandInt     	( 000003E8 *Var[0] )
	         If  *Var[0]  <  00000000 
	            ExecWait $Script_HealOne 
	            Return
	         EndIf
	      EndIf
	   EndIf
	EndIf
	Label    00000014 
	Set  *Var[A]  00000064 
	Set  *Var[B]  00000000 
	Set  *Var[C]  00000000 
	Set  *Var[D]  00000000 
	Set  *Var[E]  00000000 
	Set  *Var[F]  00000000 
	Call     GetActorVar 	( .Actor:Self 0000000A *Var[0] )
	If  *Var[0]  ==  00000001 
	   Set  *Var[A]  00000064 
	   Set  *Var[B]  00000000 
	   Set  *Var[C]  00000000 
	   Set  *Var[D]  00000000 
	   Set  *Var[E]  00000000 
	   Set  *Var[F]  00000000 
	   Goto     0000007B 
	Else
	   ExecWait $Script_80221144 
	   If  *Var[0]  ==  FFFFFFFF 
	      Set  *Var[B]  00000000 
	   EndIf
	EndIf
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  !=  00000000 
	   Set  *Var[B]  00000000 
	EndIf
	Call     GetActorVar 	( .Actor:Self 0000000B *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000004 
	      Call     GetActorVar 	( .Actor:Self 00000005 *Var[1] )
	      If  *Var[1]  <  00000000 
	         Call     RandInt     	( 00000063 *Var[0] )
	         Add  *Var[0]  00000001 
	         If  *Var[0]  <=  00000000 
	            Set  *Var[A]  00000000 
	            Set  *Var[B]  00000000 
	            Set  *Var[C]  00000064 
	            Set  *Var[D]  00000000 
	            Set  *Var[E]  00000000 
	            Set  *Var[F]  00000000 
	         EndIf
	      EndIf
	   Case  ==  00000005 
	      Call     GetActorVar 	( .Actor:Self 00000006 *Var[1] )
	      If  *Var[1]  <  00000000 
	         Call     RandInt     	( 00000063 *Var[0] )
	         Add  *Var[0]  00000001 
	         If  *Var[0]  <=  00000000 
	            Set  *Var[A]  00000000 
	            Set  *Var[B]  00000000 
	            Set  *Var[C]  00000000 
	            Set  *Var[D]  00000064 
	            Set  *Var[E]  00000000 
	            Set  *Var[F]  00000000 
	         EndIf
	      EndIf
	EndSwitch
	Call     GetActorVar 	( .Actor:Self 00000005 *Var[0] )
	If  *Var[0]  >=  00000000 
	   Set  *Var[C]  00000000 
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000006 *Var[0] )
	If  *Var[0]  >=  00000000 
	   Set  *Var[D]  00000000 
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000007 *Var[0] )
	If  *Var[0]  >=  00000000 
	   Set  *Var[E]  00000000 
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000008 *Var[0] )
	If  *Var[0]  >=  00000000 
	   Set  *Var[F]  00000000 
	EndIf
	Label    0000007B 
	Set  *Var[9]  00000000 
	Add  *Var[9]  *Var[A] 
	Add  *Var[9]  *Var[B] 
	Add  *Var[9]  *Var[C] 
	Add  *Var[9]  *Var[D] 
	Add  *Var[9]  *Var[E] 
	Add  *Var[9]  *Var[F] 
	Sub  *Var[9]  00000001 
	Call     RandInt     	( *Var[9] *Var[0] )
	Add  *Var[0]  00000001 
	If  *Var[0]  <=  *Var[A] 
	   ExecWait $Script_ShapeSpell 
	   Return
	EndIf
	Add  *Var[A]  *Var[B] 
	If  *Var[0]  <=  *Var[A] 
	   ExecWait $Script_MakeCopy 
	   Return
	EndIf
	Add  *Var[A]  *Var[C] 
	If  *Var[0]  <=  *Var[A] 
	   ExecWait $Script_BoostAttack 
	   Return
	EndIf
	Add  *Var[A]  *Var[D] 
	If  *Var[0]  <=  *Var[A] 
	   ExecWait $Script_BoostDefense 
	   Return
	EndIf
	Add  *Var[A]  *Var[E] 
	If  *Var[0]  <=  *Var[A] 
	   ExecWait $Script_Electrify 
	   Return
	EndIf
	ExecWait $Script_Vanish 
	Return
	End

PADDING: 80224BAC to 80224BB0 (0048BC5C to 0048BC60)
00000000 

% Origin: HEURISTIC
#new:Unknown $???_80224BB0
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 

#new:Script $Script_BeforeBattle_80224BD0
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     802C9C70 ( 00000000 00000005 00000001 )
	Call     802C94A0 ( 00000001 $Function_802184C0 00000000 )
	Call     802C90FC ( 00000005 00000001 FFFFFFFF )
	Call     802C9518 ( 00000005 00000080 00000001 )
	Call     802C9C70 ( 00000001 00000010 00000001 )
	Call     802C94A0 ( 00000002 $Function_802184C0 00000000 )
	Call     802C90FC ( 00000010 00000002 FFFFFFFF )
	Call     802C9518 ( 00000010 00000080 00000001 )
	Call     802C9C70 ( 00000002 00000013 00000001 )
	Call     802C94A0 ( 00000003 $Function_802184C0 00000000 )
	Call     802C90FC ( 00000013 00000003 FFFFFFFF )
	Call     802C9518 ( 00000013 00000080 00000001 )
	Call     802C9C70 ( 00000003 0000001C 00000001 )
	Call     802C94A0 ( 00000004 $Function_802184C0 00000000 )
	Call     802C90FC ( 0000001C 00000004 FFFFFFFF )
	Call     802C9518 ( 0000001C 00000080 00000001 )
	Call     802C9C70 ( 00000004 0000001F 00000001 )
	Call     802C94A0 ( 00000005 $Function_802184C0 00000000 )
	Call     802C90FC ( 0000001F 00000005 FFFFFFFF )
	Call     802C9518 ( 0000001F 00000080 00000001 )
	Call     802C9C70 ( 00000005 00000007 00000001 )
	Call     802C94A0 ( 00000006 $Function_802186B8 00000000 )
	Call     802C90FC ( 00000007 00000006 FFFFFFFF )
	Call     802C9518 ( 00000007 00000080 00000001 )
	Call     802C9C70 ( 00000006 00000025 00000001 )
	Call     802C94A0 ( 00000007 $Function_802186B8 00000000 )
	Call     802C90FC ( 00000025 00000007 FFFFFFFF )
	Call     802C9518 ( 00000025 00000080 00000001 )
	Call     802C9C70 ( 00000007 00000009 00000001 )
	Call     802C94A0 ( 00000008 $Function_802189D0 00000000 )
	Call     802C90FC ( 00000009 00000008 FFFFFFFF )
	Call     802C9518 ( 00000009 00000080 00000001 )
	Call     802C9C70 ( 00000008 00000019 00000001 )
	Call     802C94A0 ( 00000009 $Function_802189D0 00000000 )
	Call     802C90FC ( 00000019 00000009 FFFFFFFF )
	Call     802C9518 ( 00000019 00000080 00000001 )
	Call     802C9C70 ( 00000009 00000016 00000001 )
	Call     802C94A0 ( 0000000A $Function_80218CEC 00000000 )
	Call     802C90FC ( 00000016 0000000A FFFFFFFF )
	Call     802C9518 ( 00000016 00000080 00000001 )
	Thread
	   Call     SetTexPanner 	( 00000004 00000000 )
	   Call     SetTexPanner 	( 0000000C 00000000 )
	   Call     SetTexPanner 	( 0000000D 00000000 )
	   Call     SetTexPanner 	( 0000000E 00000000 )
	   Set  *Var[0]  00000000 
	   Set  *Var[1]  00000000 
	   Set  *Var[2]  00000000 
	   Set  *Var[3]  00000000 
	   Loop     
	      Add  *Var[0]  00000050 
	      Add  *Var[1]  FFFFFF6A 
	      If  *Var[0]  >  00008000 
	         Add  *Var[0]  FFFF8000 
	      EndIf
	      If  *Var[1]  <  FFFF8000 
	         Add  *Var[1]  00008000 
	      EndIf
	      Add  *Var[2]  FFFFFFCE 
	      Add  *Var[3]  00000064 
	      If  *Var[2]  <  FFFF8000 
	         Add  *Var[2]  00008000 
	      EndIf
	      If  *Var[3]  >  00008000 
	         Add  *Var[3]  FFFF8000 
	      EndIf
	      Call     802C9364 ( 00000000 00000000 *Var[0] *Var[1] )
	      Call     802C9364 ( 00000000 00000001 *Var[2] *Var[3] )
	      Wait     00000001 
	   EndLoop
	EndThread
	Thread
	   Label    00000002 
	   Call     MakeLerp    	( FFFFFFF9 00000007 0000001E 0000000A )
	   Label    00000000 
	   Call     UpdateLerp  	( )
	   Call     TranslateModel ( 00000012 00000000 *Var[0] 00000000 )
	   Call     TranslateModel ( 00000013 00000000 *Var[0] 00000000 )
	   Call     TranslateModel ( 0000001B 00000000 *Var[0] 00000000 )
	   Call     TranslateModel ( 0000001C 00000000 *Var[0] 00000000 )
	   Call     TranslateModel ( 0000001F 00000000 *Var[0] 00000000 )
	   Call     TranslateModel ( 0000001E 00000000 *Var[0] 00000000 )
	   Wait     00000001 
	   If  *Var[1]  ==  00000001 
	      Goto     00000000 
	   EndIf
	   Call     MakeLerp    	( 00000007 FFFFFFF9 0000001E 0000000A )
	   Label    00000001 
	   Call     UpdateLerp  	( )
	   Call     TranslateModel ( 00000012 00000000 *Var[0] 00000000 )
	   Call     TranslateModel ( 00000013 00000000 *Var[0] 00000000 )
	   Call     TranslateModel ( 0000001B 00000000 *Var[0] 00000000 )
	   Call     TranslateModel ( 0000001C 00000000 *Var[0] 00000000 )
	   Call     TranslateModel ( 0000001F 00000000 *Var[0] 00000000 )
	   Call     TranslateModel ( 0000001E 00000000 *Var[0] 00000000 )
	   Wait     00000001 
	   If  *Var[1]  ==  00000001 
	      Goto     00000001 
	   EndIf
	   Goto     00000002 
	EndThread
	Thread
	   Label    00000003 
	   Call     MakeLerp    	( 00000007 FFFFFFF9 0000001E 0000000A )
	   Label    00000004 
	   Call     UpdateLerp  	( )
	   Call     TranslateModel ( 00000021 00000000 *Var[0] 00000000 )
	   Call     TranslateModel ( 00000022 00000000 *Var[0] 00000000 )
	   Call     TranslateModel ( 0000000F 00000000 *Var[0] 00000000 )
	   Call     TranslateModel ( 00000010 00000000 *Var[0] 00000000 )
	   Wait     00000001 
	   If  *Var[1]  ==  00000001 
	      Goto     00000004 
	   EndIf
	   Call     MakeLerp    	( FFFFFFF9 00000007 0000001E 0000000A )
	   Label    00000005 
	   Call     UpdateLerp  	( )
	   Call     TranslateModel ( 00000021 00000000 *Var[0] 00000000 )
	   Call     TranslateModel ( 00000022 00000000 *Var[0] 00000000 )
	   Call     TranslateModel ( 0000000F 00000000 *Var[0] 00000000 )
	   Call     TranslateModel ( 00000010 00000000 *Var[0] 00000000 )
	   Wait     00000001 
	   If  *Var[1]  ==  00000001 
	      Goto     00000005 
	   EndIf
	   Goto     00000003 
	EndThread
	Return
	End

#new:Script $Script_AfterBattle_80225598
	Return
	End

#new:ForegroundModelList $ForegroundModelList_802255A8
00000005 00000000 

#new:Stage $Stage_802255B0
$ASCII_80226010  % hos_tex
$ASCII_80226000  % hos_bt01_shape
$ASCII_80225FF0  % hos_bt01_hit
$Script_BeforeBattle_80224BD0 
$Script_AfterBattle_80225598 
$ASCII_80225FE8  % hos_bg
$ForegroundModelList_802255A8 
00000000 
00000000 
00000000 

PADDING: 802255D8 to 802255E0 (0048C688 to 0048C690)
00000000 00000000 

#new:Script $Script_802255E0
	Set  *Var[A]  *Var[0] 
	Label    00000000 
	Call     TranslateModel ( *Var[A] 00000000 00000002 00000000 )
	Wait     00000005 
	Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
	Wait     00000005 
	Call     TranslateModel ( *Var[A] 00000000 00000002 00000000 )
	Wait     00000005 
	Call     TranslateModel ( *Var[A] 00000000 00000000 00000000 )
	Wait     00000005 
	Call     RandInt     	( 0000001E *Var[0] )
	Add  *Var[0]  0000001E 
	Wait     *Var[0] 
	Goto     00000000 
	Return
	End

#new:Script $Script_BeforeBattle_802256E8
	Call     SetSpriteShading 	( FFFFFFFF )
	Thread
	   Set  *Var[0]  00000013 
	   Exec     $Script_802255E0 
	   Wait     00000005 
	   Set  *Var[0]  00000014 
	   Exec     $Script_802255E0 
	   Wait     00000005 
	   Set  *Var[0]  00000015 
	   Exec     $Script_802255E0 
	   Wait     00000005 
	   Set  *Var[0]  00000016 
	   Exec     $Script_802255E0 
	   Wait     00000005 
	   Set  *Var[0]  00000017 
	   Exec     $Script_802255E0 
	   Wait     00000005 
	   Set  *Var[0]  00000018 
	   Exec     $Script_802255E0 
	   Wait     00000005 
	   Set  *Var[0]  00000019 
	   Exec     $Script_802255E0 
	   Wait     00000005 
	   Set  *Var[0]  0000001A 
	   Exec     $Script_802255E0 
	   Wait     00000005 
	   Set  *Var[0]  0000001B 
	   Exec     $Script_802255E0 
	   Wait     00000005 
	   Set  *Var[0]  0000001C 
	   Exec     $Script_802255E0 
	EndThread
	Return
	End

#new:Script $Script_AfterBattle_8022589C
	Return
	End

#new:ForegroundModelList $ForegroundModelList_802258AC
00000020 0000001E 00000000 

#new:Stage $Stage_802258B8
$ASCII_80226048  % nok_tex
$ASCII_80226038  % nok_bt02_shape
$ASCII_80226028  % nok_bt02_hit
$Script_BeforeBattle_802256E8 
$Script_AfterBattle_8022589C 
$ASCII_80226020  % nok_bg
$ForegroundModelList_802258AC 
00000000 
00000000 
00000000 

#new:Script $Script_BeforeBattle_802258E0
	Thread
	   Call     SetTexPanner 	( 00000015 00000001 )
	   Call     SetTexPanner 	( 00000016 00000001 )
	   Set  *Var[0]  00000000 
	   Set  *Var[1]  00000000 
	   Set  *Var[2]  00000000 
	   Set  *Var[3]  00000000 
	   Loop     
	      Add  *Var[0]  FFFFFFCE 
	      Add  *Var[1]  0000012C 
	      Add  *Var[2]  0000005A 
	      Add  *Var[3]  FFFFFF38 
	      Call     802C9364 ( 00000001 00000000 *Var[0] *Var[1] )
	      Call     802C9364 ( 00000001 00000001 *Var[2] *Var[3] )
	      Wait     00000001 
	   EndLoop
	EndThread
	Thread
	   Set  *Var[A]  00000000 
	   Label    00000002 
	   Call     MakeLerp    	( FFFFFFF9 00000007 00000028 0000000A )
	   Label    00000000 
	   Call     UpdateLerp  	( )
	   Call     TranslateModel ( 00000011 00000000 *Var[0] 00000000 )
	   Call     TranslateModel ( 00000015 00000000 *Var[0] 00000000 )
	   Mul  *Var[0]  00000003 
	   Call     RotateModel 	( 00000011 *Var[A] 00000000 00000000 00000001 )
	   Add  *Var[A]  FFFFFFFD 
	   Call     ClampFloat  	( *Var[A] )
	   Wait     00000001 
	   If  *Var[1]  ==  00000001 
	      Goto     00000000 
	   EndIf
	   Call     MakeLerp    	( 00000007 FFFFFFF9 00000028 0000000A )
	   Label    00000001 
	   Call     UpdateLerp  	( )
	   Call     TranslateModel ( 00000011 00000000 *Var[0] 00000000 )
	   Call     TranslateModel ( 00000015 00000000 *Var[0] 00000000 )
	   Mul  *Var[0]  00000003 
	   Call     RotateModel 	( 00000011 *Var[A] 00000000 00000000 00000001 )
	   Add  *Var[A]  FFFFFFFD 
	   Call     ClampFloat  	( *Var[A] )
	   Wait     00000001 
	   If  *Var[1]  ==  00000001 
	      Goto     00000001 
	   EndIf
	   Goto     00000002 
	EndThread
	Thread
	   Set  *Var[A]  00000000 
	   Label    00000002 
	   Call     MakeLerp    	( FFFFFFF6 00000004 00000028 0000000A )
	   Label    00000000 
	   Call     UpdateLerp  	( )
	   Call     TranslateModel ( 00000013 00000000 *Var[0] 00000000 )
	   Call     TranslateModel ( 00000016 00000000 *Var[0] 00000000 )
	   Mul  *Var[0]  FFFFFFFD 
	   Call     RotateModel 	( 00000013 *Var[A] 00000000 00000000 00000001 )
	   Add  *Var[A]  FFFFFFFD 
	   Call     ClampFloat  	( *Var[A] )
	   Wait     00000001 
	   If  *Var[1]  ==  00000001 
	      Goto     00000000 
	   EndIf
	   Call     MakeLerp    	( 00000004 FFFFFFF6 00000028 0000000A )
	   Label    00000001 
	   Call     UpdateLerp  	( )
	   Call     TranslateModel ( 00000013 00000000 *Var[0] 00000000 )
	   Call     TranslateModel ( 00000016 00000000 *Var[0] 00000000 )
	   Mul  *Var[0]  FFFFFFFD 
	   Call     RotateModel 	( 00000013 *Var[A] 00000000 00000000 00000001 )
	   Add  *Var[A]  FFFFFFFD 
	   Call     ClampFloat  	( *Var[A] )
	   Wait     00000001 
	   If  *Var[1]  ==  00000001 
	      Goto     00000001 
	   EndIf
	   Goto     00000002 
	EndThread
	Return
	End

#new:Script $Script_AfterBattle_80225E20
	Return
	End

#new:Stage $Stage_80225E30
$ASCII_80226078  % hos_tex
$ASCII_80226068  % hos_bt02_shape
$ASCII_80226058  % hos_bt02_hit
$Script_BeforeBattle_802258E0 
$Script_AfterBattle_80225E20 
$ASCII_80226050  % nok_bg
00000000 
00000000 
00000000 
00000000 

PADDING: 80225E58 to 80225E60 (0048CF08 to 0048CF10)
00000000 00000000 

#new:Formation $Formation_00
$GoombarioTutor1 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_01
$Ember 00000001 0000000A 00000000 00000000 00000000 00000000 
$Ember 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_02
$Ember 00000000 0000000A 00000000 00000000 00000000 00000000 
$Ember 00000001 00000009 00000000 00000000 00000000 00000000 
$Ember 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_03
$FlyingMagikoopa 00000005 0000000A 00000000 00000000 00000000 00000000 

#new:FormationTable $FormationTable
$SJIS_802260B4 00000001 $Formation_00 $Stage_80225E30 00000000 
$SJIS_802260A8 00000002 $Formation_01 $Stage_802255B0 00000000 
$SJIS_8022609C 00000003 $Formation_02 $Stage_802255B0 00000000 % unused
$SJIS_80226080 00000001 $Formation_03 $Stage_80225E30 00000000 
00000000 00000000 00000000 00000000 00000000 % unused

#new:StageTable $StageTable
$ASCII_802260DC $Stage_802258B8 
$ASCII_802260D4 $Stage_802255B0 
$ASCII_802260CC $Stage_80225E30 
00000000 00000000 

PADDING: 80225FA8 to 80225FB0 (0048D058 to 0048D060)
00000000 00000000 

% Origin: HEURISTIC
#new:ConstDouble $ConstDouble_80225FB0
48.627451d

% Origin: HEURISTIC
#new:ConstDouble $ConstDouble_80225FB8
89.411765d

% Origin: HEURISTIC
#new:ConstDouble $ConstDouble_80225FC0
99.607843d

% Origin: HEURISTIC
#new:ConstDouble $ConstDouble_80225FC8
67.450980d

% Origin: HEURISTIC
#new:ConstDouble $ConstDouble_80225FD0
59.215686d

% Origin: HEURISTIC
#new:ConstDouble $ConstDouble_80225FD8
80.392157d

% Origin: HEURISTIC
#new:ConstDouble $ConstDouble_80225FE0
96.078431d

#new:ASCII $ASCII_80225FE8
hos_bg

#new:ASCII $ASCII_80225FF0
hos_bt01_hit

#new:ASCII $ASCII_80226000
hos_bt01_shape

#new:ASCII $ASCII_80226010
hos_tex

PADDING: 80226018 to 80226020 (0048D0C8 to 0048D0D0)
00000000 00000000 

#new:ASCII $ASCII_80226020
nok_bg

#new:ASCII $ASCII_80226028
nok_bt02_hit

#new:ASCII $ASCII_80226038
nok_bt02_shape

#new:ASCII $ASCII_80226048
nok_tex

#new:ASCII $ASCII_80226050
nok_bg

#new:ASCII $ASCII_80226058
hos_bt02_hit

#new:ASCII $ASCII_80226068
hos_bt02_shape

#new:ASCII $ASCII_80226078
hos_tex

#new:SJIS $SJIS_80226080
% kameku???herupugo?
834A8381 8362834E 81698260 82628377 838B8376 82B2816A 00000000 

#new:SJIS $SJIS_8022609C
% erumosux3
8347838B 83828358 78825200 

#new:SJIS $SJIS_802260A8
% erumosux2
8347838B 83828358 78825100 

#new:SJIS $SJIS_802260B4
% kurio???herupu?
834E838A 83498169 82608262 8377838B 8376816A 00000000 

#new:ASCII $ASCII_802260CC
hos_02

#new:ASCII $ASCII_802260D4
hos_01

#new:ASCII $ASCII_802260DC
hos_00

PADDING: 802260E4 to 802260F0 (0048D194 to 0048D1A0)
00000000 00000000 00000000 

