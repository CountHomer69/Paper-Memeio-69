% Script File: 19 Area FLO2.bscr
% Decoded from: 5CE690 to 5EC490 (19 Area FLO2)

#new:Function $Function_80218000
	ADDIU     SP, SP, FFE0
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 18 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S0, V0, R0
	DADDU     A0, S0, R0
	JAL       80028F08
	DADDU     A1, V0, R0
	LW        RA, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20

#new:Function $Function_80218058
	ADDIU     SP, SP, FFE0
	SW        S2, 18 (SP)
	DADDU     S2, A0, R0
	SW        RA, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S2)
	JAL       {Func:GetActor}
	ADDIU     A0, R0, 200
	DADDU     A0, S2, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     S1, V0, R0
	LWC1      F0, 138 (S1)
	MTC1      V0, F2
	NOP
	CVT.S.W   F2, F2
	ADD.S     F0, F0, F2
	ADDIU     S0, S0, 4
	TRUNC.W.S F6, F0
	MFC1      V0, F6
	NOP
	SH        V0, 156 (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     A0, S2, R0
	MTC1      V0, F4
	NOP
	CVT.S.W   F4, F4
	LWC1      F0, 13C (S1)
	LWC1      F2, 140 (S1)
	ADD.S     F0, F0, F4
	TRUNC.W.S F6, F2
	MFC1      V1, F6
	NOP
	SH        V1, 15A (S1)
	TRUNC.W.S F6, F0
	MFC1      V1, F6
	NOP
	SH        V1, 158 (S1)
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20

#new:Function $Function_80218114
	ADDIU     SP, SP, FFB8
	SW        S2, 18 (SP)
	DADDU     S2, A0, R0
	SW        RA, 28 (SP)
	SW        S5, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S2)
	LW        S4, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       {Func:GetVariable}
	DADDU     A1, S4, R0
	DADDU     S3, V0, R0
	LW        S5, 0 (S0)
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       {Func:GetFloatVariable}
	DADDU     A0, S2, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S2, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S2, R0
	JAL       {Func:GetVariable}
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S2, R0
	JAL       {Func:GetVariable}
	DADDU     S1, V0, R0
	DADDU     A0, S2, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetFloatVariable}
	DADDU     S0, V0, R0
	LIF       F2, 180.0
	LIO       AT, 40490FD8
	MTC1      AT, F4
	DIV.S     F0, F0, F2
	MUL.S     F22, F0, F4
	NOP
	SUB.S     F20, F20, F24
	LIF       F0, 0.5
	NOP
	MUL.S     F20, F20, F0
	NOP
	BEQ       S0, R0, .o104
	SLT       V0, S1, S3
	BEQ       V0, R0, .o104
	DADDU     A0, S2, R0
	DADDU     S3, S1, R0
	DADDU     A1, S4, R0
	JAL       {Func:SetVariable}
	DADDU     A2, S1, R0
	.o104
	LIO       AT, 40490FD8
	MTC1      AT, F0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	MTC1      S1, F0
	NOP
	CVT.S.W   F0, F0
	DIV.S     F12, F12, F0
	JAL       {Func:CosRad}
	ADD.S     F12, F12, F22
	MUL.S     F0, F20, F0
	NOP
	ADD.S     F2, F24, F20
	SUB.S     F2, F2, F0
	DADDU     A0, S2, R0
	MFC1      A2, F2
	JAL       {Func:SetFloatVariable}
	DADDU     A1, S5, R0
	LW        RA, 28 (SP)
	LW        S5, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 48

#new:Function $Function_802182A4
	ADDIU     SP, SP, FFA0
	SW        S1, 1C (SP)
	DADDU     S1, A0, R0
	SW        RA, 2C (SP)
	SW        S4, 28 (SP)
	SW        S3, 24 (SP)
	SW        S2, 20 (SP)
	SW        S0, 18 (SP)
	SDC1      F30, 58 (SP)
	SDC1      F28, 50 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S1)
	LW        S3, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       {Func:GetFloatVariable}
	DADDU     A1, S3, R0
	SWC1      F0, 10 (SP)
	LW        S4, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	DADDU     A1, S4, R0
	MOV.S     F30, F0
	LW        S2, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	DADDU     A1, S2, R0
	MOV.S     F28, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       {Func:GetFloatVariable}
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F26, F0
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	JAL       {Func:GetFloatVariable}
	DADDU     A0, S1, R0
	MOV.S     F12, F26
	LIF       F2, 15.0
	MOV.S     F22, F0
	JAL       {Func:CosDeg}
	SUB.S     F24, F24, F2
	MOV.S     F20, F0
	JAL       {Func:CosDeg}
	MOV.S     F12, F24
	MUL.S     F20, F22, F20
	NOP
	MUL.S     F20, F20, F0
	NOP
	LWC1      F4, 10 (SP)
	ADD.S     F4, F4, F20
	MOV.S     F12, F26
	JAL       {Func:SinDeg}
	SWC1      F4, 10 (SP)
	MUL.S     F0, F22, F0
	NOP
	MOV.S     F12, F26
	JAL       {Func:CosDeg}
	ADD.S     F30, F30, F0
	MOV.S     F12, F24
	JAL       {Func:SinDeg}
	MOV.S     F20, F0
	MUL.S     F22, F22, F20
	NOP
	MUL.S     F22, F22, F0
	NOP
	DADDU     A0, S1, R0
	DADDU     A1, S3, R0
	LW        A2, 10 (SP)
	JAL       {Func:SetFloatVariable}
	SUB.S     F28, F28, F22
	DADDU     A0, S1, R0
	MFC1      A2, F30
	JAL       {Func:SetFloatVariable}
	DADDU     A1, S4, R0
	DADDU     A0, S1, R0
	MFC1      A2, F28
	JAL       {Func:SetFloatVariable}
	DADDU     A1, S2, R0
	LW        RA, 2C (SP)
	LW        S4, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	LDC1      F30, 58 (SP)
	LDC1      F28, 50 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60

#new:Function $Function_80218440
	ADDIU     SP, SP, FFB8
	SW        S1, 3C (SP)
	DADDU     S1, A0, R0
	SW        RA, 40 (SP)
	SW        S0, 38 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	DADDU     A1, V0, R0
	ANDI      V0, A1, 2
	BNE       V0, R0, .o40
	DADDU     A0, R0, R0
	ADDIU     V0, R0, 2
	SW        V0, 10 (SP)
	ADDIU     A0, R0, 1
	.o40
	ANDI      V0, A1, 8
	BNE       V0, R0, .o64
	ANDI      V0, A1, 20
	SLL       V0, A0, 2
	ADDU      V1, SP, V0
	ADDIU     V0, R0, 8
	SW        V0, 10 (V1)
	ADDIU     A0, A0, 1
	ANDI      V0, A1, 20
	.o64
	BNE       V0, R0, .o84
	ANDI      V0, A1, 80
	SLL       V0, A0, 2
	ADDU      V1, SP, V0
	ADDIU     V0, R0, 20
	SW        V0, 10 (V1)
	ADDIU     A0, A0, 1
	ANDI      V0, A1, 80
	.o84
	BNE       V0, R0, .oA4
	ANDI      V0, A1, 200
	SLL       V0, A0, 2
	ADDU      V1, SP, V0
	ADDIU     V0, R0, 80
	SW        V0, 10 (V1)
	ADDIU     A0, A0, 1
	ANDI      V0, A1, 200
	.oA4
	BNE       V0, R0, .oC4
	ANDI      V0, A1, 1
	SLL       V0, A0, 2
	ADDU      V1, SP, V0
	ADDIU     V0, R0, 200
	SW        V0, 10 (V1)
	ADDIU     A0, A0, 1
	ANDI      V0, A1, 1
	.oC4
	BNE       V0, R0, .oE4
	ANDI      V0, A1, 4
	SLL       V0, A0, 2
	ADDU      V1, SP, V0
	ADDIU     V0, R0, 1
	SW        V0, 10 (V1)
	ADDU      A0, A0, V0
	ANDI      V0, A1, 4
	.oE4
	BNE       V0, R0, .o104
	ANDI      V0, A1, 10
	SLL       V0, A0, 2
	ADDU      V1, SP, V0
	ADDIU     V0, R0, 4
	SW        V0, 10 (V1)
	ADDIU     A0, A0, 1
	ANDI      V0, A1, 10
	.o104
	BNE       V0, R0, .o11C
	SLL       V0, A0, 2
	ADDU      V1, SP, V0
	ADDIU     V0, R0, 10
	SW        V0, 10 (V1)
	ADDIU     A0, A0, 1
	.o11C
	BNE       A0, R0, .o15C
	ANDI      V0, A1, 100
	BNE       V0, R0, .o13C
	ANDI      V0, A1, 40
	ADDIU     V0, R0, 100
	SW        V0, 10 (SP)
	ADDIU     A0, R0, 1
	ANDI      V0, A1, 40
	.o13C
	BNE       V0, R0, .o154
	SLL       V0, A0, 2
	ADDU      V1, SP, V0
	ADDIU     V0, R0, 40
	SW        V0, 10 (V1)
	ADDIU     A0, A0, 1
	.o154
	BEQ       A0, R0, .o170
	ADDIU     A2, R0, FFFF
	.o15C
	JAL       {Func:GetRandom}
	ADDIU     A0, A0, FFFF
	SLL       V0, V0, 2
	ADDU      V0, SP, V0
	LW        A2, 10 (V0)
	.o170
	LW        A1, 0 (S0)
	JAL       {Func:SetVariable}
	DADDU     A0, S1, R0
	LW        RA, 40 (SP)
	LW        S1, 3C (SP)
	LW        S0, 38 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 48

#new:Function $Function_802185D4
	ADDIU     SP, SP, FFE8
	SW        S0, 10 (SP)
	DADDU     S0, A0, R0
	SW        RA, 14 (SP)
	JAL       {Func:GetActor}
	LW        A0, 148 (S0)
	LB        V0, 1F1 (V0)
	SAW       V0, $SpecialFormation_8021A354[8]
	JAL       {Func:GetActor}
	LW        A0, 148 (S0)
	LB        V1, 1F1 (V0)
	LW        RA, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	SAW       V1, $SpecialFormation_8021A370[8]
	JR        RA
	ADDIU     SP, SP, 18

#new:Function $Function_80218620
	ADDIU     SP, SP, FFE0
	SW        S2, 18 (SP)
	DADDU     S2, A0, R0
	SW        RA, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	LW        S0, C (S2)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S2, R0
	LIA       V1, $End[0]
	SLL       S1, V0, 3
	ADDU      S1, S1, V0
	SLL       S1, S1, 2
	JAL       {Func:GetVariable}
	ADDU      S1, S1, V1
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 0 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       {Func:GetVariable}
	DADDU     A0, S2, R0
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 4 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       {Func:GetVariable}
	DADDU     A0, S2, R0
	ADDIU     A0, R0, 14
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	JAL       {Func:GetRandom}
	SWC1      F0, 8 (S1)
	ADDIU     A0, R0, 28
	SUBU      V0, R0, V0
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	JAL       {Func:GetRandom}
	SWC1      F0, C (S1)
	ADDIU     V0, V0, 3C
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 10 (S1)
	SW        R0, 14 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       {Func:GetVariable}
	DADDU     A0, S2, R0
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 18 (S1)
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       {Func:GetVariable}
	DADDU     A0, S2, R0
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 1C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	DADDU     A0, S2, R0
	MTC1      V0, F0
	NOP
	CVT.S.W   F0, F0
	SWC1      F0, 20 (S1)
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 20

#new:Function $Function_80218774
	ADDIU     SP, SP, FFA0
	SW        S1, 24 (SP)
	DADDU     S1, A0, R0
	SW        RA, 2C (SP)
	SW        S2, 28 (SP)
	SW        S0, 20 (SP)
	SDC1      F30, 58 (SP)
	SDC1      F28, 50 (SP)
	SDC1      F26, 48 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	DADDU     S2, V0, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F30, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F28, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F26, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F22, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	MOV.S     F20, F0
	MFC1      A1, F30
	MFC1      A2, F28
	MFC1      A3, F26
	DADDU     A0, S2, R0
	SWC1      F24, 10 (SP)
	SWC1      F22, 14 (SP)
	SWC1      F20, 18 (SP)
	JAL       800721D0
	SW        V0, 1C (SP)
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:SetVariable}
	DADDU     A2, V0, R0
	LW        RA, 2C (SP)
	LW        S2, 28 (SP)
	LW        S1, 24 (SP)
	LW        S0, 20 (SP)
	LDC1      F30, 58 (SP)
	LDC1      F28, 50 (SP)
	LDC1      F26, 48 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 60

#new:Function $Function_802188A8
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	JAL       8011D82C
	ADDIU     A0, R0, 1
	DADDU     A0, R0, R0
	ADDIU     V0, R0, 1
	DADDU     A1, A0, R0
	DADDU     A2, A0, R0
	LAW       V1, 801512F0
	DADDU     A3, A0, R0
	JAL       8011BE5C
	SB        V0, 0 (V1)
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18

#new:Function $Function_802188EC
	ADDIU     SP, SP, FFE8
	SW        RA, 10 (SP)
	LW        V0, C (A0)
	JAL       {Func:GetVariable}
	LW        A1, 0 (V0)
	DADDU     A0, R0, R0
	DADDU     A1, A0, R0
	DADDU     A2, A0, R0
	JAL       8011BE5C
	ANDI      A3, V0, FF
	LW        RA, 10 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 18

#new:Function $Function_80218924
	ADDIU     SP, SP, FFD0
	SW        S1, 1C (SP)
	DADDU     S1, A0, R0
	SW        RA, 28 (SP)
	SW        S3, 24 (SP)
	SW        S2, 20 (SP)
	SW        S0, 18 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S3, V0, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S2, V0, R0
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetFloatVariable}
	DADDU     S0, V0, R0
	MTC1      S3, F4
	NOP
	CVT.S.W   F4, F4
	MFC1      A1, F4
	MTC1      S2, F4
	NOP
	CVT.S.W   F4, F4
	LIF       F2, 2.5
	MFC1      A2, F4
	MUL.S     F0, F0, F2
	NOP
	MTC1      S0, F4
	NOP
	CVT.S.W   F4, F4
	MFC1      A3, F4
	DADDU     A0, R0, R0
	SW        R0, 14 (SP)
	JAL       80071930
	SWC1      F0, 10 (SP)
	SW        V0, 84 (S1)
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30

#new:Function $Function_802189FC
	ADDIU     SP, SP, FFD0
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F22, 28 (SP)
	SDC1      F20, 20 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	DADDU     S2, V0, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F22, F0
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetFloatVariable}
	MOV.S     F20, F0
	LW        V0, C (S2)
	SWC1      F22, 4 (V0)
	LW        V0, C (S2)
	SWC1      F20, 8 (V0)
	LW        V1, C (S2)
	SWC1      F0, C (V1)
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F22, 28 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30

#new:Function $Function_80218AA0
	ADDIU     SP, SP, FFC8
	SW        S1, 14 (SP)
	DADDU     S1, A0, R0
	SW        RA, 1C (SP)
	SW        S2, 18 (SP)
	SW        S0, 10 (SP)
	SDC1      F24, 30 (SP)
	SDC1      F22, 28 (SP)
	SDC1      F20, 20 (SP)
	LW        S0, C (S1)
	LW        S2, 0 (S0)
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	JAL       {Func:GetFloatVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F22, F0
	DADDU     A0, S1, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetFloatVariable}
	MOV.S     F20, F0
	MOV.S     F12, F24
	MFC1      A2, F20
	MFC1      A3, F0
	JAL       80029C80
	MOV.S     F14, F22
	DADDU     A0, S1, R0
	MFC1      A2, F0
	JAL       {Func:SetFloatVariable}
	DADDU     A1, S2, R0
	LW        RA, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 30 (SP)
	LDC1      F22, 28 (SP)
	LDC1      F20, 20 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 38

#new:Function $Function_80218B60
	ADDIU     SP, SP, FFC0
	SW        S1, 1C (SP)
	DADDU     S1, A0, R0
	SW        RA, 28 (SP)
	SW        S3, 24 (SP)
	SW        S2, 20 (SP)
	SW        S0, 18 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S1)
	LW        A1, 0 (S0)
	JAL       {Func:GetVariable}
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	DADDU     S3, V0, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F22, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S1, R0
	JAL       {Func:GetVariable}
	DADDU     S2, V0, R0
	DADDU     A0, S3, R0
	MFC1      A1, F22
	MFC1      A2, F20
	DADDU     A3, S2, R0
	JAL       8002A3B4
	SW        V0, 10 (SP)
	LW        A1, 0 (S0)
	MFC1      A2, F0
	JAL       {Func:SetFloatVariable}
	DADDU     A0, S1, R0
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 40

PADDING: 80218C34 to 80218C40 (005CF2C4 to 005CF2D0)
00000000 00000000 00000000 

#new:Function $Function_80218C40
	ADDIU     SP, SP, FFB8
	SW        S2, 18 (SP)
	DADDU     S2, A0, R0
	SW        RA, 28 (SP)
	SW        S5, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S2)
	LW        S4, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       {Func:GetVariable}
	DADDU     A1, S4, R0
	DADDU     S3, V0, R0
	LW        S5, 0 (S0)
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       {Func:GetFloatVariable}
	DADDU     A0, S2, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S2, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S2, R0
	JAL       {Func:GetVariable}
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S2, R0
	JAL       {Func:GetVariable}
	DADDU     S1, V0, R0
	DADDU     A0, S2, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetFloatVariable}
	DADDU     S0, V0, R0
	LIF       F2, 180.0
	LIO       AT, 40490FD8
	MTC1      AT, F4
	DIV.S     F0, F0, F2
	MUL.S     F22, F0, F4
	NOP
	SUB.S     F20, F20, F24
	LIF       F0, 0.5
	NOP
	MUL.S     F20, F20, F0
	NOP
	BEQ       S0, R0, .o104
	SLT       V0, S1, S3
	BEQ       V0, R0, .o104
	DADDU     A0, S2, R0
	DADDU     S3, S1, R0
	DADDU     A1, S4, R0
	JAL       {Func:SetVariable}
	DADDU     A2, S1, R0
	.o104
	LIO       AT, 40490FD8
	MTC1      AT, F0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	MTC1      S1, F0
	NOP
	CVT.S.W   F0, F0
	DIV.S     F12, F12, F0
	JAL       {Func:CosRad}
	ADD.S     F12, F12, F22
	MUL.S     F0, F20, F0
	NOP
	ADD.S     F2, F24, F20
	SUB.S     F2, F2, F0
	DADDU     A0, S2, R0
	MFC1      A2, F2
	JAL       {Func:SetFloatVariable}
	DADDU     A1, S5, R0
	LW        RA, 28 (SP)
	LW        S5, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 48

#new:Function $Function_80218DD0
	ADDIU     SP, SP, FFD0
	SW        S2, 20 (SP)
	DADDU     S2, R0, R0
	SW        S1, 1C (SP)
	DADDU     S1, S2, R0
	SW        S3, 24 (SP)
	LIA       S3, 800934F0
	SW        S0, 18 (SP)
	LIA       S0, $???_80232D48
	SW        RA, 28 (SP)
	.o30
	LAW       V0, 8007419C
	LW        A1, 0 (S0)
	LH        V1, 86 (V0)
	LH        V0, 8C (V0)
	SLL       V1, V1, 4
	ADDU      V1, V1, S3
	LW        V1, 4 (V1)
	SLL       V0, V0, 5
	ADDU      V0, V0, V1
	JAL       {Func:StringCompare}
	LW        A0, 0 (V0)
	BNE       V0, R0, .o70
	ADDIU     S1, S1, 1
	BEQ       R0, R0, .o7C
	ADDIU     S2, R0, 1
	.o70
	SLTIU     V0, S1, B
	BNE       V0, R0, .o30
	ADDIU     S0, S0, 4
	.o7C
	MTC1      R0, F0
	NOP
	MFC1      A1, F0
	DADDU     A0, S2, R0
	SW        R0, 14 (SP)
	DADDU     A2, A1, R0
	DADDU     A3, A1, R0
	JAL       80072950
	SW        A1, 10 (SP)
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30

#new:Function $Function_80218E90
	ADDIU     SP, SP, FFD0
	SW        S2, 20 (SP)
	DADDU     S2, R0, R0
	SW        S1, 1C (SP)
	DADDU     S1, S2, R0
	SW        S3, 24 (SP)
	LIA       S3, 800934F0
	SW        S0, 18 (SP)
	LIA       S0, $???_802331E8
	SW        RA, 28 (SP)
	.o30
	LAW       V0, 8007419C
	LW        A1, 0 (S0)
	LH        V1, 86 (V0)
	LH        V0, 8C (V0)
	SLL       V1, V1, 4
	ADDU      V1, V1, S3
	LW        V1, 4 (V1)
	SLL       V0, V0, 5
	ADDU      V0, V0, V1
	JAL       {Func:StringCompare}
	LW        A0, 0 (V0)
	BNE       V0, R0, .o70
	ADDIU     S1, S1, 1
	BEQ       R0, R0, .o7C
	ADDIU     S2, R0, 1
	.o70
	SLTIU     V0, S1, B
	BNE       V0, R0, .o30
	ADDIU     S0, S0, 4
	.o7C
	MTC1      R0, F0
	NOP
	MFC1      A1, F0
	DADDU     A0, S2, R0
	SW        R0, 14 (SP)
	DADDU     A2, A1, R0
	DADDU     A3, A1, R0
	JAL       80072950
	SW        A1, 10 (SP)
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30

#new:Function $Function_80218F50
	ADDIU     SP, SP, FFD0
	SW        S2, 20 (SP)
	DADDU     S2, R0, R0
	SW        S1, 1C (SP)
	DADDU     S1, S2, R0
	SW        S3, 24 (SP)
	LIA       S3, 800934F0
	SW        S0, 18 (SP)
	LIA       S0, $???_80233678
	SW        RA, 28 (SP)
	.o30
	LAW       V0, 8007419C
	LW        A1, 0 (S0)
	LH        V1, 86 (V0)
	LH        V0, 8C (V0)
	SLL       V1, V1, 4
	ADDU      V1, V1, S3
	LW        V1, 4 (V1)
	SLL       V0, V0, 5
	ADDU      V0, V0, V1
	JAL       {Func:StringCompare}
	LW        A0, 0 (V0)
	BNE       V0, R0, .o70
	ADDIU     S1, S1, 1
	BEQ       R0, R0, .o7C
	ADDIU     S2, R0, 1
	.o70
	SLTIU     V0, S1, B
	BNE       V0, R0, .o30
	ADDIU     S0, S0, 4
	.o7C
	MTC1      R0, F0
	NOP
	MFC1      A1, F0
	DADDU     A0, S2, R0
	SW        R0, 14 (SP)
	DADDU     A2, A1, R0
	DADDU     A3, A1, R0
	JAL       80072950
	SW        A1, 10 (SP)
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30

#new:Function $Function_80219010
	ADDIU     SP, SP, FFD0
	SW        S2, 20 (SP)
	DADDU     S2, R0, R0
	SW        S1, 1C (SP)
	DADDU     S1, S2, R0
	SW        S3, 24 (SP)
	LIA       S3, 800934F0
	SW        S0, 18 (SP)
	LIA       S0, $???_80233B18
	SW        RA, 28 (SP)
	.o30
	LAW       V0, 8007419C
	LW        A1, 0 (S0)
	LH        V1, 86 (V0)
	LH        V0, 8C (V0)
	SLL       V1, V1, 4
	ADDU      V1, V1, S3
	LW        V1, 4 (V1)
	SLL       V0, V0, 5
	ADDU      V0, V0, V1
	JAL       {Func:StringCompare}
	LW        A0, 0 (V0)
	BNE       V0, R0, .o70
	ADDIU     S1, S1, 1
	BEQ       R0, R0, .o7C
	ADDIU     S2, R0, 1
	.o70
	SLTIU     V0, S1, B
	BNE       V0, R0, .o30
	ADDIU     S0, S0, 4
	.o7C
	MTC1      R0, F0
	NOP
	MFC1      A1, F0
	DADDU     A0, S2, R0
	SW        R0, 14 (SP)
	DADDU     A2, A1, R0
	DADDU     A3, A1, R0
	JAL       80072950
	SW        A1, 10 (SP)
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30

#new:Function $Function_802190D0
	ADDIU     SP, SP, FFD0
	SW        S2, 20 (SP)
	DADDU     S2, R0, R0
	SW        S1, 1C (SP)
	DADDU     S1, S2, R0
	SW        S3, 24 (SP)
	LIA       S3, 800934F0
	SW        S0, 18 (SP)
	LIA       S0, $???_80233F98
	SW        RA, 28 (SP)
	.o30
	LAW       V0, 8007419C
	LW        A1, 0 (S0)
	LH        V1, 86 (V0)
	LH        V0, 8C (V0)
	SLL       V1, V1, 4
	ADDU      V1, V1, S3
	LW        V1, 4 (V1)
	SLL       V0, V0, 5
	ADDU      V0, V0, V1
	JAL       {Func:StringCompare}
	LW        A0, 0 (V0)
	BNE       V0, R0, .o70
	ADDIU     S1, S1, 1
	BEQ       R0, R0, .o7C
	ADDIU     S2, R0, 1
	.o70
	SLTIU     V0, S1, B
	BNE       V0, R0, .o30
	ADDIU     S0, S0, 4
	.o7C
	MTC1      R0, F0
	NOP
	MFC1      A1, F0
	DADDU     A0, S2, R0
	SW        R0, 14 (SP)
	DADDU     A2, A1, R0
	DADDU     A3, A1, R0
	JAL       80072950
	SW        A1, 10 (SP)
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30

#new:Function $Function_80219190
	ADDIU     SP, SP, FFD0
	SW        S2, 20 (SP)
	DADDU     S2, R0, R0
	SW        S1, 1C (SP)
	DADDU     S1, S2, R0
	SW        S3, 24 (SP)
	LIA       S3, 800934F0
	SW        S0, 18 (SP)
	LIA       S0, $???_80234448
	SW        RA, 28 (SP)
	.o30
	LAW       V0, 8007419C
	LW        A1, 0 (S0)
	LH        V1, 86 (V0)
	LH        V0, 8C (V0)
	SLL       V1, V1, 4
	ADDU      V1, V1, S3
	LW        V1, 4 (V1)
	SLL       V0, V0, 5
	ADDU      V0, V0, V1
	JAL       {Func:StringCompare}
	LW        A0, 0 (V0)
	BNE       V0, R0, .o70
	ADDIU     S1, S1, 1
	BEQ       R0, R0, .o7C
	ADDIU     S2, R0, 1
	.o70
	SLTIU     V0, S1, B
	BNE       V0, R0, .o30
	ADDIU     S0, S0, 4
	.o7C
	MTC1      R0, F0
	NOP
	MFC1      A1, F0
	DADDU     A0, S2, R0
	SW        R0, 14 (SP)
	DADDU     A2, A1, R0
	DADDU     A3, A1, R0
	JAL       80072950
	SW        A1, 10 (SP)
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30

#new:Function $Function_80219250
	ADDIU     SP, SP, FFD0
	SW        S2, 20 (SP)
	DADDU     S2, R0, R0
	SW        S1, 1C (SP)
	DADDU     S1, S2, R0
	SW        S3, 24 (SP)
	LIA       S3, 800934F0
	SW        S0, 18 (SP)
	LIA       S0, $???_80234758
	SW        RA, 28 (SP)
	.o30
	LAW       V0, 8007419C
	LW        A1, 0 (S0)
	LH        V1, 86 (V0)
	LH        V0, 8C (V0)
	SLL       V1, V1, 4
	ADDU      V1, V1, S3
	LW        V1, 4 (V1)
	SLL       V0, V0, 5
	ADDU      V0, V0, V1
	JAL       {Func:StringCompare}
	LW        A0, 0 (V0)
	BNE       V0, R0, .o70
	ADDIU     S1, S1, 1
	BEQ       R0, R0, .o7C
	ADDIU     S2, R0, 1
	.o70
	SLTIU     V0, S1, B
	BNE       V0, R0, .o30
	ADDIU     S0, S0, 4
	.o7C
	MTC1      R0, F0
	NOP
	MFC1      A1, F0
	DADDU     A0, S2, R0
	SW        R0, 14 (SP)
	DADDU     A2, A1, R0
	DADDU     A3, A1, R0
	JAL       80072950
	SW        A1, 10 (SP)
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30

#new:Function $Function_80219310
	ADDIU     SP, SP, FFB8
	SW        S2, 18 (SP)
	DADDU     S2, A0, R0
	SW        RA, 28 (SP)
	SW        S5, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S2)
	LW        S4, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       {Func:GetVariable}
	DADDU     A1, S4, R0
	DADDU     S3, V0, R0
	LW        S5, 0 (S0)
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       {Func:GetFloatVariable}
	DADDU     A0, S2, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S2, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S2, R0
	JAL       {Func:GetVariable}
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S2, R0
	JAL       {Func:GetVariable}
	DADDU     S1, V0, R0
	DADDU     A0, S2, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetFloatVariable}
	DADDU     S0, V0, R0
	LIF       F2, 180.0
	LIO       AT, 40490FD8
	MTC1      AT, F4
	DIV.S     F0, F0, F2
	MUL.S     F22, F0, F4
	NOP
	SUB.S     F20, F20, F24
	LIF       F0, 0.5
	NOP
	MUL.S     F20, F20, F0
	NOP
	BEQ       S0, R0, .o104
	SLT       V0, S1, S3
	BEQ       V0, R0, .o104
	DADDU     A0, S2, R0
	DADDU     S3, S1, R0
	DADDU     A1, S4, R0
	JAL       {Func:SetVariable}
	DADDU     A2, S1, R0
	.o104
	LIO       AT, 40490FD8
	MTC1      AT, F0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	MTC1      S1, F0
	NOP
	CVT.S.W   F0, F0
	DIV.S     F12, F12, F0
	JAL       {Func:CosRad}
	ADD.S     F12, F12, F22
	MUL.S     F0, F20, F0
	NOP
	ADD.S     F2, F24, F20
	SUB.S     F2, F2, F0
	DADDU     A0, S2, R0
	MFC1      A2, F2
	JAL       {Func:SetFloatVariable}
	DADDU     A1, S5, R0
	LW        RA, 28 (SP)
	LW        S5, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 48

#new:Function $Function_802194A0
	ADDIU     SP, SP, FFB8
	SW        S2, 18 (SP)
	DADDU     S2, A0, R0
	SW        RA, 28 (SP)
	SW        S5, 24 (SP)
	SW        S4, 20 (SP)
	SW        S3, 1C (SP)
	SW        S1, 14 (SP)
	SW        S0, 10 (SP)
	SDC1      F24, 40 (SP)
	SDC1      F22, 38 (SP)
	SDC1      F20, 30 (SP)
	LW        S0, C (S2)
	LW        S4, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       {Func:GetVariable}
	DADDU     A1, S4, R0
	DADDU     S3, V0, R0
	LW        S5, 0 (S0)
	ADDIU     S0, S0, 4
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	JAL       {Func:GetFloatVariable}
	DADDU     A0, S2, R0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S2, R0
	JAL       {Func:GetFloatVariable}
	MOV.S     F24, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S2, R0
	JAL       {Func:GetVariable}
	MOV.S     F20, F0
	LW        A1, 0 (S0)
	ADDIU     S0, S0, 4
	DADDU     A0, S2, R0
	JAL       {Func:GetVariable}
	DADDU     S1, V0, R0
	DADDU     A0, S2, R0
	LW        A1, 0 (S0)
	JAL       {Func:GetFloatVariable}
	DADDU     S0, V0, R0
	LIF       F2, 180.0
	LIO       AT, 40490FD8
	MTC1      AT, F4
	DIV.S     F0, F0, F2
	MUL.S     F22, F0, F4
	NOP
	SUB.S     F20, F20, F24
	LIF       F0, 0.5
	NOP
	MUL.S     F20, F20, F0
	NOP
	BEQ       S0, R0, .o104
	SLT       V0, S1, S3
	BEQ       V0, R0, .o104
	DADDU     A0, S2, R0
	DADDU     S3, S1, R0
	DADDU     A1, S4, R0
	JAL       {Func:SetVariable}
	DADDU     A2, S1, R0
	.o104
	LIO       AT, 40490FD8
	MTC1      AT, F0
	MTC1      S3, F12
	NOP
	CVT.S.W   F12, F12
	MUL.S     F12, F12, F0
	NOP
	MTC1      S1, F0
	NOP
	CVT.S.W   F0, F0
	DIV.S     F12, F12, F0
	JAL       {Func:CosRad}
	ADD.S     F12, F12, F22
	MUL.S     F0, F20, F0
	NOP
	ADD.S     F2, F24, F20
	SUB.S     F2, F2, F0
	DADDU     A0, S2, R0
	MFC1      A2, F2
	JAL       {Func:SetFloatVariable}
	DADDU     A1, S5, R0
	LW        RA, 28 (SP)
	LW        S5, 24 (SP)
	LW        S4, 20 (SP)
	LW        S3, 1C (SP)
	LW        S2, 18 (SP)
	LW        S1, 14 (SP)
	LW        S0, 10 (SP)
	LDC1      F24, 40 (SP)
	LDC1      F22, 38 (SP)
	LDC1      F20, 30 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 48

#new:Function $Function_80219630
	ADDIU     SP, SP, FFD0
	SW        S2, 20 (SP)
	DADDU     S2, R0, R0
	SW        S1, 1C (SP)
	DADDU     S1, S2, R0
	SW        S3, 24 (SP)
	LIA       S3, 800934F0
	SW        S0, 18 (SP)
	LIA       S0, $???_802350D4
	SW        RA, 28 (SP)
	.o30
	LAW       V0, 8007419C
	LW        A1, 0 (S0)
	LH        V1, 86 (V0)
	LH        V0, 8C (V0)
	SLL       V1, V1, 4
	ADDU      V1, V1, S3
	LW        V1, 4 (V1)
	SLL       V0, V0, 5
	ADDU      V0, V0, V1
	JAL       {Func:StringCompare}
	LW        A0, 0 (V0)
	BNE       V0, R0, .o70
	ADDIU     S1, S1, 1
	BEQ       R0, R0, .o7C
	ADDIU     S2, R0, 1
	.o70
	SLTIU     V0, S1, B
	BNE       V0, R0, .o30
	ADDIU     S0, S0, 4
	.o7C
	MTC1      R0, F0
	NOP
	MFC1      A1, F0
	DADDU     A0, S2, R0
	SW        R0, 14 (SP)
	DADDU     A2, A1, R0
	DADDU     A3, A1, R0
	JAL       80072950
	SW        A1, 10 (SP)
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30

#new:Function $Function_802196F0
	ADDIU     SP, SP, FFD0
	SW        S2, 20 (SP)
	DADDU     S2, R0, R0
	SW        S1, 1C (SP)
	DADDU     S1, S2, R0
	SW        S3, 24 (SP)
	LIA       S3, 800934F0
	SW        S0, 18 (SP)
	LIA       S0, $???_802353E0
	SW        RA, 28 (SP)
	.o30
	LAW       V0, 8007419C
	LW        A1, 0 (S0)
	LH        V1, 86 (V0)
	LH        V0, 8C (V0)
	SLL       V1, V1, 4
	ADDU      V1, V1, S3
	LW        V1, 4 (V1)
	SLL       V0, V0, 5
	ADDU      V0, V0, V1
	JAL       {Func:StringCompare}
	LW        A0, 0 (V0)
	BNE       V0, R0, .o70
	ADDIU     S1, S1, 1
	BEQ       R0, R0, .o7C
	ADDIU     S2, R0, 1
	.o70
	SLTIU     V0, S1, B
	BNE       V0, R0, .o30
	ADDIU     S0, S0, 4
	.o7C
	MTC1      R0, F0
	NOP
	MFC1      A1, F0
	DADDU     A0, S2, R0
	SW        R0, 14 (SP)
	DADDU     A2, A1, R0
	DADDU     A3, A1, R0
	JAL       80072950
	SW        A1, 10 (SP)
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30

#new:Function $Function_802197B0
	ADDIU     SP, SP, FFD0
	SW        S2, 20 (SP)
	DADDU     S2, R0, R0
	SW        S1, 1C (SP)
	DADDU     S1, S2, R0
	SW        S3, 24 (SP)
	LIA       S3, 800934F0
	SW        S0, 18 (SP)
	LIA       S0, $???_802354C0
	SW        RA, 28 (SP)
	.o30
	LAW       V0, 8007419C
	LW        A1, 0 (S0)
	LH        V1, 86 (V0)
	LH        V0, 8C (V0)
	SLL       V1, V1, 4
	ADDU      V1, V1, S3
	LW        V1, 4 (V1)
	SLL       V0, V0, 5
	ADDU      V0, V0, V1
	JAL       {Func:StringCompare}
	LW        A0, 0 (V0)
	BNE       V0, R0, .o70
	ADDIU     S1, S1, 1
	BEQ       R0, R0, .o7C
	ADDIU     S2, R0, 1
	.o70
	SLTIU     V0, S1, B
	BNE       V0, R0, .o30
	ADDIU     S0, S0, 4
	.o7C
	MTC1      R0, F0
	NOP
	MFC1      A1, F0
	DADDU     A0, S2, R0
	SW        R0, 14 (SP)
	DADDU     A2, A1, R0
	DADDU     A3, A1, R0
	JAL       80072950
	SW        A1, 10 (SP)
	LW        RA, 28 (SP)
	LW        S3, 24 (SP)
	LW        S2, 20 (SP)
	LW        S1, 1C (SP)
	LW        S0, 18 (SP)
	ADDIU     V0, R0, 2
	JR        RA
	ADDIU     SP, SP, 30

% Origin: HINT
#new:IntTable $TuffPuffIDs
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 
00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 

#new:IdleAnimations $IdleAnimations_802198F0
.Status:Normal    007C0001
.Status:Stone     007C0001
.Status:Sleep     007C0001
.Status:Poison    007C0001
.Status:Stop      007C0001
.Status:Static    007C0001
.Status:Paralyze  007C0001
.Status:Paralyze  007C0001
.Status:Dizzy     007C0001
.Status:Dizzy     007C0001
.Status:Fear      007C0001
.Status:End

#new:IdleAnimations $IdleAnimations_8021994C
.Status:Normal    007C0002
.Status:Stone     007C0002
.Status:Sleep     007C0002
.Status:Poison    007C0002
.Status:Stop      007C0002
.Status:Static    007C0002
.Status:Paralyze  007C0002
.Status:Paralyze  007C0002
.Status:Dizzy     007C0002
.Status:Dizzy     007C0002
.Status:Fear      007C0002
.Status:End

#new:IdleAnimations $IdleAnimations_802199A8
.Status:Normal    007C0003
.Status:Stone     007C0003
.Status:Sleep     007C0003
.Status:Poison    007C0003
.Status:Stop      007C0003
.Status:Static    007C0003
.Status:Paralyze  007C0003
.Status:Paralyze  007C0003
.Status:Dizzy     007C0003
.Status:Dizzy     007C0003
.Status:Fear      007C0003
.Status:End

#new:IdleAnimations $IdleAnimations_80219A04
.Status:Normal    007C0011
.Status:End

#new:IdleAnimations $IdleAnimations_80219A10
.Status:Normal    007C0012
.Status:End

#new:IdleAnimations $IdleAnimations_80219A1C
.Status:Normal    007C0013
.Status:End

#new:IdleAnimations $IdleAnimations_80219A28
.Status:Normal    004C0002
.Status:End

#new:DefenseTable $DefenseTable_80219A34
.Element:Normal 00000000
.Element:Shock  00000063
.Element:Mystery00000000
.Element:Jump   00000000
.Element:Hammer 00000000
.Element:End

#new:StatusTable $StatusTable_80219A60
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_80219B0C
00800028 01000000 F62800FF $IdleAnimations_802198F0 $DefenseTable_80219A34 00000000 00000000 F1CE0000 00000000 
00020000 02000000 000000FF $IdleAnimations_8021994C $DefenseTable_80219A34 00000000 00000000 00000000 00000000 
00020000 03000000 000000FF $IdleAnimations_802199A8 $DefenseTable_80219A34 00000000 00000000 00000000 00000000 
00020001 04000000 000000FF $IdleAnimations_80219A28 $DefenseTable_80219A34 00000000 00000000 00000000 00000000 

#new:Actor $HuffNPuff
% stats
[Index]        BAb 
[Level]        80`b 
[MaxHP]        60`b 
[Coins]         0`b 
[Flags]       00008200 
[StatusTable] $StatusTable_80219A60 
% ai
[SpriteCount]   4`s 
[SpriteTable] $SpriteTable_80219B0C 
[Script]      $Script_Init_80219BC4 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  70`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]        125`b  95`b % width height
[HealthBar]   -17`b -31`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Script $Script_Init_80219BC4
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_8021D2B8 )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8021A0E4 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8021BA6C )
	Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_8021D840 )
	Call     SetActorVar 	( .Actor:Enemy0 00000000 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000006 00000064 )
	Call     SetActorVar 	( .Actor:Self 00000007 00000064 )
	ExecWait $Script_80219CC0 
	Return
	End

#new:Script $Script_80219CC0
	Call     GetActorVar 	( .Actor:Enemy0 00000006 *Var[0] )
	Call     GetActorVar 	( .Actor:Enemy0 00000007 *Var[1] )
	Mul  *Var[0]  00000091 
	Mul  *Var[1]  00000087 
	Div  *Var[0]  00000064 
	Div  *Var[1]  00000064 
	Call     8027D810 ( 00000200 *Var[1] *Var[0] )
	Call     GetActorVar 	( .Actor:Enemy0 00000006 *Var[0] )
	Call     GetActorVar 	( .Actor:Enemy0 00000007 *Var[1] )
	Mul  *Var[0]  FFFFFFF6 
	Mul  *Var[1]  00000028 
	Div  *Var[0]  00000064 
	Div  *Var[1]  00000064 
	Call     SetTargetOffset 	( .Actor:Enemy0 00000001 *Var[0] *Var[1] )
	Call     GetActorVar 	( .Actor:Enemy0 00000006 *Var[0] )
	Call     GetActorVar 	( .Actor:Enemy0 00000007 *Var[1] )
	Mul  *Var[0]  FFFFFFF1 
	Mul  *Var[1]  FFFFFFCE 
	Div  *Var[0]  00000064 
	Div  *Var[1]  00000064 
	Call     8027D4C8 ( 00000200 00000001 *Var[0] *Var[1] )
	Call     GetActorVar 	( .Actor:Enemy0 00000006 *Var[0] )
	Call     GetActorVar 	( .Actor:Enemy0 00000007 *Var[1] )
	Mul  *Var[0]  FFFFFFEF 
	Mul  *Var[1]  FFFFFFE1 
	Div  *Var[0]  00000064 
	Div  *Var[1]  00000064 
	Call     $Function_80218058 ( *Var[0] *Var[1] )
	Return
	End

#new:Script $Script_80219EF4
	Set  *Flag[00]  00000000 
	Set  *Var[A]  00000000 
	Set  *Var[B]  00000000 
	Label    00000000 
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  00000003 
	   CaseOR  ==  00000004 
	   CaseOR  ==  0000000A 
	   CaseOR  ==  0000000B 
	      If  *Flag[00]  ==  00000000 
	         Call     RandInt     	( 00000002 *Var[A] )
	         Call     RandInt     	( 00000002 *Var[B] )
	         Set  *Flag[00]  00000001 
	      Else
	         Mul  *Var[A]  FFFFFFFF 
	         Mul  *Var[B]  FFFFFFFF 
	         Set  *Flag[00]  00000000 
	      EndIf
	   EndCaseGroup
	   CaseOR  ==  00000007 
	   CaseOR  ==  00000008 
	      If  *Flag[00]  ==  00000000 
	         Call     RandInt     	( 00000001 *Var[A] )
	         Set  *Flag[00]  00000001 
	      Else
	         Mul  *Var[A]  FFFFFFFF 
	         Set  *Flag[00]  00000000 
	      EndIf
	   EndCaseGroup
	EndSwitch
	Call     8026BA04 ( FFFFFF81 *Var[A] *Var[B] 00000000 )
	Wait     00000001 
	Goto     00000000 
	Return
	End

#new:Script $Script_Idle_8021A0E4
	Set  *Var[F]  00000000 
	Loop     
	   Call     GetActorVar 	( .Actor:Self 00000003 *Var[A] )
	   Switch  *Var[A] 
	      Case  ==  00000000 
	         Call     $Function_80218114 ( *Var[F] *Var[0] *Fixed[0.9707031] *Fixed[1.0302734] 0000000F 00000000 00000000 )
	         Call     $Function_80218114 ( *Var[F] *Var[1] *Fixed[1.0302734] *Fixed[0.9707031] 0000000F 00000000 00000000 )
	         Add  *Var[F]  00000001 
	      Case  ==  00000001 
	         Call     $Function_80218114 ( *Var[F] *Var[0] *Fixed[0.9501953] *Fixed[1.0507812] 0000000F 00000000 00000000 )
	         Call     $Function_80218114 ( *Var[F] *Var[1] *Fixed[1.0507812] *Fixed[0.9501953] 0000000F 00000000 00000000 )
	         Add  *Var[F]  00000003 
	      Case  ==  00000002 
	         Call     $Function_80218114 ( *Var[F] *Var[0] *Fixed[0.9003906] *Fixed[1.1005859] 0000000F 00000000 00000000 )
	         Call     $Function_80218114 ( *Var[F] *Var[1] *Fixed[1.1005859] *Fixed[0.9003906] 0000000F 00000000 00000000 )
	         Add  *Var[F]  00000005 
	   EndSwitch
	   Call     GetActorVar 	( .Actor:Self 00000006 *Var[2] )
	   Call     GetActorVar 	( .Actor:Self 00000007 *Var[3] )
	   DivF  *Var[2]  *Fixed[100.0] 
	   DivF  *Var[3]  *Fixed[100.0] 
	   MulF  *Var[1]  *Var[2] 
	   MulF  *Var[0]  *Var[3] 
	   Call     SetActorScale 	( .Actor:Self *Var[1] *Var[0] *Fixed[1.0] )
	   If  *Var[F]  >=  0000001E 
	      Set  *Var[F]  00000000 
	   EndIf
	   Wait     00000001 
	EndLoop
	Return
	End

#new:Vector3D $Vector3D_8021A348
0` -1000` 0`

#new:SpecialFormation $SpecialFormation_8021A354
$TuffPuff $Vector3D_8021A348 00000000 00000000 00000000 00000000 00000000 

#new:SpecialFormation $SpecialFormation_8021A370
$TuffPuff $Vector3D_8021A348 00000000 00000001 00000000 00000000 00000000 

#new:Script $Script_ShedTuffPuffs
	UseArray $TuffPuffIDs 
	Call     GetLastDamage 	( .Actor:Self *Var[9] )
	If  *Var[9]  <=  00000000 
	   Return
	EndIf
	Call     GetBattleFlags ( *Var[0] )
	If  *Var[0]  &  00000240 
	   If  *Var[9]  >  00000008 
	      Set  *Var[9]  00000008 
	   EndIf
	Else
	   If  *Var[9]  >  00000004 
	      Set  *Var[9]  00000004 
	   EndIf
	EndIf
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:Death
	   CaseOR  ==  .Event:BurnDeath
	      Return
	   EndCaseGroup
	EndSwitch
	Call     GetActorVar 	( .Actor:Self 00000006 *Var[0] )
	Call     GetLastDamage 	( .Actor:Self *Var[8] )
	Mul  *Var[8]  00000001 
	Sub  *Var[0]  *Var[8] 
	If  *Var[0]  <  00000032 
	   Set  *Var[0]  00000032 
	EndIf
	Call     SetActorVar 	( .Actor:Self 00000006 *Var[0] )
	Call     GetActorVar 	( .Actor:Self 00000007 *Var[0] )
	Call     GetLastDamage 	( .Actor:Self *Var[8] )
	Mul  *Var[8]  00000001 
	Sub  *Var[0]  *Var[8] 
	If  *Var[0]  <  00000032 
	   Set  *Var[0]  00000032 
	EndIf
	Call     SetActorVar 	( .Actor:Self 00000007 *Var[0] )
	ExecWait $Script_80219CC0 
	Set  *Var[A]  00000000 
	Call     GetBattleFlags ( *Var[0] )
	If  *Var[0]  &  00000240 
	   Set  *Var[0]  *Var[9] 
	   If  *Var[0]  >  00000001 
	      Set  *Var[A]  *Var[0] 
	      Div  *Var[A]  00000002 
	      Set  *Var[9]  *Var[0] 
	      Mod  *Var[9]  00000002 
	      Add  *Var[9]  *Var[A] 
	   EndIf
	EndIf
	Loop     *Var[9] 
	   Call     $Function_802185D4 ( )
	   If  *Var[A]  >  00000000 
	      Sub  *Var[A]  00000001 
	      Call     SummonEnemy 	( $SpecialFormation_8021A370 00000000 )
	      Call     SetActorVar 	( *Var[0] 00000005 00000002 )
	   Else
	      Call     SummonEnemy 	( $SpecialFormation_8021A354 00000000 )
	      Call     SetActorVar 	( *Var[0] 00000005 00000001 )
	   EndIf
	   Call     GetActorVar 	( .Actor:Self 00000002 *Var[1] )
	   Call     $Function_80218440 ( *Var[1] *Var[2] )
	   Switch  *Var[2] 
	      Case  ==  00000001 
	         ConstOR  *Var[1] 00000001 
	         Set  *Var[2]  00000000 
	         Set  *Array[0]  *Var[0] 
	      Case  ==  00000002 
	         ConstOR  *Var[1] 00000002 
	         Set  *Var[2]  00000001 
	         Set  *Array[1]  *Var[0] 
	      Case  ==  00000004 
	         ConstOR  *Var[1] 00000004 
	         Set  *Var[2]  00000002 
	         Set  *Array[2]  *Var[0] 
	      Case  ==  00000008 
	         ConstOR  *Var[1] 00000008 
	         Set  *Var[2]  00000003 
	         Set  *Array[3]  *Var[0] 
	      Case  ==  00000010 
	         ConstOR  *Var[1] 00000010 
	         Set  *Var[2]  00000004 
	         Set  *Array[4]  *Var[0] 
	      Case  ==  00000020 
	         ConstOR  *Var[1] 00000020 
	         Set  *Var[2]  00000005 
	         Set  *Array[5]  *Var[0] 
	      Case  ==  00000040 
	         ConstOR  *Var[1] 00000040 
	         Set  *Var[2]  00000006 
	         Set  *Array[6]  *Var[0] 
	      Case  ==  00000080 
	         ConstOR  *Var[1] 00000080 
	         Set  *Var[2]  00000007 
	         Set  *Array[7]  *Var[0] 
	      Case  ==  00000100 
	         ConstOR  *Var[1] 00000100 
	         Set  *Var[2]  00000008 
	         Set  *Array[8]  *Var[0] 
	      Case  ==  00000200 
	         ConstOR  *Var[1] 00000200 
	         Set  *Var[2]  00000009 
	         Set  *Array[9]  *Var[0] 
	      Default
	         Set  *Var[2]  FFFFFFFF 
	   EndSwitch
	   Call     SetActorVar 	( .Actor:Self 00000002 *Var[1] )
	   Call     PlaySoundAtActor 	( *Var[0] .Sound:OpenShell )
	   Thread
	      Set  *Var[3]  *Var[0] 
	      Call     MakeLerp    	( 00000096 000000FF 0000000F 00000001 )
	      Label    0000007B 
	      Call     UpdateLerp  	( )
	      Call     SetSpriteAlpha ( *Var[3] 00000001 *Var[0] )
	      Wait     00000001 
	      If  *Var[1]  ==  00000001 
	         Goto     0000007B 
	      EndIf
	      Call     SetSpriteAlpha ( *Var[3] 00000001 000000FF )
	   EndThread
	   If  *Var[2]  !=  FFFFFFFF 
	      Call     8027DCBC ( FFFFFF81 *Var[0] )
	      Call     CopyStatBoosts ( .Actor:Self *Var[0] )
	      Call     SetActorVar 	( *Var[0] 00000001 *Var[2] )
	      Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	      Call     SetActorPos 	( *Var[0] *Var[3] *Var[4] *Var[5] )
	      Add  *Var[3]  FFFFFFFB 
	      Add  *Var[4]  00000000 
	      Add  *Var[5]  00000000 
	      Mul  *Var[2]  00000024 
	      Add  *Var[2]  00000000 
	      Call     $Function_802182A4 ( *Var[3] *Var[4] *Var[5] *Var[2] *Fixed[0.0] *Fixed[50.0] )
	      Thread
	         Call     SetActorJumpscale 	( *Var[0] *Fixed[0.80078125] )
	         Call     SetGoalToPos 	( *Var[0] *Var[3] *Var[4] *Var[5] )
	         Call     JumpToGoal  	( *Var[0] 0000001E 00000000 00000000 00000000 )
	         Call     ForceHomePos 	( *Var[0] *Var[3] *Var[4] *Var[5] )
	         Call     HPBarToHome 	( *Var[0] )
	      EndThread
	   Else
	      Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	      Call     SetActorPos 	( *Var[0] *Var[3] *Var[4] *Var[5] )
	      Call     RandInt     	( 000000C8 *Var[6] )
	      Sub  *Var[6]  00000064 
	      Add  *Var[3]  *Var[6] 
	      Add  *Var[5]  0000000A 
	      Thread
	         Call     SetActorJumpscale 	( *Var[0] *Fixed[0.80078125] )
	         Call     SetGoalToPos 	( *Var[0] *Var[3] FFFFFFE2 *Var[5] )
	         Call     JumpToGoal  	( *Var[0] 00000028 00000000 00000000 00000000 )
	         Call     RemoveActor 	( *Var[0] )
	      EndThread
	   EndIf
	EndLoop
	Return
	End

#new:Script $Script_8021AD3C
	ExecWait $Script_ShedTuffPuffs 
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  00000004 
	   CaseOR  ==  00000008 
	   CaseOR  ==  0000000B 
	      SetConst  *Var[2]  007C0011 
	      SetConst  *Var[3]  007C0012 
	      SetConst  *Var[4]  007C0013 
	   EndCaseGroup
	   Default
	      SetConst  *Var[2]  007C0007 
	      SetConst  *Var[3]  007C0008 
	      SetConst  *Var[4]  007C0009 
	EndSwitch
	Thread
	   Set  *Var[0]  00000001 
	   Set  *Var[1]  *Var[2] 
	   ExecWait DoNormalHit 
	EndThread
	Thread
	   Set  *Var[0]  00000002 
	   Set  *Var[1]  *Var[3] 
	   ExecWait DoNormalHit 
	EndThread
	Thread
	   Set  *Var[0]  00000003 
	   Set  *Var[1]  *Var[4] 
	   ExecWait DoNormalHit 
	EndThread
	Wait     0000001E 
	Return
	End

#new:Script $Script_8021AED8
	UseArray $TuffPuffIDs 
	Label    00000000 
	Call     GetBattleFlags ( *Var[0] )
	If  *Var[0]  &  00000100 
	   Wait     00000001 
	   Goto     00000000 
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	If  *Var[0]  &  00000001 
	   Call     80269EAC ( 00000000 )
	   Call     DispatchEvent 	( *Array[0] .Event:Death )
	EndIf
	If  *Var[0]  &  00000002 
	   Call     80269EAC ( 00000000 )
	   Call     DispatchEvent 	( *Array[1] .Event:Death )
	EndIf
	If  *Var[0]  &  00000004 
	   Call     80269EAC ( 00000000 )
	   Call     DispatchEvent 	( *Array[2] .Event:Death )
	EndIf
	If  *Var[0]  &  00000008 
	   Call     80269EAC ( 00000000 )
	   Call     DispatchEvent 	( *Array[3] .Event:Death )
	EndIf
	If  *Var[0]  &  00000010 
	   Call     80269EAC ( 00000000 )
	   Call     DispatchEvent 	( *Array[4] .Event:Death )
	EndIf
	If  *Var[0]  &  00000020 
	   Call     80269EAC ( 00000000 )
	   Call     DispatchEvent 	( *Array[5] .Event:Death )
	EndIf
	If  *Var[0]  &  00000040 
	   Call     80269EAC ( 00000000 )
	   Call     DispatchEvent 	( *Array[6] .Event:Death )
	EndIf
	If  *Var[0]  &  00000080 
	   Call     80269EAC ( 00000000 )
	   Call     DispatchEvent 	( *Array[7] .Event:Death )
	EndIf
	If  *Var[0]  &  00000100 
	   Call     80269EAC ( 00000000 )
	   Call     DispatchEvent 	( *Array[8] .Event:Death )
	EndIf
	If  *Var[0]  &  00000200 
	   Call     80269EAC ( 00000000 )
	   Call     DispatchEvent 	( *Array[9] .Event:Death )
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  00000004 
	   CaseOR  ==  00000008 
	   CaseOR  ==  0000000B 
	      Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
	      Kill     *Var[0] 
	      Call     GetActorVar 	( .Actor:Self 00000005 *Var[0] )
	      Call     RemoveEffect 	( *Var[0] )
	      Call     802D62B8 ( 0000035C )
	   EndCaseGroup
	EndSwitch
	Call     SetAnimation 	( .Actor:Self 00000002 007C0008 )
	Call     SetAnimation 	( .Actor:Self 00000003 007C0009 )
	Set  *Var[0]  00000001 
	Set  *Var[1]  007C0007 
	ExecWait DoDeath 
	Return
	End

#new:Script $Script_8021B2C0
	ExecWait $Script_ShedTuffPuffs 
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  00000004 
	   CaseOR  ==  00000008 
	   CaseOR  ==  0000000B 
	      SetConst  *Var[2]  007C0011 
	      SetConst  *Var[3]  007C0012 
	      SetConst  *Var[4]  007C0013 
	   EndCaseGroup
	   Default
	      SetConst  *Var[2]  007C0023 
	      SetConst  *Var[3]  007C0024 
	      SetConst  *Var[4]  007C0025 
	EndSwitch
	Call     SetAnimation 	( .Actor:Self 00000001 *Var[2] )
	Call     SetAnimation 	( .Actor:Self 00000002 *Var[3] )
	Call     SetAnimation 	( .Actor:Self 00000003 *Var[4] )
	Wait     00000014 
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  00000004 
	   CaseOR  ==  00000008 
	   CaseOR  ==  0000000B 
	      SetConst  *Var[2]  007C0011 
	      SetConst  *Var[3]  007C0012 
	      SetConst  *Var[4]  007C0013 
	   EndCaseGroup
	   Default
	      SetConst  *Var[2]  007C0026 
	      SetConst  *Var[3]  007C0027 
	      SetConst  *Var[4]  007C0028 
	EndSwitch
	Call     SetAnimation 	( .Actor:Self 00000001 *Var[2] )
	Call     SetAnimation 	( .Actor:Self 00000002 *Var[3] )
	Call     SetAnimation 	( .Actor:Self 00000003 *Var[4] )
	Wait     0000000A 
	Return
	End

#new:Script $Script_8021B504
	UseArray $TuffPuffIDs 
	Label    00000000 
	Call     GetBattleFlags ( *Var[0] )
	If  *Var[0]  &  00000100 
	   Wait     00000001 
	   Goto     00000000 
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	If  *Var[0]  &  00000001 
	   Call     DispatchEvent 	( *Array[0] .Event:Death )
	EndIf
	If  *Var[0]  &  00000002 
	   Call     DispatchEvent 	( *Array[1] .Event:Death )
	EndIf
	If  *Var[0]  &  00000004 
	   Call     DispatchEvent 	( *Array[2] .Event:Death )
	EndIf
	If  *Var[0]  &  00000008 
	   Call     DispatchEvent 	( *Array[3] .Event:Death )
	EndIf
	If  *Var[0]  &  00000010 
	   Call     DispatchEvent 	( *Array[4] .Event:Death )
	EndIf
	If  *Var[0]  &  00000020 
	   Call     DispatchEvent 	( *Array[5] .Event:Death )
	EndIf
	If  *Var[0]  &  00000040 
	   Call     DispatchEvent 	( *Array[6] .Event:Death )
	EndIf
	If  *Var[0]  &  00000080 
	   Call     DispatchEvent 	( *Array[7] .Event:Death )
	EndIf
	If  *Var[0]  &  00000100 
	   Call     DispatchEvent 	( *Array[8] .Event:Death )
	EndIf
	If  *Var[0]  &  00000200 
	   Call     DispatchEvent 	( *Array[9] .Event:Death )
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  00000004 
	   CaseOR  ==  00000008 
	   CaseOR  ==  0000000B 
	      Call     GetActorVar 	( .Actor:Self 00000004 *Var[0] )
	      Kill     *Var[0] 
	      Call     GetActorVar 	( .Actor:Self 00000005 *Var[0] )
	      Call     RemoveEffect 	( *Var[0] )
	      Call     802D62B8 ( 0000035C )
	   EndCaseGroup
	EndSwitch
	Call     SetAnimation 	( .Actor:Self 00000002 007C0027 )
	Call     SetAnimation 	( .Actor:Self 00000003 007C0028 )
	Set  *Var[0]  00000001 
	Set  *Var[1]  007C0026 
	ExecWait DoDeath 
	Return
	End

#new:Script $Script_8021B84C
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  00000004 
	   CaseOR  ==  00000008 
	   CaseOR  ==  0000000B 
	      SetConst  *Var[2]  007C0011 
	      SetConst  *Var[3]  007C0012 
	      SetConst  *Var[4]  007C0013 
	   EndCaseGroup
	   Default
	      SetConst  *Var[2]  007C0001 
	      SetConst  *Var[3]  007C0002 
	      SetConst  *Var[4]  007C0003 
	EndSwitch
	Thread
	   Set  *Var[0]  00000001 
	   Set  *Var[1]  *Var[2] 
	   ExecWait DoImmune 
	EndThread
	Thread
	   Set  *Var[0]  00000002 
	   Set  *Var[1]  *Var[3] 
	   ExecWait DoImmune 
	EndThread
	Thread
	   Set  *Var[0]  00000003 
	   Set  *Var[1]  *Var[4] 
	   ExecWait DoImmune 
	EndThread
	Wait     0000001E 
	Return
	End

#new:Script $Script_8021B9DC
	Call     GetActorVar 	( .Actor:Self 00000003 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      Call     SetActorVar 	( .Actor:Self 00000003 00000001 )
	   Case  ==  00000001 
	      Call     SetActorVar 	( .Actor:Self 00000003 00000002 )
	   Case  ==  00000002 
	EndSwitch
	Return
	End

#new:Script $Script_HandleEvent_8021BA6C
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   Case  ==  .Event:HitCombo
	      ExecWait $Script_8021B9DC 
	      ExecWait $Script_8021AD3C 
	   Case  ==  .Event:Hit
	      ExecWait $Script_8021B9DC 
	      ExecWait $Script_8021AD3C 
	      Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	      ConstAND *Var[0] FFFFFFFD 
	      Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	      Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
	   Case  ==  .Event:BurnHit
	      ExecWait $Script_8021B9DC 
	      ExecWait $Script_8021B2C0 
	      Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	      ConstAND *Var[0] FFFFFFFD 
	      Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	      Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
	   Case  ==  .Event:BurnDeath
	      ExecWait $Script_8021B9DC 
	      ExecWait $Script_8021B2C0 
	      ExecWait $Script_8021B504 
	      Return
	   Case  ==  00000017
	      ExecWait $Script_8021B84C 
	   Case  ==  .Event:Immune
	      ExecWait $Script_8021B84C 
	      Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	      ConstAND *Var[0] FFFFFFFD 
	      Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	   Case  ==  .Event:Death
	      ExecWait $Script_8021B9DC 
	      ExecWait $Script_8021AD3C 
	      ExecWait $Script_8021AED8 
	      Return
	   Case  ==  .Event:BeginAirLift
	      ExecWait $Script_8021B9DC 
	   Case  ==  .Event:AirLiftFailed
	      ExecWait $Script_8021B84C 
	      Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	      ConstAND *Var[0] FFFFFFFD 
	      Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	      Call     SetActorVar 	( .Actor:Self 00000003 00000000 )
	   Default
	EndSwitch
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021BD58
	UseArray $TuffPuffIDs 
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	If  *Var[0]  &  00000010 
	   Set  *Var[0]  *Array[4] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000200 
	   Set  *Var[0]  *Array[9] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000008 
	   Set  *Var[0]  *Array[3] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000020 
	   Set  *Var[0]  *Array[5] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000002 
	   Set  *Var[0]  *Array[1] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000001 
	   Set  *Var[0]  *Array[0] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000100 
	   Set  *Var[0]  *Array[8] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000004 
	   Set  *Var[0]  *Array[2] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000080 
	   Set  *Var[0]  *Array[7] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000040 
	   Set  *Var[0]  *Array[6] 
	   Goto     00000000 
	EndIf
	Goto     00000001 
	Label    00000000 
	Call     UseCamPreset 	( 00000008 )
	Call     CamTargetActor ( *Var[0] )
	Call     SetCamZoom  	( 0000012C )
	Call     SetCamOffsetZ 	( FFFFFFF6 )
	Call     MoveCamOver 	( 0000001E )
	Wait     0000001E 
	Call     UseIdleAnimation 	( *Var[0] .False )
	Call     GetActorVar 	( *Var[0] 00000000 *Var[1] )
	If  *Var[1]  ==  00000000 
	   Call     SetAnimation 	( *Var[0] 00000001 004C0009 )
	   Call     SayMessage  	( 001100CF *Var[0] 00000001 004C0014 004C0002 ) % Master Huff N. Puff! I wish to pummel Mario, too!  ...
	Else
	   Call     SayMessage  	( 001100CF *Var[0] 00000001 004C0015 004C0003 ) % Master Huff N. Puff! I wish to pummel Mario, too!  ...
	EndIf
	Call     UseIdleAnimation 	( *Var[0] .True )
	Wait     00000014 
	Label    00000001 
	Call     UseCamPreset 	( 00000008 )
	Call     CamTargetActor ( .Actor:Self )
	Call     SetCamZoom  	( 000000B4 )
	Call     SetCamOffsetZ 	( FFFFFFF6 )
	Call     MoveCamOver 	( 0000001E )
	Wait     0000001E 
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     SetAnimation 	( .Actor:Self 00000002 007C002D )
	Call     SetAnimation 	( .Actor:Self 00000003 007C002E )
	Call     SayMessage  	( 001100D0 .Actor:Self 00000001 007C002C 007C0001 ) % Yes, take him!
	Call     SetAnimation 	( .Actor:Self 00000002 007C0002 )
	Call     SetAnimation 	( .Actor:Self 00000003 007C0003 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Call     UseCamPreset 	( 00000002 )
	Return
	End

#new:Script $Script_ChargeThunder
	UseArray $TuffPuffIDs 
	Call     UseCamPreset 	( 00000008 )
	Call     CamTargetActor ( .Actor:Self )
	Call     SetCamZoom  	( 000000B4 )
	Call     SetCamOffsetZ 	( FFFFFFF6 )
	Call     MoveCamOver 	( 0000001E )
	Wait     0000001E 
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     SetAnimation 	( .Actor:Self 00000002 007C002D )
	Call     SetAnimation 	( .Actor:Self 00000003 007C002E )
	Call     SayMessage  	( 001100D1 .Actor:Self 00000001 007C002C 007C0001 ) % You asked for it... Now you'll witness the full po ...
	Call     SetAnimation 	( .Actor:Self 00000002 007C0002 )
	Call     SetAnimation 	( .Actor:Self 00000003 007C0003 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	If  *Var[0]  &  00000010 
	   Set  *Var[0]  *Array[4] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000200 
	   Set  *Var[0]  *Array[9] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000008 
	   Set  *Var[0]  *Array[3] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000020 
	   Set  *Var[0]  *Array[5] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000002 
	   Set  *Var[0]  *Array[1] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000001 
	   Set  *Var[0]  *Array[0] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000100 
	   Set  *Var[0]  *Array[8] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000004 
	   Set  *Var[0]  *Array[2] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000080 
	   Set  *Var[0]  *Array[7] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000040 
	   Set  *Var[0]  *Array[6] 
	   Goto     00000000 
	EndIf
	Goto     00000001 
	Label    00000000 
	Call     CamTargetActor ( *Var[0] )
	Call     SetCamZoom  	( 0000012C )
	Call     SetCamOffsetZ 	( FFFFFFF6 )
	Call     MoveCamOver 	( 0000001E )
	Wait     0000001E 
	Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
	Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
	If  *Var[1]  <  *Var[4] 
	   SetF  *Var[7]  *Fixed[0.0] 
	   Loop     0000000A 
	      AddF  *Var[7]  *Fixed[18.0] 
	      Call     SetActorAngle 	( *Var[0] *Var[7] )
	      Wait     00000001 
	   EndLoop
	EndIf
	Call     UseIdleAnimation 	( *Var[0] .False )
	Call     GetActorVar 	( *Var[0] 00000000 *Var[1] )
	If  *Var[1]  ==  00000000 
	   Call     SetAnimation 	( *Var[0] 00000001 004C0009 )
	   Call     SayMessage  	( 001100D2 *Var[0] 00000001 004C0014 004C0002 ) % Master Huff N. Puff! Leave him to me!!
	Else
	   Call     SayMessage  	( 001100D2 *Var[0] 00000001 004C0015 004C0003 ) % Master Huff N. Puff! Leave him to me!!
	EndIf
	Call     UseIdleAnimation 	( *Var[0] .True )
	Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
	Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
	If  *Var[1]  <  *Var[4] 
	   SetF  *Var[7]  *Fixed[180.0] 
	   Loop     0000000A 
	      SubF  *Var[7]  *Fixed[18.0] 
	      Call     SetActorAngle 	( *Var[0] *Var[7] )
	      Wait     00000001 
	   EndLoop
	EndIf
	Label    00000001 
	Call     UseCamPreset 	( 00000002 )
	Return
	End

#new:Script $Script_8021C7AC
	UseArray $TuffPuffIDs 
	Call     UseCamPreset 	( 00000008 )
	Call     CamTargetActor ( .Actor:Self )
	Call     SetCamZoom  	( 000000B4 )
	Call     SetCamOffsetZ 	( FFFFFFF6 )
	Call     MoveCamOver 	( 0000001E )
	Wait     0000001E 
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     SetAnimation 	( .Actor:Self 00000002 007C0018 )
	Call     SetAnimation 	( .Actor:Self 00000003 007C0019 )
	Call     SayMessage  	( 001100D3 .Actor:Self 00000001 007C0017 007C0017 ) % Gaaah ha ha ha ha!!!! How do you like that!?!
	Call     SetAnimation 	( .Actor:Self 00000002 007C0002 )
	Call     SetAnimation 	( .Actor:Self 00000003 007C0003 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	If  *Var[0]  &  00000010 
	   Set  *Var[0]  *Array[4] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000200 
	   Set  *Var[0]  *Array[9] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000008 
	   Set  *Var[0]  *Array[3] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000020 
	   Set  *Var[0]  *Array[5] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000002 
	   Set  *Var[0]  *Array[1] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000001 
	   Set  *Var[0]  *Array[0] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000100 
	   Set  *Var[0]  *Array[8] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000004 
	   Set  *Var[0]  *Array[2] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000080 
	   Set  *Var[0]  *Array[7] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000040 
	   Set  *Var[0]  *Array[6] 
	   Goto     00000000 
	EndIf
	Goto     00000001 
	Label    00000000 
	Call     CamTargetActor ( *Var[0] )
	Call     SetCamZoom  	( 0000012C )
	Call     SetCamOffsetZ 	( FFFFFFF6 )
	Call     MoveCamOver 	( 0000001E )
	Wait     0000001E 
	Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
	Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
	If  *Var[1]  <  *Var[4] 
	   SetF  *Var[7]  *Fixed[0.0] 
	   Loop     0000000A 
	      AddF  *Var[7]  *Fixed[18.0] 
	      Call     SetActorAngle 	( *Var[0] *Var[7] )
	      Wait     00000001 
	   EndLoop
	EndIf
	Call     UseIdleAnimation 	( *Var[0] .False )
	Call     GetActorVar 	( *Var[0] 00000000 *Var[1] )
	If  *Var[1]  ==  00000000 
	   Call     SayMessage  	( 001100D4 *Var[0] 00000001 004C0014 004C0002 ) % Whoa!! Master Huff N. Puff, you are truly the migh ...
	Else
	   Call     SayMessage  	( 001100D4 *Var[0] 00000001 004C0015 004C0003 ) % Whoa!! Master Huff N. Puff, you are truly the migh ...
	EndIf
	Call     UseIdleAnimation 	( *Var[0] .True )
	Call     GetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
	Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
	If  *Var[1]  <  *Var[4] 
	   SetF  *Var[7]  *Fixed[180.0] 
	   Loop     0000000A 
	      SubF  *Var[7]  *Fixed[18.0] 
	      Call     SetActorAngle 	( *Var[0] *Var[7] )
	      Wait     00000001 
	   EndLoop
	EndIf
	Label    00000001 
	Call     UseCamPreset 	( 00000002 )
	Return
	End

#new:Script $Script_8021CD54
	UseArray $TuffPuffIDs 
	Call     UseCamPreset 	( 00000008 )
	Call     CamTargetActor ( .Actor:Self )
	Call     SetCamZoom  	( 000000B4 )
	Call     SetCamOffsetZ 	( FFFFFFF6 )
	Call     MoveCamOver 	( 0000001E )
	Wait     0000001E 
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     SetAnimation 	( .Actor:Self 00000002 007C0024 )
	Call     SetAnimation 	( .Actor:Self 00000003 007C0025 )
	Call     SayMessage  	( 001100D5 .Actor:Self 00000001 007C0023 007C0023 ) % We seem to be in trouble. Hmm... I guess I'd bette ...
	Call     SetAnimation 	( .Actor:Self 00000002 007C0002 )
	Call     SetAnimation 	( .Actor:Self 00000003 007C0003 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	If  *Var[0]  &  00000010 
	   Set  *Var[0]  *Array[4] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000200 
	   Set  *Var[0]  *Array[9] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000008 
	   Set  *Var[0]  *Array[3] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000020 
	   Set  *Var[0]  *Array[5] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000002 
	   Set  *Var[0]  *Array[1] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000001 
	   Set  *Var[0]  *Array[0] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000100 
	   Set  *Var[0]  *Array[8] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000004 
	   Set  *Var[0]  *Array[2] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000080 
	   Set  *Var[0]  *Array[7] 
	   Goto     00000000 
	EndIf
	If  *Var[0]  &  00000040 
	   Set  *Var[0]  *Array[6] 
	   Goto     00000000 
	EndIf
	Goto     00000001 
	Label    00000000 
	Call     CamTargetActor ( *Var[0] )
	Call     SetCamZoom  	( 0000012C )
	Call     SetCamOffsetZ 	( FFFFFFF6 )
	Call     MoveCamOver 	( 0000001E )
	Wait     0000001E 
	Call     UseIdleAnimation 	( *Var[0] .False )
	Call     GetActorVar 	( *Var[0] 00000000 *Var[1] )
	If  *Var[1]  ==  00000000 
	   Call     SayMessage  	( 001100D6 *Var[0] 00000001 004C0014 004C0002 ) % Will you be all right, Master?
	Else
	   Call     SayMessage  	( 001100D6 *Var[0] 00000001 004C0015 004C0003 ) % Will you be all right, Master?
	EndIf
	Call     UseIdleAnimation 	( *Var[0] .True )
	Label    00000001 
	Call     UseCamPreset 	( 00000008 )
	Call     CamTargetActor ( .Actor:Self )
	Call     SetCamZoom  	( 000000B4 )
	Call     SetCamOffsetZ 	( FFFFFFF6 )
	Call     MoveCamOver 	( 0000001E )
	Wait     0000001E 
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     SetAnimation 	( .Actor:Self 00000002 007C0024 )
	Call     SetAnimation 	( .Actor:Self 00000003 007C0025 )
	Call     SayMessage  	( 001100D7 .Actor:Self 00000001 007C0023 007C0023 ) % We're not finished yet!!! Here I come!!!!
	Call     SetAnimation 	( .Actor:Self 00000002 007C0002 )
	Call     SetAnimation 	( .Actor:Self 00000003 007C0003 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Call     UseCamPreset 	( 00000002 )
	Return
	End

#new:Script $Script_TakeTurn_8021D2B8
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  00000004 
	   CaseOR  ==  00000008 
	   CaseOR  ==  0000000B 
	   EndCaseGroup
	   Default
	      Call     GetActorHP  	( .Actor:Self *Var[0] )
	      If  *Var[0]  <=  00000005 
	         Call     SetActorVar 	( .Actor:Self 00000001 0000000C )
	      EndIf
	EndSwitch
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000003 
	      Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	      If  *Var[0]  !&  00000020 
	         Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	         ConstOR  *Var[0] 00000020 
	         Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	         ExecWait $Script_ChargeThunder 
	      EndIf
	EndSwitch
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	If  *Var[0]  !=  00000000 
	   Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	   If  *Var[0]  !&  00000010 
	      Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	      ConstOR  *Var[0] 00000010 
	      Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	      ExecWait $Script_8021BD58 
	   EndIf
	   ExecWait $Script_TuffPuffSwarm 
	EndIf
	Call     GetPlayerHP 	( *Var[0] )
	If  *Var[0]  ==  00000000 
	   Return
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  0000000C 
	      Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	      If  *Var[0]  !&  00000080 
	         Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	         ConstOR  *Var[0] 00000080 
	         Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	         ExecWait $Script_8021CD54 
	      EndIf
	EndSwitch
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      ExecWait $Script_HealOrSlam 
	      Call     SetActorVar 	( .Actor:Self 00000001 00000001 )
	   Case  ==  00000001 
	      ExecWait $Script_HurricaneBreath 
	      Call     SetActorVar 	( .Actor:Self 00000001 00000002 )
	   Case  ==  00000002 
	      ExecWait $Script_HealOrSlam 
	      Call     SetActorVar 	( .Actor:Self 00000001 00000003 )
	   Case  ==  00000003 
	      ExecWait $Script_80220950 
	      Call     SetActorVar 	( .Actor:Self 00000001 00000004 )
	   Case  ==  00000004 
	      ExecWait $Script_Thunderstorm 
	      Call     SetActorVar 	( .Actor:Self 00000001 00000005 )
	   Case  ==  00000005 
	      ExecWait $Script_HealOrSlam 
	      Call     SetActorVar 	( .Actor:Self 00000001 00000006 )
	   Case  ==  00000006 
	      ExecWait $Script_HurricaneBreath 
	      Call     SetActorVar 	( .Actor:Self 00000001 00000007 )
	   Case  ==  00000007 
	      ExecWait $Script_80221338 
	      Call     SetActorVar 	( .Actor:Self 00000001 00000008 )
	   Case  ==  00000008 
	      ExecWait $Script_HighBodySlam 
	      Call     SetActorVar 	( .Actor:Self 00000001 00000009 )
	   Case  ==  00000009 
	      ExecWait $Script_HealOrSlam 
	      Call     SetActorVar 	( .Actor:Self 00000001 0000000A )
	   Case  ==  0000000A 
	      ExecWait $Script_80220950 
	      Call     SetActorVar 	( .Actor:Self 00000001 0000000B )
	   Case  ==  0000000B 
	      ExecWait $Script_Thunderstorm 
	      Call     SetActorVar 	( .Actor:Self 00000001 00000000 )
	   Case  ==  0000000C 
	      ExecWait $Script_80222528 
	EndSwitch
	Return
	End

#new:Script $Script_NextTurn_8021D840
	Call     GetBattlePhase ( *Var[0] )
	Switch  *Var[0] 
	   Case  ==  .Phase:PlayerBegin
	   Case  ==  .Phase:EnemyBegin
	   Case  ==  .Phase:EnemyEnd
	      Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	      If  *Var[0]  &  00000008 
	         If  *Var[0]  !&  00000040 
	            Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	            ConstOR  *Var[0] 00000040 
	            Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	            ExecWait $Script_8021C7AC 
	         EndIf
	      EndIf
	EndSwitch
	Return
	End

#new:Script $Script_BodySlam
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000003F )
	Call     AddCamZoom  	( FFFFFF38 )
	Call     SetCamOffsetZ 	( FFFFFFE2 )
	Call     CamTargetActor ( .Actor:Self )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetActorVar 	( .Actor:Self 00000006 *Var[0] )
	Call     GetActorVar 	( .Actor:Self 00000007 *Var[1] )
	SetF  *Var[2]  *Fixed[62.5] 
	SetF  *Var[3]  *Fixed[47.5] 
	MulF  *Var[2]  *Var[0] 
	MulF  *Var[3]  *Var[1] 
	DivF  *Var[2]  *Fixed[100.0] 
	DivF  *Var[3]  *Fixed[100.0] 
	Call     AddToGoalPos 	( .Actor:Self *Var[2] *Var[3] 00000000 )
	Call     AddToGoalPos 	( .Actor:Self 00000000 00000014 00000000 )
	Call     MoveToGoal  	( .Actor:Self 00000028 FFFFFFEC .Easing:SinOut )
	Wait     0000000A 
	Call     PlaySoundAtActor 	( .Actor:Self 000003E7 )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Call     UseCamPreset 	( 00000001 )
	      Call     SetAnimation 	( .Actor:Self 00000001 007C000B )
	      Call     SetAnimation 	( .Actor:Self 00000002 007C000C )
	      Call     SetAnimation 	( .Actor:Self 00000003 007C000D )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[5] *Var[6] *Var[7] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[5] *Var[3] *Var[7] )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
	      Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000000 00000000 )
	      Thread
	         Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[0.80078125] )
	      EndThread
	      If  *Var[0]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Call     SetAnimation 	( .Actor:Self 00000001 007C0004 )
	      Call     SetAnimation 	( .Actor:Self 00000002 007C0005 )
	      Call     SetAnimation 	( .Actor:Self 00000003 007C0006 )
	      Call     SetActorJumpscale 	( .Actor:Self *Fixed[0.5] )
	      Call     AddToGoalPos 	( .Actor:Self FFFFFFB0 00000000 00000000 )
	      Call     JumpToGoal  	( .Actor:Self 00000019 00000000 00000000 00000000 )
	      Thread
	         Call     ShakeCam    	( 00000001 00000000 00000008 *Fixed[0.60058594] )
	      EndThread
	      Call     AddToGoalPos 	( .Actor:Self FFFFFFCE 00000000 00000000 )
	      Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000000 00000000 )
	      Thread
	         Call     ShakeCam    	( 00000001 00000000 00000006 *Fixed[0.40039062] )
	      EndThread
	      Call     AddToGoalPos 	( .Actor:Self FFFFFFE2 00000000 00000000 )
	      Call     JumpToGoal  	( .Actor:Self 0000000F 00000000 00000000 00000000 )
	      Thread
	         Call     ShakeCam    	( 00000001 00000000 00000004 *Fixed[0.20019531] )
	      EndThread
	      Call     AddToGoalPos 	( .Actor:Self FFFFFFEC 00000000 00000000 )
	      Call     JumpToGoal  	( .Actor:Self 0000000A 00000000 00000000 00000000 )
	      Wait     0000001E 
	      Call     SetAnimation 	( .Actor:Self 00000001 007C0001 )
	      Call     SetAnimation 	( .Actor:Self 00000002 007C0002 )
	      Call     SetAnimation 	( .Actor:Self 00000003 007C0003 )
	      Call     UseCamPreset 	( 00000002 )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     MoveToGoal  	( .Actor:Self 00000050 FFFFFFEC .Easing:SinOut )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetAnimation 	( .Actor:Self 00000001 007C000B )
	Call     SetAnimation 	( .Actor:Self 00000002 007C000C )
	Call     SetAnimation 	( .Actor:Self 00000003 007C000D )
	Call     SetActorJumpscale 	( .Actor:Self *Fixed[1.0] )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     AddToGoalPos 	( .Actor:Self 00000000 *Var[3] 00000005 )
	Call     AddToGoalPos 	( .Actor:Self 00000000 FFFFFFE2 00000000 )
	Call     JumpToGoal  	( .Actor:Self 00000014 00000000 00000000 00000000 )
	Call     80269EAC ( 00000018 )
	Wait     00000002 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetActorHP  	( .Actor:Self *Var[0] )
	Call     GetEnemyMaxHP 	( .Actor:Self *Var[1] )
	Mul  *Var[0]  00000064 
	Div  *Var[0]  *Var[1] 
	Switch  *Var[0] 
	   Case  <=  00000014 
	      Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000008 00000000 00000005 00000020 )
	   Case  <=  00000028 
	      Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000008 00000000 00000005 00000020 )
	   Case  <=  0000003C 
	      Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000008 00000000 00000005 00000020 )
	   Case  <=  00000050 
	      Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000008 00000000 00000005 00000020 )
	   Default
	      Call     DamageTarget 	( .Actor:Self *Var[0] 00000000 00000008 00000000 00000005 00000020 )
	EndSwitch
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Thread
	         Call     ShakeCam    	( 00000001 00000000 00000014 *Fixed[1.0] )
	      EndThread
	      Call     UseCamPreset 	( 00000002 )
	      Call     GetBattleFlags ( *Var[0] )
	      If  *Var[0]  !&  80000000 
	         Call     GetStatusFlags ( .Actor:Player *Var[0] )
	         If  *Var[0]  !&  00100000 
	            Thread
	               Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	               Add  *Var[1]  0000000A 
	               Wait     00000037 
	               Call     PlayEffect  	( {FX:YellowCloudPuff} *Var[0] *Var[1] *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	            EndThread
	         EndIf
	      EndIf
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     SetGoalToPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     AddToGoalPos 	( .Actor:Self 0000001E 00000000 00000000 )
	      Call     80279728 ( FFFFFF81 00000014 *Fixed[4.0] )
	      Wait     00000014 
	      Call     SetAnimation 	( .Actor:Self 00000001 007C0001 )
	      Call     SetAnimation 	( .Actor:Self 00000002 007C0002 )
	      Call     SetAnimation 	( .Actor:Self 00000003 007C0003 )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     MoveToGoal  	( .Actor:Self 00000028 FFFFFFEC .Easing:SinOut )
	   EndCaseGroup
	EndSwitch
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_8021E364
	UseArray $TuffPuffIDs 
	Call     SetOwnerID  	( *Var[0] )
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     GetActorPos 	( .Actor:Self *Var[2] *Var[3] *Var[4] )
	Call     GetActorPos 	( .Actor:Enemy0 *Var[5] *Var[6] *Var[7] )
	Add  *Var[5]  FFFFFFF3 
	Add  *Var[6]  00000000 
	Add  *Var[7]  00000000 
	Call     $Function_80218620 ( *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Var[6] *Var[7] )
	Thread
	   Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
	   Wait     0000000A 
	   Call     SetActorVar 	( .Actor:Self 00000002 00000002 )
	   Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	   If  *Var[0]  ==  00000000 
	      Call     SetAnimation 	( .Actor:Self 00000001 004C0012 )
	   Else
	      Call     SetAnimation 	( .Actor:Self 00000001 004C0013 )
	   EndIf
	EndThread
	Wait     0000000F 
	Thread
	   Wait     00000023 
	   Call     MakeLerp    	( 000000FF 00000000 0000000A 00000000 )
	   Label    0000000A 
	   Call     UpdateLerp  	( )
	   Call     SetSpriteAlpha ( .Actor:Self 00000001 *Var[0] )
	   Wait     00000001 
	   If  *Var[1]  ==  00000001 
	      Goto     0000000A 
	   EndIf
	   Call     SetActorFlagBits 	( .Actor:Self 00000004 .True )
	EndThread
	Switch  *Var[1] 
	   Case  ==  00000000 
	      Call     LoadPath    	( 00000028 $End[0] 00000003 00000001 )
	   Case  ==  00000001 
	      Call     LoadPath    	( 00000028 $End[24] 00000003 00000001 )
	   Case  ==  00000002 
	      Call     LoadPath    	( 00000028 $End[48] 00000003 00000001 )
	   Case  ==  00000003 
	      Call     LoadPath    	( 00000028 $End[6C] 00000003 00000001 )
	   Case  ==  00000004 
	      Call     LoadPath    	( 00000028 $End[90] 00000003 00000001 )
	   Case  ==  00000005 
	      Call     LoadPath    	( 00000028 $End[B4] 00000003 00000001 )
	   Case  ==  00000006 
	      Call     LoadPath    	( 00000028 $End[D8] 00000003 00000001 )
	   Case  ==  00000007 
	      Call     LoadPath    	( 00000028 $End[FC] 00000003 00000001 )
	   Case  ==  00000008 
	      Call     LoadPath    	( 00000028 $End[120] 00000003 00000001 )
	   Case  ==  00000009 
	      Call     LoadPath    	( 00000028 $End[144] 00000003 00000001 )
	EndSwitch
	Label    00000000 
	Call     GetNextPathPos ( )
	Call     SetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
	Wait     00000001 
	If  *Var[0]  ==  00000001 
	   Goto     00000000 
	EndIf
	Call     GetEnemyMaxHP 	( .Actor:Self *Var[A] )
	Mul  *Var[A]  00000001 
	Call     GetActorVar 	( .Actor:Enemy0 00000006 *Var[0] )
	Add  *Var[0]  *Var[A] 
	If  *Var[0]  >  00000064 
	   Set  *Var[0]  00000064 
	EndIf
	Call     SetActorVar 	( .Actor:Enemy0 00000006 *Var[0] )
	Call     GetActorVar 	( .Actor:Enemy0 00000007 *Var[0] )
	Add  *Var[0]  *Var[A] 
	If  *Var[0]  >  00000064 
	   Set  *Var[0]  00000064 
	EndIf
	Call     SetActorVar 	( .Actor:Enemy0 00000007 *Var[0] )
	ExecWait $Script_80219CC0 
	Wait     0000000A 
	Call     RemoveActor 	( .Actor:Self )
	Return
	End

#new:Script $Script_HealOrSlam
	UseArray $TuffPuffIDs 
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[9] )
	If  *Var[9]  ==  00000000 
	   ExecWait $Script_BodySlam 
	   Return
	EndIf
	Set  *Var[A]  00000000 
	If  *Var[9]  &  00000001 
	   Call     GetActorVar 	( *Array[0] 00000005 *Var[B] )
	   Add  *Var[A]  *Var[B] 
	EndIf
	If  *Var[9]  &  00000002 
	   Call     GetActorVar 	( *Array[1] 00000005 *Var[B] )
	   Add  *Var[A]  *Var[B] 
	EndIf
	If  *Var[9]  &  00000004 
	   Call     GetActorVar 	( *Array[2] 00000005 *Var[B] )
	   Add  *Var[A]  *Var[B] 
	EndIf
	If  *Var[9]  &  00000008 
	   Call     GetActorVar 	( *Array[3] 00000005 *Var[B] )
	   Add  *Var[A]  *Var[B] 
	EndIf
	If  *Var[9]  &  00000010 
	   Call     GetActorVar 	( *Array[4] 00000005 *Var[B] )
	   Add  *Var[A]  *Var[B] 
	EndIf
	If  *Var[9]  &  00000020 
	   Call     GetActorVar 	( *Array[5] 00000005 *Var[B] )
	   Add  *Var[A]  *Var[B] 
	EndIf
	If  *Var[9]  &  00000040 
	   Call     GetActorVar 	( *Array[6] 00000005 *Var[B] )
	   Add  *Var[A]  *Var[B] 
	EndIf
	If  *Var[9]  &  00000080 
	   Call     GetActorVar 	( *Array[7] 00000005 *Var[B] )
	   Add  *Var[A]  *Var[B] 
	EndIf
	If  *Var[9]  &  00000100 
	   Call     GetActorVar 	( *Array[8] 00000005 *Var[B] )
	   Add  *Var[A]  *Var[B] 
	EndIf
	If  *Var[9]  &  00000200 
	   Call     GetActorVar 	( *Array[9] 00000005 *Var[B] )
	   Add  *Var[A]  *Var[B] 
	EndIf
	Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	If  *Var[0]  &  00000001 
	   If  *Var[A]  <=  00000002 
	      Call     RandInt     	( 00000064 *Var[B] )
	      If  *Var[B]  <  00000032 
	         ExecWait $Script_BodySlam 
	         Return
	      EndIf
	   EndIf
	EndIf
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     PlaySoundAtActor 	( .Actor:Self 000003B0 )
	Call     SetAnimation 	( .Actor:Self 00000001 007C001A )
	Call     SetAnimation 	( .Actor:Self 00000002 007C001B )
	Call     SetAnimation 	( .Actor:Self 00000003 007C001C )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[0]  FFFFFFF3 
	Add  *Var[1]  00000000 
	Add  *Var[2]  00000000 
	Call     $Function_80218774 ( 00000000 *Var[0] *Var[1] *Var[2] *Fixed[180.0] *Fixed[-1.0] *Fixed[1.2001953] 00000000 *Var[8] )
	Call     $Function_80218000 ( 00000050 000000DC )
	Thread
	   Call     ShakeCam    	( 00000001 00000000 0000006E *Fixed[0.30078125] )
	EndThread
	Wait     00000014 
	Call     PlaySoundAtActor 	( .Actor:Self .Sound:BigPowerUp )
	Set  *Var[1]  00000000 
	If  *Var[9]  &  00000010 
	   Set  *Var[0]  *Array[4] 
	   Exec     $Script_8021E364 *Var[7] 
	   Add  *Var[1]  00000001 
	   Wait     00000005 
	EndIf
	If  *Var[9]  &  00000200 
	   Set  *Var[0]  *Array[9] 
	   Exec     $Script_8021E364 *Var[7] 
	   Add  *Var[1]  00000001 
	   Wait     00000005 
	EndIf
	If  *Var[9]  &  00000008 
	   Set  *Var[0]  *Array[3] 
	   Exec     $Script_8021E364 *Var[7] 
	   Add  *Var[1]  00000001 
	   Wait     00000005 
	EndIf
	If  *Var[9]  &  00000020 
	   Set  *Var[0]  *Array[5] 
	   Exec     $Script_8021E364 *Var[7] 
	   Add  *Var[1]  00000001 
	   Wait     00000005 
	EndIf
	If  *Var[9]  &  00000002 
	   Set  *Var[0]  *Array[1] 
	   Exec     $Script_8021E364 *Var[7] 
	   Add  *Var[1]  00000001 
	   Wait     00000005 
	EndIf
	If  *Var[9]  &  00000001 
	   Set  *Var[0]  *Array[0] 
	   Exec     $Script_8021E364 *Var[7] 
	   Add  *Var[1]  00000001 
	   Wait     00000005 
	EndIf
	If  *Var[9]  &  00000100 
	   Set  *Var[0]  *Array[8] 
	   Exec     $Script_8021E364 *Var[7] 
	   Add  *Var[1]  00000001 
	   Wait     00000005 
	EndIf
	If  *Var[9]  &  00000004 
	   Set  *Var[0]  *Array[2] 
	   Exec     $Script_8021E364 *Var[7] 
	   Add  *Var[1]  00000001 
	   Wait     00000005 
	EndIf
	If  *Var[9]  &  00000080 
	   Set  *Var[0]  *Array[7] 
	   Exec     $Script_8021E364 *Var[7] 
	   Add  *Var[1]  00000001 
	   Wait     00000005 
	EndIf
	If  *Var[9]  &  00000040 
	   Set  *Var[0]  *Array[6] 
	   Exec     $Script_8021E364 *Var[7] 
	   Add  *Var[1]  00000001 
	   Wait     00000005 
	EndIf
	Label    00000000 
	DoesScriptExist *Var[7] *Var[0] 
	Wait     00000001 
	If  *Var[0]  ==  00000001 
	   Goto     00000000 
	EndIf
	Call     RemoveEffect 	( *Var[8] )
	Call     802D62B8 ( 000003B0 )
	Call     802D62B8 ( 000003E6 )
	Call     SetAnimation 	( .Actor:Self 00000001 007C0017 )
	Call     SetAnimation 	( .Actor:Self 00000002 007C0018 )
	Call     SetAnimation 	( .Actor:Self 00000003 007C0019 )
	Thread
	   Wait     00000005 
	   Call     PlaySoundAtActor 	( .Actor:Self 0000206D )
	   Call     PlaySoundAtActor 	( .Actor:Self 00000214 )
	EndThread
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetActorVar 	( .Actor:Self 00000006 *Var[3] )
	Call     PlayEffect  	( {FX:Sparkles:Star} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Add  *Var[0]  00000014 
	Call     PlayEffect  	( {FX:Recover:HP} *Var[0] *Var[1] *Var[2] *Var[A] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     GetActorHP  	( .Actor:Self *Var[B] )
	Add  *Var[B]  *Var[A] 
	Call     SetEnemyHP  	( .Actor:Self *Var[B] )
	Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
	Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	ConstOR  *Var[0] 00000001 
	Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	Wait     0000001E 
	Call     UseCamPreset 	( 00000002 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_HurricaneBreath
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetAnimation 	( .Actor:Self 00000001 007C001A )
	Call     SetAnimation 	( .Actor:Self 00000002 007C001B )
	Call     SetAnimation 	( .Actor:Self 00000003 007C001C )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetActorVar 	( .Actor:Self 00000006 *Var[3] )
	Call     GetActorVar 	( .Actor:Self 00000007 *Var[4] )
	MulF  *Var[3]  *Fixed[-13.0] 
	MulF  *Var[4]  *Fixed[0.0] 
	DivF  *Var[3]  *Fixed[100.0] 
	DivF  *Var[4]  *Fixed[100.0] 
	Add  *Var[0]  *Var[3] 
	Add  *Var[1]  *Var[4] 
	Call     PlayEffect  	( 0000006E 00000001 *Var[0] *Var[1] *Var[2] *Fixed[190.0] *Fixed[-1.0] *Fixed[1.5] 00000064 00000000 00000000 00000000 00000000 00000000 )
	Call     $Function_80218000 ( 00000050 00000096 )
	Thread
	   Call     ShakeCam    	( 00000001 00000000 0000004B *Fixed[0.30078125] )
	EndThread
	Thread
	   Call     GetActorVar 	( .Actor:Self 00000006 *Var[2] )
	   Set  *Var[3]  *Var[2] 
	   Add  *Var[3]  00000019 
	   Call     MakeLerp    	( *Var[2] *Var[3] 0000005A 0000000B )
	   Label    00000000 
	   Call     UpdateLerp  	( )
	   Call     SetActorVar 	( .Actor:Self 00000006 *Var[0] )
	   Wait     00000001 
	   If  *Var[1]  ==  00000001 
	      Goto     00000000 
	   EndIf
	EndThread
	Thread
	   Call     GetActorVar 	( .Actor:Self 00000007 *Var[2] )
	   Set  *Var[3]  *Var[2] 
	   Add  *Var[3]  00000019 
	   Call     MakeLerp    	( *Var[2] *Var[3] 0000005A 0000000B )
	   Label    00000001 
	   Call     UpdateLerp  	( )
	   Call     SetActorVar 	( .Actor:Self 00000007 *Var[0] )
	   Wait     00000001 
	   If  *Var[1]  ==  00000001 
	      Goto     00000001 
	   EndIf
	EndThread
	Call     PlaySoundAtActor 	( .Actor:Self 000003B0 )
	Thread
	   Wait     0000000F 
	   Call     PlaySoundAtActor 	( .Actor:Self .Sound:BigPowerUp )
	EndThread
	Call     UseCamPreset 	( 00000013 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub  *Var[0]  00000014 
	Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
	Call     SetCamZoom  	( 0000012C )
	Call     SetCamOffsetZ 	( 00000014 )
	Call     MoveCamOver 	( 000000B4 )
	Wait     0000005A 
	Call     802D62B8 ( 000003B0 )
	Call     SetAnimation 	( .Actor:Self 00000001 007C001D )
	Call     SetAnimation 	( .Actor:Self 00000002 007C001D )
	Call     SetAnimation 	( .Actor:Self 00000003 007C001E )
	Wait     0000003C 
	Call     SetAnimation 	( .Actor:Self 00000001 007C0020 )
	Call     SetAnimation 	( .Actor:Self 00000002 007C0021 )
	Call     SetAnimation 	( .Actor:Self 00000003 007C0022 )
	Call     PlaySoundAtActor 	( .Actor:Self 0000035D )
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 0000000F )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Set  *Var[A]  *Var[0] 
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Thread
	         Call     GetActorVar 	( .Actor:Self 00000006 *Var[2] )
	         Set  *Var[3]  *Var[2] 
	         Sub  *Var[3]  00000019 
	         Call     MakeLerp    	( *Var[2] *Var[3] 00000028 00000002 )
	         Label    00000002 
	         Call     UpdateLerp  	( )
	         Call     SetActorVar 	( .Actor:Self 00000006 *Var[0] )
	         Wait     00000001 
	         If  *Var[1]  ==  00000001 
	            Goto     00000002 
	         EndIf
	      EndThread
	      Thread
	         Call     GetActorVar 	( .Actor:Self 00000007 *Var[2] )
	         Set  *Var[3]  *Var[2] 
	         Sub  *Var[3]  00000019 
	         Call     MakeLerp    	( *Var[2] *Var[3] 00000028 00000002 )
	         Label    00000003 
	         Call     UpdateLerp  	( )
	         Call     SetActorVar 	( .Actor:Self 00000007 *Var[0] )
	         Wait     00000001 
	         If  *Var[1]  ==  00000001 
	            Goto     00000003 
	         EndIf
	      EndThread
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     GetActorVar 	( .Actor:Self 00000006 *Var[3] )
	      Call     GetActorVar 	( .Actor:Self 00000007 *Var[4] )
	      MulF  *Var[3]  *Fixed[-20.0] 
	      MulF  *Var[4]  *Fixed[-20.0] 
	      DivF  *Var[3]  *Fixed[100.0] 
	      DivF  *Var[4]  *Fixed[100.0] 
	      Add  *Var[0]  *Var[3] 
	      Add  *Var[1]  *Var[4] 
	      Call     PlayEffect  	( {FX:HuffPuffBreath} *Var[0] *Var[1] *Var[2] *Fixed[190.0] *Fixed[1.5] *Fixed[1.0] 00000028 00000000 00000000 00000000 00000000 00000000 )
	      Call     $Function_80218000 ( 00000050 0000003C )
	      Thread
	         Call     ShakeCam    	( 00000001 00000000 0000001E *Fixed[0.30078125] )
	      EndThread
	      Loop     0000000A 
	         Call     RandInt     	( 00000096 *Var[3] )
	         Call     RandInt     	( 00000064 *Var[4] )
	         Add  *Var[3]  00000032 
	         SetF  *Var[4]  *Fixed[5.0] 
	         Call     RandInt     	( 00000004 *Var[5] )
	         AddF  *Var[4]  *Var[5] 
	         DivF  *Var[4]  *Fixed[10.0] 
	         SetF  *Var[5]  *Fixed[100.0] 
	         Call     RandInt     	( 00000028 *Var[6] )
	         AddF  *Var[5]  *Var[6] 
	         DivF  *Var[5]  *Fixed[10.0] 
	         Call     PlayEffect  	( {FX:MovingCloud} 000000C8 *Var[3] 00000005 FFFFFF38 *Var[4] 00000005 *Var[5] *Var[4] 00000000 00000000 00000000 00000000 )
	         Call     RandInt     	( 00000005 *Var[0] )
	         Add  *Var[0]  00000005 
	         Wait     *Var[0] 
	      EndLoop
	      Wait     00000014 
	      Call     802D62B8 ( 0000035D )
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Call     SetAnimation 	( .Actor:Self 00000001 007C0004 )
	      Call     SetAnimation 	( .Actor:Self 00000002 007C0005 )
	      Call     SetAnimation 	( .Actor:Self 00000003 007C0006 )
	      Wait     00000014 
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     GetStatusFlags ( .Actor:Player *Var[0] )
	If  *Var[0]  !&  00100000 
	   Call     ShowMessageBox ( 00000031 000000B4 )
	   Call     802694A4 ( 00000001 )
	   Call     LoadActionCommand 	( 00000005 )
	   Call     802A9000 ( 00000000 )
	   Call     802691C8 ( 00000005 00000014 00000028 0000003C 00000050 00000064 )
	   Wait     0000000A 
	   Call     SetBattleFlagBits 	( 00004000 .False )
	   Call     802A91E0 ( 00000000 000000C8 00000003 )
	   Thread
	      Call     GetActorVar 	( .Actor:Self 00000006 *Var[2] )
	      Set  *Var[3]  *Var[2] 
	      Sub  *Var[3]  00000019 
	      Call     MakeLerp    	( *Var[2] *Var[3] 000000C8 00000002 )
	      Label    00000004 
	      Call     UpdateLerp  	( )
	      Call     SetActorVar 	( .Actor:Self 00000006 *Var[0] )
	      Wait     00000001 
	      If  *Var[1]  ==  00000001 
	         Goto     00000004 
	      EndIf
	   EndThread
	   Thread
	      Call     GetActorVar 	( .Actor:Self 00000007 *Var[2] )
	      Set  *Var[3]  *Var[2] 
	      Sub  *Var[3]  00000019 
	      Call     MakeLerp    	( *Var[2] *Var[3] 000000C8 00000002 )
	      Label    00000005 
	      Call     UpdateLerp  	( )
	      Call     SetActorVar 	( .Actor:Self 00000007 *Var[0] )
	      Wait     00000001 
	      If  *Var[1]  ==  00000001 
	         Goto     00000005 
	      EndIf
	   EndThread
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetActorVar 	( .Actor:Self 00000006 *Var[3] )
	   Call     GetActorVar 	( .Actor:Self 00000007 *Var[4] )
	   MulF  *Var[3]  *Fixed[-20.0] 
	   MulF  *Var[4]  *Fixed[-20.0] 
	   DivF  *Var[3]  *Fixed[100.0] 
	   DivF  *Var[4]  *Fixed[100.0] 
	   Add  *Var[0]  *Var[3] 
	   Add  *Var[1]  *Var[4] 
	   Call     PlayEffect  	( {FX:HuffPuffBreath} *Var[0] *Var[1] *Var[2] *Fixed[190.0] *Fixed[1.5] *Fixed[1.0] 000000C8 00000000 00000000 00000000 00000000 00000000 )
	   Call     $Function_80218000 ( 00000064 0000015E )
	   Thread
	      Call     ShakeCam    	( 00000001 00000000 000000AF *Fixed[0.30078125] )
	   EndThread
	   Thread
	      Loop     00000019 
	         Call     RandInt     	( 00000096 *Var[3] )
	         Call     RandInt     	( 00000064 *Var[4] )
	         Add  *Var[3]  00000032 
	         SetF  *Var[4]  *Fixed[5.0] 
	         Call     RandInt     	( 00000004 *Var[5] )
	         AddF  *Var[4]  *Var[5] 
	         DivF  *Var[4]  *Fixed[10.0] 
	         SetF  *Var[5]  *Fixed[100.0] 
	         Call     RandInt     	( 00000028 *Var[6] )
	         AddF  *Var[5]  *Var[6] 
	         DivF  *Var[5]  *Fixed[10.0] 
	         Call     PlayEffect  	( {FX:MovingCloud} 000000C8 *Var[3] 00000005 FFFFFF38 *Var[4] 00000005 *Var[5] *Var[4] 00000000 00000000 00000000 00000000 )
	         Call     RandInt     	( 00000005 *Var[0] )
	         Add  *Var[0]  00000005 
	         Wait     *Var[0] 
	      EndLoop
	   EndThread
	   Call     MakeLerp    	( 00000000 00001C20 000000C8 0000000B )
	   Label    0000000A 
	   Call     UpdateLerp  	( )
	   Call     SetActorAngle 	( .Actor:Player *Var[0] )
	   Wait     00000001 
	   If  *Var[1]  ==  00000001 
	      Goto     0000000A 
	   EndIf
	   Call     802695A8 ( *Var[1] )
	Else
	   Thread
	      Call     GetActorVar 	( .Actor:Self 00000006 *Var[2] )
	      Set  *Var[3]  *Var[2] 
	      Sub  *Var[3]  00000019 
	      Call     MakeLerp    	( *Var[2] *Var[3] 00000064 00000002 )
	      Label    00000006 
	      Call     UpdateLerp  	( )
	      Call     SetActorVar 	( .Actor:Self 00000006 *Var[0] )
	      Wait     00000001 
	      If  *Var[1]  ==  00000001 
	         Goto     00000006 
	      EndIf
	   EndThread
	   Thread
	      Call     GetActorVar 	( .Actor:Self 00000007 *Var[2] )
	      Set  *Var[3]  *Var[2] 
	      Sub  *Var[3]  00000019 
	      Call     MakeLerp    	( *Var[2] *Var[3] 00000064 00000002 )
	      Label    00000007 
	      Call     UpdateLerp  	( )
	      Call     SetActorVar 	( .Actor:Self 00000007 *Var[0] )
	      Wait     00000001 
	      If  *Var[1]  ==  00000001 
	         Goto     00000007 
	      EndIf
	   EndThread
	   Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	   Call     GetActorVar 	( .Actor:Self 00000006 *Var[3] )
	   Call     GetActorVar 	( .Actor:Self 00000007 *Var[4] )
	   MulF  *Var[3]  *Fixed[-20.0] 
	   MulF  *Var[4]  *Fixed[-20.0] 
	   DivF  *Var[3]  *Fixed[100.0] 
	   DivF  *Var[4]  *Fixed[100.0] 
	   Add  *Var[0]  *Var[3] 
	   Add  *Var[1]  *Var[4] 
	   Call     PlayEffect  	( {FX:HuffPuffBreath} *Var[0] *Var[1] *Var[2] *Fixed[190.0] *Fixed[1.5] *Fixed[1.0] 00000064 00000000 00000000 00000000 00000000 00000000 )
	   Call     $Function_80218000 ( 00000064 000000C8 )
	   Thread
	      Call     ShakeCam    	( 00000001 00000000 00000064 *Fixed[0.30078125] )
	   EndThread
	   Thread
	      Loop     0000000F 
	         Call     RandInt     	( 00000096 *Var[3] )
	         Call     RandInt     	( 00000064 *Var[4] )
	         Add  *Var[3]  00000032 
	         SetF  *Var[4]  *Fixed[5.0] 
	         Call     RandInt     	( 00000004 *Var[5] )
	         AddF  *Var[4]  *Var[5] 
	         DivF  *Var[4]  *Fixed[10.0] 
	         SetF  *Var[5]  *Fixed[100.0] 
	         Call     RandInt     	( 00000028 *Var[6] )
	         AddF  *Var[5]  *Var[6] 
	         DivF  *Var[5]  *Fixed[10.0] 
	         Call     PlayEffect  	( {FX:MovingCloud} 000000C8 *Var[3] 00000005 FFFFFF38 *Var[4] 00000005 *Var[5] *Var[4] 00000000 00000000 00000000 00000000 )
	         Call     RandInt     	( 00000005 *Var[0] )
	         Add  *Var[0]  00000005 
	         Wait     *Var[0] 
	      EndLoop
	   EndThread
	   Wait     0000006E 
	   Set  *Var[1]  00000000 
	EndIf
	Call     802D62B8 ( 0000035D )
	Wait     00000002 
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Switch  *Var[1] 
	   Case  ==  00000000 
	      Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000007 00000020 )
	   Case  ==  00000001 
	      Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000006 00000020 )
	   Case  ==  00000002 
	      Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000005 00000020 )
	   Case  ==  00000003 
	      Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000004 00000020 )
	   Case  ==  00000004 
	      Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000020 )
	   Default
	      Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000002 00000020 )
	EndSwitch
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     SetAnimation 	( .Actor:Self 00000001 007C0001 )
	      Call     SetAnimation 	( .Actor:Self 00000002 007C0002 )
	      Call     SetAnimation 	( .Actor:Self 00000003 007C0003 )
	      Wait     00000014 
	   EndCaseGroup
	EndSwitch
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_80220950
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Exec     $Script_80219EF4 *Var[A] 
	Call     SetActorVar 	( .Actor:Self 00000004 *Var[A] )
	Call     UseCamPreset 	( 00000013 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
	Call     SetCamZoom  	( 00000190 )
	Call     SetCamOffsetZ 	( 00000005 )
	Call     MoveCamOver 	( 0000003C )
	Call     SetAnimation 	( .Actor:Self 00000001 007C0011 )
	Call     SetAnimation 	( .Actor:Self 00000002 007C0012 )
	Call     SetAnimation 	( .Actor:Self 00000003 007C0013 )
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80219A04 )
	Call     SetIdleAnimations 	( .Actor:Self 00000002 $IdleAnimations_80219A10 )
	Call     SetIdleAnimations 	( .Actor:Self 00000003 $IdleAnimations_80219A1C )
	Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000080 .True )
	Call     PlaySoundAtActor 	( .Actor:Self 0000035C )
	Call     $Function_80218000 ( 00000046 00000078 )
	Thread
	   Call     ShakeCam    	( 00000001 00000000 0000003C *Fixed[0.30078125] )
	EndThread
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetActorVar 	( .Actor:Self 00000006 *Var[3] )
	DivF  *Var[3]  *Fixed[100.0] 
	Call     $Function_80218924 ( *Var[0] *Var[1] *Var[2] *Var[3] )
	Call     SetActorVar 	( .Actor:Self 00000005 *Var[0] )
	Wait     0000003C 
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 0000001E )
	Wait     0000001E 
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_Thunderstorm
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 00000013 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
	Call     SetCamZoom  	( 00000190 )
	Call     SetCamOffsetZ 	( 00000005 )
	Call     MoveCamOver 	( 0000003C )
	Call     $Function_80218000 ( 00000046 00000064 )
	Thread
	   Call     ShakeCam    	( 00000001 00000000 00000064 *Fixed[0.30078125] )
	EndThread
	Call     $Function_802188A8 ( )
	Call     MakeLerp    	( 00000000 000000C8 0000003C 00000000 )
	Label    00000000 
	Call     UpdateLerp  	( )
	Call     $Function_802188EC ( *Var[0] )
	Wait     00000001 
	If  *Var[1]  ==  00000001 
	   Goto     00000000 
	EndIf
	Wait     00000014 
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 0000000A )
	Call     GetActorVar 	( .Actor:Self 00000004 *Var[A] )
	Kill     *Var[A] 
	Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	Call     GetActorVar 	( .Actor:Self 00000005 *Var[0] )
	Call     RemoveEffect 	( *Var[0] )
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802198F0 )
	Call     SetIdleAnimations 	( .Actor:Self 00000002 $IdleAnimations_8021994C )
	Call     SetIdleAnimations 	( .Actor:Self 00000003 $IdleAnimations_802199A8 )
	Call     SetAnimation 	( .Actor:Self 00000001 007C000E )
	Call     SetAnimation 	( .Actor:Self 00000002 007C000F )
	Call     SetAnimation 	( .Actor:Self 00000003 007C0010 )
	Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000080 .False )
	Thread
	   Wait     00000014 
	   Call     MakeLerp    	( 000000C8 00000000 0000001E 00000000 )
	   Label    00000001 
	   Call     UpdateLerp  	( )
	   Call     $Function_802188EC ( *Var[0] )
	   Wait     00000001 
	   If  *Var[1]  ==  00000001 
	      Goto     00000001 
	   EndIf
	EndThread
	Call     802D62B8 ( 0000035C )
	Call     PlaySoundAtActor 	( .Actor:Self 000003D3 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub  *Var[2]  0000000A 
	Set  *Var[3]  *Var[0] 
	Sub  *Var[3]  0000001E 
	Call     PlayEffect  	( {FX:Lightning} *Var[0] *Var[1] *Var[2] *Var[3] 00000001 *Var[2] *Fixed[3.0] 0000001E 00000000 00000000 00000000 00000000 )
	Wait     00000005 
	Call     $Function_80218000 ( 00000100 0000001E )
	Thread
	   Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[5.0] )
	   Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[3.0] )
	   Call     ShakeCam    	( 00000001 00000000 0000000A *Fixed[4.0] )
	EndThread
	SetF  *Var[6]  *Fixed[0.0] 
	Loop     0000000A 
	   Set  *Var[4]  *Var[3] 
	   Set  *Var[5]  *Var[2] 
	   AddF  *Var[6]  *Fixed[36.0] 
	   Call     AddVectorPolar ( *Var[4] *Var[5] *Fixed[300.0] *Var[6] )
	   Call     PlayEffect  	( {FX:Lightning} *Var[3] 00000001 *Var[2] *Var[4] 00000001 *Var[5] *Fixed[4.0] 0000001E 00000000 00000000 00000000 00000000 )
	EndLoop
	Wait     0000000A 
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      If  *Var[0]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Call     SetAnimation 	( .Actor:Self 00000001 007C0004 )
	      Call     SetAnimation 	( .Actor:Self 00000002 007C0005 )
	      Call     SetAnimation 	( .Actor:Self 00000003 007C0006 )
	      Wait     00000014 
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Wait     00000002 
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     DamageTarget 	( .Actor:Self *Var[0] 18000800 00000000 00000000 0000000C 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     GetLastDamage 	( .Actor:Player *Var[0] )
	      If  *Var[0]  >  00000000 
	         Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	         ConstOR  *Var[0] 00000008 
	         Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	      EndIf
	      Wait     00000014 
	   EndCaseGroup
	EndSwitch
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_80221338
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Exec     $Script_80219EF4 *Var[A] 
	Call     SetActorVar 	( .Actor:Self 00000004 *Var[A] )
	Call     UseCamPreset 	( 00000013 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
	Call     SetCamZoom  	( 00000190 )
	Call     SetCamOffsetZ 	( 00000005 )
	Call     MoveCamOver 	( 0000003C )
	Call     SetAnimation 	( .Actor:Self 00000001 007C0011 )
	Call     SetAnimation 	( .Actor:Self 00000002 007C0012 )
	Call     SetAnimation 	( .Actor:Self 00000003 007C0013 )
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80219A04 )
	Call     SetIdleAnimations 	( .Actor:Self 00000002 $IdleAnimations_80219A10 )
	Call     SetIdleAnimations 	( .Actor:Self 00000003 $IdleAnimations_80219A1C )
	Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000080 .True )
	Call     PlaySoundAtActor 	( .Actor:Self 0000035C )
	Call     $Function_80218000 ( 00000046 00000078 )
	Thread
	   Call     ShakeCam    	( 00000001 00000000 0000003C *Fixed[0.30078125] )
	EndThread
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetActorVar 	( .Actor:Self 00000006 *Var[3] )
	DivF  *Var[3]  *Fixed[100.0] 
	Call     $Function_80218924 ( *Var[0] *Var[1] *Var[2] *Var[3] )
	Call     SetActorVar 	( .Actor:Self 00000005 *Var[0] )
	Wait     0000003C 
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 0000001E )
	Wait     0000001E 
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	Return
	End

#new:Script $Script_HighBodySlam
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000003F )
	Call     AddCamZoom  	( FFFFFF9C )
	Call     SetCamOffsetZ 	( 00000032 )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     $Function_80218000 ( 00000046 00000050 )
	Thread
	   Call     ShakeCam    	( 00000001 00000000 00000028 *Fixed[0.30078125] )
	EndThread
	Thread
	   Call     $Function_802188A8 ( )
	   Call     MakeLerp    	( 00000000 000000C8 00000028 00000000 )
	   Label    00000000 
	   Call     UpdateLerp  	( )
	   Call     $Function_802188EC ( *Var[0] )
	   Wait     00000001 
	   If  *Var[1]  ==  00000001 
	      Goto     00000000 
	   EndIf
	EndThread
	Thread
	   Loop     00000028 
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     GetActorVar 	( .Actor:Self 00000005 *Var[A] )
	      Call     $Function_802189FC ( *Var[A] *Var[0] *Var[1] *Var[2] )
	      Wait     00000001 
	   EndLoop
	EndThread
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetActorVar 	( .Actor:Self 00000006 *Var[0] )
	Call     GetActorVar 	( .Actor:Self 00000006 *Var[1] )
	SetF  *Var[2]  *Fixed[72.5] 
	SetF  *Var[3]  *Fixed[67.5] 
	MulF  *Var[2]  *Var[0] 
	MulF  *Var[3]  *Var[1] 
	DivF  *Var[2]  *Fixed[100.0] 
	DivF  *Var[3]  *Fixed[100.0] 
	Call     AddToGoalPos 	( .Actor:Self 00000000 *Var[3] 00000000 )
	Call     AddToGoalPos 	( .Actor:Self 00000014 00000028 00000000 )
	Call     MoveToGoal  	( .Actor:Self 00000028 FFFFFFEC .Easing:SinOut )
	Wait     0000001E 
	Call     GetActorVar 	( .Actor:Self 00000004 *Var[A] )
	Kill     *Var[A] 
	Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	Call     GetActorVar 	( .Actor:Self 00000005 *Var[0] )
	Call     RemoveEffect 	( *Var[0] )
	Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_802198F0 )
	Call     SetIdleAnimations 	( .Actor:Self 00000002 $IdleAnimations_8021994C )
	Call     SetIdleAnimations 	( .Actor:Self 00000003 $IdleAnimations_802199A8 )
	Call     SetAnimation 	( .Actor:Self 00000001 007C000E )
	Call     SetAnimation 	( .Actor:Self 00000002 007C000F )
	Call     SetAnimation 	( .Actor:Self 00000003 007C0010 )
	Call     SetSpriteEventBits 	( .Actor:Self 00000001 00000080 .False )
	Thread
	   Wait     00000014 
	   Call     MakeLerp    	( 000000C8 00000000 0000001E 00000000 )
	   Label    00000001 
	   Call     UpdateLerp  	( )
	   Call     $Function_802188EC ( *Var[0] )
	   Wait     00000001 
	   If  *Var[1]  ==  00000001 
	      Goto     00000001 
	   EndIf
	EndThread
	Call     802D62B8 ( 0000035C )
	Call     PlaySoundAtActor 	( .Actor:Self 0000035B )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   Case  ==  00000005 
	      Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	      Sub  *Var[C]  0000000A 
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[D] *Var[E] *Var[F] )
	      Sub  *Var[D]  00000064 
	      Call     PlayEffect  	( {FX:Lightning} *Var[A] *Var[B] *Var[C] *Var[D] 00000000 *Var[F] *Fixed[1.5] 00000014 00000000 00000000 00000000 00000000 )
	      Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      Call     SetAnimation 	( .Actor:Self 00000001 007C0004 )
	      Call     SetAnimation 	( .Actor:Self 00000002 007C0005 )
	      Call     SetAnimation 	( .Actor:Self 00000003 007C0006 )
	      Wait     00000014 
	      Call     UseCamPreset 	( 00000002 )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     MoveToGoal  	( .Actor:Self 00000028 FFFFFFEC .Easing:SinOut )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   Case  ==  00000006 
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[2]  0000000A 
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetActorPos 	( .Actor:Player *Var[3] *Var[4] *Var[5] )
	      Sub  *Var[3]  00000004 
	      Add  *Var[4]  0000000A 
	      Add  *Var[5]  00000001 
	      Thread
	         Call     GetActorVar 	( .Actor:Self 00000006 *Var[6] )
	         SetF  *Var[7]  *Fixed[0.72558594] 
	         SetF  *Var[8]  *Fixed[0.2421875] 
	         MulF  *Var[7]  *Var[6] 
	         MulF  *Var[8]  *Var[6] 
	         SubF  *Var[0]  *Var[7] 
	         SetF  *Var[9]  *Var[8] 
	         MulF  *Var[9]  00000003 
	         AddF  *Var[9]  *Var[0] 
	         Call     PlayEffect  	( {FX:Lightning} *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
	         Wait     00000003 
	         SetF  *Var[9]  *Var[8] 
	         MulF  *Var[9]  00000001 
	         AddF  *Var[9]  *Var[0] 
	         Call     PlayEffect  	( {FX:Lightning} *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
	         Wait     00000003 
	         SetF  *Var[9]  *Var[8] 
	         MulF  *Var[9]  00000004 
	         AddF  *Var[9]  *Var[0] 
	         Call     PlayEffect  	( {FX:Lightning} *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
	         Wait     00000003 
	         SetF  *Var[9]  *Var[8] 
	         MulF  *Var[9]  00000002 
	         AddF  *Var[9]  *Var[0] 
	         Call     PlayEffect  	( {FX:Lightning} *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
	         Wait     00000003 
	         SetF  *Var[9]  *Var[8] 
	         MulF  *Var[9]  00000005 
	         AddF  *Var[9]  *Var[0] 
	         Call     PlayEffect  	( {FX:Lightning} *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
	      EndThread
	      Wait     00000002 
	      Call     SetAnimation 	( .Actor:Self 00000001 007C0004 )
	      Call     SetAnimation 	( .Actor:Self 00000002 007C0005 )
	      Call     SetAnimation 	( .Actor:Self 00000003 007C0006 )
	      Wait     00000014 
	      Call     UseCamPreset 	( 00000002 )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     MoveToGoal  	( .Actor:Self 00000028 FFFFFFEC .Easing:SinOut )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	EndSwitch
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Sub  *Var[2]  0000000A 
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetActorPos 	( .Actor:Player *Var[3] *Var[4] *Var[5] )
	Sub  *Var[3]  00000004 
	Add  *Var[4]  0000000A 
	Add  *Var[5]  00000001 
	Thread
	   Call     GetActorVar 	( .Actor:Self 00000006 *Var[6] )
	   SetF  *Var[7]  *Fixed[0.72558594] 
	   SetF  *Var[8]  *Fixed[0.2421875] 
	   MulF  *Var[7]  *Var[6] 
	   MulF  *Var[8]  *Var[6] 
	   SubF  *Var[0]  *Var[7] 
	   SetF  *Var[9]  *Var[8] 
	   MulF  *Var[9]  00000003 
	   AddF  *Var[9]  *Var[0] 
	   Call     PlayEffect  	( {FX:Lightning} *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
	   Wait     00000003 
	   SetF  *Var[9]  *Var[8] 
	   MulF  *Var[9]  00000001 
	   AddF  *Var[9]  *Var[0] 
	   Call     PlayEffect  	( {FX:Lightning} *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
	   Wait     00000003 
	   SetF  *Var[9]  *Var[8] 
	   MulF  *Var[9]  00000004 
	   AddF  *Var[9]  *Var[0] 
	   Call     PlayEffect  	( {FX:Lightning} *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
	   Wait     00000003 
	   SetF  *Var[9]  *Var[8] 
	   MulF  *Var[9]  00000002 
	   AddF  *Var[9]  *Var[0] 
	   Call     PlayEffect  	( {FX:Lightning} *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
	   Wait     00000003 
	   SetF  *Var[9]  *Var[8] 
	   MulF  *Var[9]  00000005 
	   AddF  *Var[9]  *Var[0] 
	   Call     PlayEffect  	( {FX:Lightning} *Var[9] *Var[1] *Var[2] *Var[3] *Var[4] *Var[5] *Fixed[1.2001953] 0000000A 00000000 00000000 00000000 00000000 )
	EndThread
	Wait     00000002 
	Wait     00000002 
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     DamageTarget 	( .Actor:Self *Var[0] 18000020 00000000 00000000 0000000A 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Wait     0000001E 
	      Call     SetAnimation 	( .Actor:Self 00000001 007C0001 )
	      Call     SetAnimation 	( .Actor:Self 00000002 007C0002 )
	      Call     SetAnimation 	( .Actor:Self 00000003 007C0003 )
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     MoveToGoal  	( .Actor:Self 00000028 FFFFFFEC .Easing:SinOut )
	   EndCaseGroup
	EndSwitch
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_80222528
	UseArray $TuffPuffIDs 
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 00000013 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
	Call     SetCamZoom  	( 00000190 )
	Call     SetCamOffsetZ 	( 00000005 )
	Call     MoveCamOver 	( 0000001E )
	Wait     0000001E 
	Call     PlaySoundAtActor 	( .Actor:Self 000003B3 )
	Call     SetAnimation 	( .Actor:Self 00000001 007C001A )
	Call     SetAnimation 	( .Actor:Self 00000002 007C001B )
	Call     SetAnimation 	( .Actor:Self 00000003 007C001C )
	Wait     00000008 
	Call     SetAnimation 	( .Actor:Self 00000001 007C001D )
	Call     SetAnimation 	( .Actor:Self 00000002 007C001E )
	Call     SetAnimation 	( .Actor:Self 00000003 007C001F )
	Call     PlaySoundAtActor 	( .Actor:Self 000020B6 )
	Call     GetActorVar 	( .Actor:Self 00000006 *Var[0] )
	Call     GetActorVar 	( .Actor:Self 00000007 *Var[1] )
	Set  *Var[F]  00000000 
	Loop     00000014 
	   Call     $Function_80218114 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.3007812] 0000000A 00000000 00000000 )
	   Call     $Function_80218114 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.7001953] 0000000A 00000000 00000000 )
	   MulF  *Var[2]  *Var[0] 
	   MulF  *Var[3]  *Var[1] 
	   Call     SetActorVar 	( .Actor:Self 00000006 *Var[2] )
	   Call     SetActorVar 	( .Actor:Self 00000007 *Var[3] )
	   Add  *Var[F]  00000001 
	   Wait     00000001 
	EndLoop
	Call     PlaySoundAtActor 	( .Actor:Self 000020B6 )
	Loop     00000014 
	   Call     $Function_80218114 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.2001953] 0000000A 00000000 00000000 )
	   Call     $Function_80218114 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.80078125] 0000000A 00000000 00000000 )
	   MulF  *Var[2]  *Var[0] 
	   MulF  *Var[3]  *Var[1] 
	   Call     SetActorVar 	( .Actor:Self 00000006 *Var[2] )
	   Call     SetActorVar 	( .Actor:Self 00000007 *Var[3] )
	   Add  *Var[F]  00000001 
	   Wait     00000001 
	EndLoop
	Call     SetActorVar 	( .Actor:Self 00000006 *Var[0] )
	Call     SetActorVar 	( .Actor:Self 00000007 *Var[1] )
	Set  *Var[9]  00000000 
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	Call     GetActorPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Add  *Var[B]  00000096 
	If  *Var[0]  &  00000010 
	   Call     UseIdleAnimation 	( *Array[4] .False )
	   Call     GetActorVar 	( *Array[4] 00000000 *Var[1] )
	   If  *Var[1]  ==  00000000 
	      Call     SetAnimation 	( *Array[4] 00000001 004C0009 )
	   Else
	      Call     SetAnimation 	( *Array[4] 00000001 004C000B )
	   EndIf
	   Thread
	      Mod  *Var[9]  00000002 
	      If  *Var[9]  ==  00000000 
	         Call     PlaySoundAtActor 	( *Array[4] 000003D5 )
	      Else
	         Call     PlaySoundAtActor 	( *Array[4] 000003D6 )
	      EndIf
	      Call     GetActorPos 	( *Array[4] *Var[D] *Var[E] *Var[F] )
	      Call     SetGoalToPos 	( *Array[4] *Var[A] *Var[B] *Var[F] )
	      Call     MoveToGoal  	( *Array[4] 00000014 0000000A .Easing:QuadraticIn )
	      Set  *Var[D]  *Var[A] 
	      Set  *Var[E]  *Var[C] 
	      Set  *Var[F]  00000004 
	      Mul  *Var[F]  00000024 
	      Add  *Var[F]  FFFFFFA6 
	      Call     AddVectorPolar ( *Var[D] *Var[E] *Fixed[60.0] *Var[F] )
	      Call     SetActorPos 	( *Array[4] *Var[D] *Var[B] *Var[E] )
	   EndThread
	   Add  *Var[9]  00000001 
	   Wait     00000008 
	EndIf
	If  *Var[0]  &  00000200 
	   Call     UseIdleAnimation 	( *Array[9] .False )
	   Call     GetActorVar 	( *Array[9] 00000000 *Var[1] )
	   If  *Var[1]  ==  00000000 
	      Call     SetAnimation 	( *Array[9] 00000001 004C0009 )
	   Else
	      Call     SetAnimation 	( *Array[9] 00000001 004C000B )
	   EndIf
	   Thread
	      Mod  *Var[9]  00000002 
	      If  *Var[9]  ==  00000000 
	         Call     PlaySoundAtActor 	( *Array[9] 000003D5 )
	      Else
	         Call     PlaySoundAtActor 	( *Array[9] 000003D6 )
	      EndIf
	      Call     GetActorPos 	( *Array[9] *Var[D] *Var[E] *Var[F] )
	      Call     SetGoalToPos 	( *Array[9] *Var[A] *Var[B] *Var[F] )
	      Call     MoveToGoal  	( *Array[9] 00000014 0000000A .Easing:QuadraticIn )
	      Set  *Var[D]  *Var[A] 
	      Set  *Var[E]  *Var[C] 
	      Set  *Var[F]  00000009 
	      Mul  *Var[F]  00000024 
	      Add  *Var[F]  FFFFFFA6 
	      Call     AddVectorPolar ( *Var[D] *Var[E] *Fixed[60.0] *Var[F] )
	      Call     SetActorPos 	( *Array[9] *Var[D] *Var[B] *Var[E] )
	   EndThread
	   Add  *Var[9]  00000001 
	   Wait     00000008 
	EndIf
	If  *Var[0]  &  00000008 
	   Call     UseIdleAnimation 	( *Array[3] .False )
	   Call     GetActorVar 	( *Array[3] 00000000 *Var[1] )
	   If  *Var[1]  ==  00000000 
	      Call     SetAnimation 	( *Array[3] 00000001 004C0009 )
	   Else
	      Call     SetAnimation 	( *Array[3] 00000001 004C000B )
	   EndIf
	   Thread
	      Mod  *Var[9]  00000002 
	      If  *Var[9]  ==  00000000 
	         Call     PlaySoundAtActor 	( *Array[3] 000003D5 )
	      Else
	         Call     PlaySoundAtActor 	( *Array[3] 000003D6 )
	      EndIf
	      Call     GetActorPos 	( *Array[3] *Var[D] *Var[E] *Var[F] )
	      Call     SetGoalToPos 	( *Array[3] *Var[A] *Var[B] *Var[F] )
	      Call     MoveToGoal  	( *Array[3] 00000014 0000000A .Easing:QuadraticIn )
	      Set  *Var[D]  *Var[A] 
	      Set  *Var[E]  *Var[C] 
	      Set  *Var[F]  00000003 
	      Mul  *Var[F]  00000024 
	      Add  *Var[F]  FFFFFFA6 
	      Call     AddVectorPolar ( *Var[D] *Var[E] *Fixed[60.0] *Var[F] )
	      Call     SetActorPos 	( *Array[3] *Var[D] *Var[B] *Var[E] )
	   EndThread
	   Add  *Var[9]  00000001 
	   Wait     00000008 
	EndIf
	If  *Var[0]  &  00000020 
	   Call     UseIdleAnimation 	( *Array[5] .False )
	   Call     GetActorVar 	( *Array[5] 00000000 *Var[1] )
	   If  *Var[1]  ==  00000000 
	      Call     SetAnimation 	( *Array[5] 00000001 004C0009 )
	   Else
	      Call     SetAnimation 	( *Array[5] 00000001 004C000B )
	   EndIf
	   Thread
	      Mod  *Var[9]  00000002 
	      If  *Var[9]  ==  00000000 
	         Call     PlaySoundAtActor 	( *Array[5] 000003D5 )
	      Else
	         Call     PlaySoundAtActor 	( *Array[5] 000003D6 )
	      EndIf
	      Call     GetActorPos 	( *Array[5] *Var[D] *Var[E] *Var[F] )
	      Call     SetGoalToPos 	( *Array[5] *Var[A] *Var[B] *Var[F] )
	      Call     MoveToGoal  	( *Array[5] 00000014 0000000A .Easing:QuadraticIn )
	      Set  *Var[D]  *Var[A] 
	      Set  *Var[E]  *Var[C] 
	      Set  *Var[F]  00000005 
	      Mul  *Var[F]  00000024 
	      Add  *Var[F]  FFFFFFA6 
	      Call     AddVectorPolar ( *Var[D] *Var[E] *Fixed[60.0] *Var[F] )
	      Call     SetActorPos 	( *Array[5] *Var[D] *Var[B] *Var[E] )
	   EndThread
	   Add  *Var[9]  00000001 
	   Wait     00000008 
	EndIf
	If  *Var[0]  &  00000002 
	   Call     UseIdleAnimation 	( *Array[1] .False )
	   Call     GetActorVar 	( *Array[1] 00000000 *Var[1] )
	   If  *Var[1]  ==  00000000 
	      Call     SetAnimation 	( *Array[1] 00000001 004C0009 )
	   Else
	      Call     SetAnimation 	( *Array[1] 00000001 004C000B )
	   EndIf
	   Thread
	      Mod  *Var[9]  00000002 
	      If  *Var[9]  ==  00000000 
	         Call     PlaySoundAtActor 	( *Array[1] 000003D5 )
	      Else
	         Call     PlaySoundAtActor 	( *Array[1] 000003D6 )
	      EndIf
	      Call     GetActorPos 	( *Array[1] *Var[D] *Var[E] *Var[F] )
	      Call     SetGoalToPos 	( *Array[1] *Var[A] *Var[B] *Var[F] )
	      Call     MoveToGoal  	( *Array[1] 00000014 0000000A .Easing:QuadraticIn )
	      Set  *Var[D]  *Var[A] 
	      Set  *Var[E]  *Var[C] 
	      Set  *Var[F]  00000001 
	      Mul  *Var[F]  00000024 
	      Add  *Var[F]  FFFFFFA6 
	      Call     AddVectorPolar ( *Var[D] *Var[E] *Fixed[60.0] *Var[F] )
	      Call     SetActorPos 	( *Array[1] *Var[D] *Var[B] *Var[E] )
	   EndThread
	   Add  *Var[9]  00000001 
	   Wait     00000008 
	EndIf
	If  *Var[0]  &  00000001 
	   Call     UseIdleAnimation 	( *Array[0] .False )
	   Call     GetActorVar 	( *Array[0] 00000000 *Var[1] )
	   If  *Var[1]  ==  00000000 
	      Call     SetAnimation 	( *Array[0] 00000001 004C0009 )
	   Else
	      Call     SetAnimation 	( *Array[0] 00000001 004C000B )
	   EndIf
	   Thread
	      Mod  *Var[9]  00000002 
	      If  *Var[9]  ==  00000000 
	         Call     PlaySoundAtActor 	( *Array[0] 000003D5 )
	      Else
	         Call     PlaySoundAtActor 	( *Array[0] 000003D6 )
	      EndIf
	      Call     GetActorPos 	( *Array[0] *Var[D] *Var[E] *Var[F] )
	      Call     SetGoalToPos 	( *Array[0] *Var[A] *Var[B] *Var[F] )
	      Call     MoveToGoal  	( *Array[0] 00000014 0000000A .Easing:QuadraticIn )
	      Set  *Var[D]  *Var[A] 
	      Set  *Var[E]  *Var[C] 
	      Set  *Var[F]  00000000 
	      Mul  *Var[F]  00000024 
	      Add  *Var[F]  FFFFFFA6 
	      Call     AddVectorPolar ( *Var[D] *Var[E] *Fixed[60.0] *Var[F] )
	      Call     SetActorPos 	( *Array[0] *Var[D] *Var[B] *Var[E] )
	   EndThread
	   Add  *Var[9]  00000001 
	   Wait     00000008 
	EndIf
	If  *Var[0]  &  00000100 
	   Call     UseIdleAnimation 	( *Array[8] .False )
	   Call     GetActorVar 	( *Array[8] 00000000 *Var[1] )
	   If  *Var[1]  ==  00000000 
	      Call     SetAnimation 	( *Array[8] 00000001 004C0009 )
	   Else
	      Call     SetAnimation 	( *Array[8] 00000001 004C000B )
	   EndIf
	   Thread
	      Mod  *Var[9]  00000002 
	      If  *Var[9]  ==  00000000 
	         Call     PlaySoundAtActor 	( *Array[8] 000003D5 )
	      Else
	         Call     PlaySoundAtActor 	( *Array[8] 000003D6 )
	      EndIf
	      Call     GetActorPos 	( *Array[8] *Var[D] *Var[E] *Var[F] )
	      Call     SetGoalToPos 	( *Array[8] *Var[A] *Var[B] *Var[F] )
	      Call     MoveToGoal  	( *Array[8] 00000014 0000000A .Easing:QuadraticIn )
	      Set  *Var[D]  *Var[A] 
	      Set  *Var[E]  *Var[C] 
	      Set  *Var[F]  00000008 
	      Mul  *Var[F]  00000024 
	      Add  *Var[F]  FFFFFFA6 
	      Call     AddVectorPolar ( *Var[D] *Var[E] *Fixed[60.0] *Var[F] )
	      Call     SetActorPos 	( *Array[8] *Var[D] *Var[B] *Var[E] )
	   EndThread
	   Add  *Var[9]  00000001 
	   Wait     00000008 
	EndIf
	If  *Var[0]  &  00000004 
	   Call     UseIdleAnimation 	( *Array[2] .False )
	   Call     GetActorVar 	( *Array[2] 00000000 *Var[1] )
	   If  *Var[1]  ==  00000000 
	      Call     SetAnimation 	( *Array[2] 00000001 004C0009 )
	   Else
	      Call     SetAnimation 	( *Array[2] 00000001 004C000B )
	   EndIf
	   Thread
	      Mod  *Var[9]  00000002 
	      If  *Var[9]  ==  00000000 
	         Call     PlaySoundAtActor 	( *Array[2] 000003D5 )
	      Else
	         Call     PlaySoundAtActor 	( *Array[2] 000003D6 )
	      EndIf
	      Call     GetActorPos 	( *Array[2] *Var[D] *Var[E] *Var[F] )
	      Call     SetGoalToPos 	( *Array[2] *Var[A] *Var[B] *Var[F] )
	      Call     MoveToGoal  	( *Array[2] 00000014 0000000A .Easing:QuadraticIn )
	      Set  *Var[D]  *Var[A] 
	      Set  *Var[E]  *Var[C] 
	      Set  *Var[F]  00000002 
	      Mul  *Var[F]  00000024 
	      Add  *Var[F]  FFFFFFA6 
	      Call     AddVectorPolar ( *Var[D] *Var[E] *Fixed[60.0] *Var[F] )
	      Call     SetActorPos 	( *Array[2] *Var[D] *Var[B] *Var[E] )
	   EndThread
	   Add  *Var[9]  00000001 
	   Wait     00000008 
	EndIf
	If  *Var[0]  &  00000080 
	   Call     UseIdleAnimation 	( *Array[7] .False )
	   Call     GetActorVar 	( *Array[7] 00000000 *Var[1] )
	   If  *Var[1]  ==  00000000 
	      Call     SetAnimation 	( *Array[7] 00000001 004C0009 )
	   Else
	      Call     SetAnimation 	( *Array[7] 00000001 004C000B )
	   EndIf
	   Thread
	      Mod  *Var[9]  00000002 
	      If  *Var[9]  ==  00000000 
	         Call     PlaySoundAtActor 	( *Array[7] 000003D5 )
	      Else
	         Call     PlaySoundAtActor 	( *Array[7] 000003D6 )
	      EndIf
	      Call     GetActorPos 	( *Array[7] *Var[D] *Var[E] *Var[F] )
	      Call     SetGoalToPos 	( *Array[7] *Var[A] *Var[B] *Var[F] )
	      Call     MoveToGoal  	( *Array[7] 00000014 0000000A .Easing:QuadraticIn )
	      Set  *Var[D]  *Var[A] 
	      Set  *Var[E]  *Var[C] 
	      Set  *Var[F]  00000007 
	      Mul  *Var[F]  00000024 
	      Add  *Var[F]  FFFFFFA6 
	      Call     AddVectorPolar ( *Var[D] *Var[E] *Fixed[60.0] *Var[F] )
	      Call     SetActorPos 	( *Array[7] *Var[D] *Var[B] *Var[E] )
	   EndThread
	   Add  *Var[9]  00000001 
	   Wait     00000008 
	EndIf
	If  *Var[0]  &  00000040 
	   Call     UseIdleAnimation 	( *Array[6] .False )
	   Call     GetActorVar 	( *Array[6] 00000000 *Var[1] )
	   If  *Var[1]  ==  00000000 
	      Call     SetAnimation 	( *Array[6] 00000001 004C0009 )
	   Else
	      Call     SetAnimation 	( *Array[6] 00000001 004C000B )
	   EndIf
	   Thread
	      Mod  *Var[9]  00000002 
	      If  *Var[9]  ==  00000000 
	         Call     PlaySoundAtActor 	( *Array[6] 000003D5 )
	      Else
	         Call     PlaySoundAtActor 	( *Array[6] 000003D6 )
	      EndIf
	      Call     GetActorPos 	( *Array[6] *Var[D] *Var[E] *Var[F] )
	      Call     SetGoalToPos 	( *Array[6] *Var[A] *Var[B] *Var[F] )
	      Call     MoveToGoal  	( *Array[6] 00000014 0000000A .Easing:QuadraticIn )
	      Set  *Var[D]  *Var[A] 
	      Set  *Var[E]  *Var[C] 
	      Set  *Var[F]  00000006 
	      Mul  *Var[F]  00000024 
	      Add  *Var[F]  FFFFFFA6 
	      Call     AddVectorPolar ( *Var[D] *Var[E] *Fixed[60.0] *Var[F] )
	      Call     SetActorPos 	( *Array[6] *Var[D] *Var[B] *Var[E] )
	   EndThread
	   Add  *Var[9]  00000001 
	   Wait     00000008 
	EndIf
	Wait     00000014 
	Call     UseCamPreset 	( 00000002 )
	Call     MoveCamOver 	( 0000001E )
	Call     SetGoalToPos 	( .Actor:Self *Var[A] *Var[B] *Var[C] )
	Call     MoveToGoal  	( .Actor:Self 0000001E 0000000A .Easing:QuadraticIn )
	Wait     0000004B 
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	If  *Var[0]  &  00000001 
	   Thread
	      Call     GetActorPos 	( *Array[0] *Var[1] *Var[2] *Var[3] )
	      Call     GetActorVar 	( *Array[0] 00000000 *Var[4] )
	      If  *Var[4]  ==  00000000 
	         Set  *Var[2]  0000000A 
	      Else
	         Set  *Var[2]  0000000E 
	      EndIf
	      Call     8026F740 ( *Array[0] 00000001 00000000 00000000 )
	      Call     SetGoalToPos 	( *Array[0] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[0] 00000014 00000000 .Easing:CubicIn )
	      Call     8026F838 ( *Array[0] 00000001 )
	   EndThread
	EndIf
	If  *Var[0]  &  00000002 
	   Thread
	      Call     GetActorPos 	( *Array[1] *Var[1] *Var[2] *Var[3] )
	      Call     GetActorVar 	( *Array[1] 00000000 *Var[4] )
	      If  *Var[4]  ==  00000000 
	         Set  *Var[2]  0000000A 
	      Else
	         Set  *Var[2]  0000000E 
	      EndIf
	      Call     8026F740 ( *Array[1] 00000001 00000000 00000000 )
	      Call     SetGoalToPos 	( *Array[1] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[1] 00000014 00000000 .Easing:CubicIn )
	      Call     8026F838 ( *Array[1] 00000001 )
	   EndThread
	EndIf
	If  *Var[0]  &  00000004 
	   Thread
	      Call     GetActorPos 	( *Array[2] *Var[1] *Var[2] *Var[3] )
	      Call     GetActorVar 	( *Array[2] 00000000 *Var[4] )
	      If  *Var[4]  ==  00000000 
	         Set  *Var[2]  0000000A 
	      Else
	         Set  *Var[2]  0000000E 
	      EndIf
	      Call     8026F740 ( *Array[2] 00000001 00000000 00000000 )
	      Call     SetGoalToPos 	( *Array[2] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[2] 00000014 00000000 .Easing:CubicIn )
	      Call     8026F838 ( *Array[2] 00000001 )
	   EndThread
	EndIf
	If  *Var[0]  &  00000008 
	   Thread
	      Call     GetActorPos 	( *Array[3] *Var[1] *Var[2] *Var[3] )
	      Call     GetActorVar 	( *Array[3] 00000000 *Var[4] )
	      If  *Var[4]  ==  00000000 
	         Set  *Var[2]  0000000A 
	      Else
	         Set  *Var[2]  0000000E 
	      EndIf
	      Call     8026F740 ( *Array[3] 00000001 00000000 00000000 )
	      Call     SetGoalToPos 	( *Array[3] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[3] 00000014 00000000 .Easing:CubicIn )
	      Call     8026F838 ( *Array[3] 00000001 )
	   EndThread
	EndIf
	If  *Var[0]  &  00000010 
	   Thread
	      Call     GetActorPos 	( *Array[4] *Var[1] *Var[2] *Var[3] )
	      Call     GetActorVar 	( *Array[4] 00000000 *Var[4] )
	      If  *Var[4]  ==  00000000 
	         Set  *Var[2]  0000000A 
	      Else
	         Set  *Var[2]  0000000E 
	      EndIf
	      Call     8026F740 ( *Array[4] 00000001 00000000 00000000 )
	      Call     SetGoalToPos 	( *Array[4] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[4] 00000014 00000000 .Easing:CubicIn )
	      Call     8026F838 ( *Array[4] 00000001 )
	   EndThread
	EndIf
	If  *Var[0]  &  00000020 
	   Thread
	      Call     GetActorPos 	( *Array[5] *Var[1] *Var[2] *Var[3] )
	      Call     GetActorVar 	( *Array[5] 00000000 *Var[4] )
	      If  *Var[4]  ==  00000000 
	         Set  *Var[2]  0000000A 
	      Else
	         Set  *Var[2]  0000000E 
	      EndIf
	      Call     8026F740 ( *Array[5] 00000001 00000000 00000000 )
	      Call     SetGoalToPos 	( *Array[5] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[5] 00000014 00000000 .Easing:CubicIn )
	      Call     8026F838 ( *Array[5] 00000001 )
	   EndThread
	EndIf
	If  *Var[0]  &  00000040 
	   Thread
	      Call     GetActorPos 	( *Array[6] *Var[1] *Var[2] *Var[3] )
	      Call     GetActorVar 	( *Array[6] 00000000 *Var[4] )
	      If  *Var[4]  ==  00000000 
	         Set  *Var[2]  0000000A 
	      Else
	         Set  *Var[2]  0000000E 
	      EndIf
	      Call     8026F740 ( *Array[6] 00000001 00000000 00000000 )
	      Call     SetGoalToPos 	( *Array[6] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[6] 00000014 00000000 .Easing:CubicIn )
	      Call     8026F838 ( *Array[6] 00000001 )
	   EndThread
	EndIf
	If  *Var[0]  &  00000080 
	   Thread
	      Call     GetActorPos 	( *Array[7] *Var[1] *Var[2] *Var[3] )
	      Call     GetActorVar 	( *Array[7] 00000000 *Var[4] )
	      If  *Var[4]  ==  00000000 
	         Set  *Var[2]  0000000A 
	      Else
	         Set  *Var[2]  0000000E 
	      EndIf
	      Call     8026F740 ( *Array[7] 00000001 00000000 00000000 )
	      Call     SetGoalToPos 	( *Array[7] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[7] 00000014 00000000 .Easing:CubicIn )
	      Call     8026F838 ( *Array[7] 00000001 )
	   EndThread
	EndIf
	If  *Var[0]  &  00000100 
	   Thread
	      Call     GetActorPos 	( *Array[8] *Var[1] *Var[2] *Var[3] )
	      Call     GetActorVar 	( *Array[8] 00000000 *Var[4] )
	      If  *Var[4]  ==  00000000 
	         Set  *Var[2]  0000000A 
	      Else
	         Set  *Var[2]  0000000E 
	      EndIf
	      Call     8026F740 ( *Array[8] 00000001 00000000 00000000 )
	      Call     SetGoalToPos 	( *Array[8] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[8] 00000014 00000000 .Easing:CubicIn )
	      Call     8026F838 ( *Array[8] 00000001 )
	   EndThread
	EndIf
	If  *Var[0]  &  00000200 
	   Thread
	      Call     GetActorPos 	( *Array[9] *Var[1] *Var[2] *Var[3] )
	      Call     GetActorVar 	( *Array[9] 00000000 *Var[4] )
	      If  *Var[4]  ==  00000000 
	         Set  *Var[2]  0000000A 
	      Else
	         Set  *Var[2]  0000000E 
	      EndIf
	      Call     8026F740 ( *Array[9] 00000001 00000000 00000000 )
	      Call     SetGoalToPos 	( *Array[9] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[9] 00000014 00000000 .Easing:CubicIn )
	      Call     8026F838 ( *Array[9] 00000001 )
	   EndThread
	EndIf
	Call     8026F740 ( FFFFFF81 00000001 00000000 00000000 )
	Thread
	   Wait     00000003 
	   Call     PlaySoundAtActor 	( .Actor:Self 000020E9 )
	EndThread
	Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
	Call     GetActorVar 	( .Actor:Self 00000007 *Var[4] )
	Mul  *Var[4]  0000005F 
	Div  *Var[4]  000000C8 
	Call     SetGoalToPos 	( .Actor:Self *Var[1] *Var[4] *Var[3] )
	Call     MoveToGoal  	( .Actor:Self 00000014 00000000 .Easing:CubicIn )
	Call     8026F838 ( FFFFFF81 00000001 )
	Call     PlaySoundAtActor 	( .Actor:Self 000020EA )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     PlayEffect  	( {FX:ShockWave:Clouds} *Var[0] 00000000 *Var[2] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Thread
	   Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[1] *Var[4] *Var[3] 0000003C 00000008 00000000 0000001E 00000000 00000000 00000000 00000000 00000000 )
	   Wait     00000002 
	   Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[1] *Var[4] *Var[3] 0000003C 00000008 00000021 0000001E 00000000 00000000 00000000 00000000 00000000 )
	   Wait     00000002 
	   Call     PlayEffect  	( {FX:SmokeImpact:Small} *Var[1] *Var[4] *Var[3] 0000003C 00000008 00000042 0000001E 00000000 00000000 00000000 00000000 00000000 )
	EndThread
	Thread
	   Call     ShakeCam    	( 00000001 00000000 00000014 *Fixed[1.0] )
	EndThread
	Thread
	   Call     GetActorVar 	( .Actor:Self 00000006 *Var[0] )
	   Call     GetActorVar 	( .Actor:Self 00000007 *Var[1] )
	   Set  *Var[F]  00000000 
	   Call     PlaySoundAtActor 	( .Actor:Self 000020B7 )
	   Loop     00000014 
	      Call     $Function_80218114 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.5] 0000000A 00000000 00000000 )
	      Call     $Function_80218114 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.5] 0000000A 00000000 00000000 )
	      MulF  *Var[2]  *Var[0] 
	      MulF  *Var[3]  *Var[1] 
	      Call     SetActorVar 	( .Actor:Self 00000006 *Var[2] )
	      Call     SetActorVar 	( .Actor:Self 00000007 *Var[3] )
	      Add  *Var[F]  00000001 
	      Wait     00000001 
	   EndLoop
	   Call     PlaySoundAtActor 	( .Actor:Self 000020B7 )
	   Loop     00000014 
	      Call     $Function_80218114 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.2001953] 0000000A 00000000 00000000 )
	      Call     $Function_80218114 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.80078125] 0000000A 00000000 00000000 )
	      MulF  *Var[2]  *Var[0] 
	      MulF  *Var[3]  *Var[1] 
	      Call     SetActorVar 	( .Actor:Self 00000006 *Var[2] )
	      Call     SetActorVar 	( .Actor:Self 00000007 *Var[3] )
	      Add  *Var[F]  00000001 
	      Wait     00000001 
	   EndLoop
	   Call     SetActorVar 	( .Actor:Self 00000006 *Var[0] )
	   Call     SetActorVar 	( .Actor:Self 00000007 *Var[1] )
	EndThread
	Thread
	   Loop     00000028 
	      Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     GetActorVar 	( .Actor:Self 00000007 *Var[3] )
	      Mul  *Var[3]  0000005F 
	      Div  *Var[3]  000000C8 
	      Call     SetActorPos 	( .Actor:Self *Var[0] *Var[3] *Var[2] )
	      Wait     00000001 
	   EndLoop
	EndThread
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	If  *Var[0]  &  00000001 
	   Thread
	      Call     GetActorVar 	( *Array[0] 00000003 *Var[0] )
	      Call     GetActorVar 	( *Array[0] 00000004 *Var[1] )
	      Set  *Var[F]  00000000 
	      Loop     00000014 
	         Call     $Function_80218114 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.5] 0000000A 00000000 00000000 )
	         Call     $Function_80218114 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.5] 0000000A 00000000 00000000 )
	         MulF  *Var[2]  *Var[0] 
	         MulF  *Var[3]  *Var[1] 
	         Call     SetActorVar 	( *Array[0] 00000003 *Var[2] )
	         Call     SetActorVar 	( *Array[0] 00000004 *Var[3] )
	         Add  *Var[F]  00000001 
	         Wait     00000001 
	      EndLoop
	      Loop     00000014 
	         Call     $Function_80218114 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.2001953] 0000000A 00000000 00000000 )
	         Call     $Function_80218114 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.80078125] 0000000A 00000000 00000000 )
	         MulF  *Var[2]  *Var[0] 
	         MulF  *Var[3]  *Var[1] 
	         Call     SetActorVar 	( *Array[0] 00000003 *Var[2] )
	         Call     SetActorVar 	( *Array[0] 00000004 *Var[3] )
	         Add  *Var[F]  00000001 
	         Wait     00000001 
	      EndLoop
	      Call     SetActorVar 	( *Array[0] 00000003 *Var[0] )
	      Call     SetActorVar 	( *Array[0] 00000004 *Var[1] )
	   EndThread
	   Thread
	      Loop     00000028 
	         Call     GetActorPos 	( *Array[0] *Var[0] *Var[1] *Var[2] )
	         Call     GetActorVar 	( *Array[0] 00000004 *Var[3] )
	         Call     GetActorVar 	( *Array[0] 00000000 *Var[4] )
	         If  *Var[4]  ==  00000000 
	            Mul  *Var[3]  00000014 
	         Else
	            Mul  *Var[3]  0000001C 
	         EndIf
	         Div  *Var[3]  000000C8 
	         Call     SetActorPos 	( *Array[0] *Var[0] *Var[3] *Var[2] )
	         Wait     00000001 
	      EndLoop
	   EndThread
	EndIf
	If  *Var[0]  &  00000002 
	   Thread
	      Call     GetActorVar 	( *Array[1] 00000003 *Var[0] )
	      Call     GetActorVar 	( *Array[1] 00000004 *Var[1] )
	      Set  *Var[F]  00000000 
	      Loop     00000014 
	         Call     $Function_80218114 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.5] 0000000A 00000000 00000000 )
	         Call     $Function_80218114 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.5] 0000000A 00000000 00000000 )
	         MulF  *Var[2]  *Var[0] 
	         MulF  *Var[3]  *Var[1] 
	         Call     SetActorVar 	( *Array[1] 00000003 *Var[2] )
	         Call     SetActorVar 	( *Array[1] 00000004 *Var[3] )
	         Add  *Var[F]  00000001 
	         Wait     00000001 
	      EndLoop
	      Loop     00000014 
	         Call     $Function_80218114 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.2001953] 0000000A 00000000 00000000 )
	         Call     $Function_80218114 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.80078125] 0000000A 00000000 00000000 )
	         MulF  *Var[2]  *Var[0] 
	         MulF  *Var[3]  *Var[1] 
	         Call     SetActorVar 	( *Array[1] 00000003 *Var[2] )
	         Call     SetActorVar 	( *Array[1] 00000004 *Var[3] )
	         Add  *Var[F]  00000001 
	         Wait     00000001 
	      EndLoop
	      Call     SetActorVar 	( *Array[1] 00000003 *Var[0] )
	      Call     SetActorVar 	( *Array[1] 00000004 *Var[1] )
	   EndThread
	   Thread
	      Loop     00000028 
	         Call     GetActorPos 	( *Array[1] *Var[0] *Var[1] *Var[2] )
	         Call     GetActorVar 	( *Array[1] 00000004 *Var[3] )
	         Call     GetActorVar 	( *Array[1] 00000000 *Var[4] )
	         If  *Var[4]  ==  00000000 
	            Mul  *Var[3]  00000014 
	         Else
	            Mul  *Var[3]  0000001C 
	         EndIf
	         Div  *Var[3]  000000C8 
	         Call     SetActorPos 	( *Array[1] *Var[0] *Var[3] *Var[2] )
	         Wait     00000001 
	      EndLoop
	   EndThread
	EndIf
	If  *Var[0]  &  00000004 
	   Thread
	      Call     GetActorVar 	( *Array[2] 00000003 *Var[0] )
	      Call     GetActorVar 	( *Array[2] 00000004 *Var[1] )
	      Set  *Var[F]  00000000 
	      Loop     00000014 
	         Call     $Function_80218114 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.5] 0000000A 00000000 00000000 )
	         Call     $Function_80218114 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.5] 0000000A 00000000 00000000 )
	         MulF  *Var[2]  *Var[0] 
	         MulF  *Var[3]  *Var[1] 
	         Call     SetActorVar 	( *Array[2] 00000003 *Var[2] )
	         Call     SetActorVar 	( *Array[2] 00000004 *Var[3] )
	         Add  *Var[F]  00000001 
	         Wait     00000001 
	      EndLoop
	      Loop     00000014 
	         Call     $Function_80218114 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.2001953] 0000000A 00000000 00000000 )
	         Call     $Function_80218114 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.80078125] 0000000A 00000000 00000000 )
	         MulF  *Var[2]  *Var[0] 
	         MulF  *Var[3]  *Var[1] 
	         Call     SetActorVar 	( *Array[2] 00000003 *Var[2] )
	         Call     SetActorVar 	( *Array[2] 00000004 *Var[3] )
	         Add  *Var[F]  00000001 
	         Wait     00000001 
	      EndLoop
	      Call     SetActorVar 	( *Array[2] 00000003 *Var[0] )
	      Call     SetActorVar 	( *Array[2] 00000004 *Var[1] )
	   EndThread
	   Thread
	      Loop     00000028 
	         Call     GetActorPos 	( *Array[2] *Var[0] *Var[1] *Var[2] )
	         Call     GetActorVar 	( *Array[2] 00000004 *Var[3] )
	         Call     GetActorVar 	( *Array[2] 00000000 *Var[4] )
	         If  *Var[4]  ==  00000000 
	            Mul  *Var[3]  00000014 
	         Else
	            Mul  *Var[3]  0000001C 
	         EndIf
	         Div  *Var[3]  000000C8 
	         Call     SetActorPos 	( *Array[2] *Var[0] *Var[3] *Var[2] )
	         Wait     00000001 
	      EndLoop
	   EndThread
	EndIf
	If  *Var[0]  &  00000008 
	   Thread
	      Call     GetActorVar 	( *Array[3] 00000003 *Var[0] )
	      Call     GetActorVar 	( *Array[3] 00000004 *Var[1] )
	      Set  *Var[F]  00000000 
	      Loop     00000014 
	         Call     $Function_80218114 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.5] 0000000A 00000000 00000000 )
	         Call     $Function_80218114 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.5] 0000000A 00000000 00000000 )
	         MulF  *Var[2]  *Var[0] 
	         MulF  *Var[3]  *Var[1] 
	         Call     SetActorVar 	( *Array[3] 00000003 *Var[2] )
	         Call     SetActorVar 	( *Array[3] 00000004 *Var[3] )
	         Add  *Var[F]  00000001 
	         Wait     00000001 
	      EndLoop
	      Loop     00000014 
	         Call     $Function_80218114 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.2001953] 0000000A 00000000 00000000 )
	         Call     $Function_80218114 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.80078125] 0000000A 00000000 00000000 )
	         MulF  *Var[2]  *Var[0] 
	         MulF  *Var[3]  *Var[1] 
	         Call     SetActorVar 	( *Array[3] 00000003 *Var[2] )
	         Call     SetActorVar 	( *Array[3] 00000004 *Var[3] )
	         Add  *Var[F]  00000001 
	         Wait     00000001 
	      EndLoop
	      Call     SetActorVar 	( *Array[3] 00000003 *Var[0] )
	      Call     SetActorVar 	( *Array[3] 00000004 *Var[1] )
	   EndThread
	   Thread
	      Loop     00000028 
	         Call     GetActorPos 	( *Array[3] *Var[0] *Var[1] *Var[2] )
	         Call     GetActorVar 	( *Array[3] 00000004 *Var[3] )
	         Call     GetActorVar 	( *Array[3] 00000000 *Var[4] )
	         If  *Var[4]  ==  00000000 
	            Mul  *Var[3]  00000014 
	         Else
	            Mul  *Var[3]  0000001C 
	         EndIf
	         Div  *Var[3]  000000C8 
	         Call     SetActorPos 	( *Array[3] *Var[0] *Var[3] *Var[2] )
	         Wait     00000001 
	      EndLoop
	   EndThread
	EndIf
	If  *Var[0]  &  00000010 
	   Thread
	      Call     GetActorVar 	( *Array[4] 00000003 *Var[0] )
	      Call     GetActorVar 	( *Array[4] 00000004 *Var[1] )
	      Set  *Var[F]  00000000 
	      Loop     00000014 
	         Call     $Function_80218114 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.5] 0000000A 00000000 00000000 )
	         Call     $Function_80218114 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.5] 0000000A 00000000 00000000 )
	         MulF  *Var[2]  *Var[0] 
	         MulF  *Var[3]  *Var[1] 
	         Call     SetActorVar 	( *Array[4] 00000003 *Var[2] )
	         Call     SetActorVar 	( *Array[4] 00000004 *Var[3] )
	         Add  *Var[F]  00000001 
	         Wait     00000001 
	      EndLoop
	      Loop     00000014 
	         Call     $Function_80218114 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.2001953] 0000000A 00000000 00000000 )
	         Call     $Function_80218114 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.80078125] 0000000A 00000000 00000000 )
	         MulF  *Var[2]  *Var[0] 
	         MulF  *Var[3]  *Var[1] 
	         Call     SetActorVar 	( *Array[4] 00000003 *Var[2] )
	         Call     SetActorVar 	( *Array[4] 00000004 *Var[3] )
	         Add  *Var[F]  00000001 
	         Wait     00000001 
	      EndLoop
	      Call     SetActorVar 	( *Array[4] 00000003 *Var[0] )
	      Call     SetActorVar 	( *Array[4] 00000004 *Var[1] )
	   EndThread
	   Thread
	      Loop     00000028 
	         Call     GetActorPos 	( *Array[4] *Var[0] *Var[1] *Var[2] )
	         Call     GetActorVar 	( *Array[4] 00000004 *Var[3] )
	         Call     GetActorVar 	( *Array[4] 00000000 *Var[4] )
	         If  *Var[4]  ==  00000000 
	            Mul  *Var[3]  00000014 
	         Else
	            Mul  *Var[3]  0000001C 
	         EndIf
	         Div  *Var[3]  000000C8 
	         Call     SetActorPos 	( *Array[4] *Var[0] *Var[3] *Var[2] )
	         Wait     00000001 
	      EndLoop
	   EndThread
	EndIf
	If  *Var[0]  &  00000020 
	   Thread
	      Call     GetActorVar 	( *Array[5] 00000003 *Var[0] )
	      Call     GetActorVar 	( *Array[5] 00000004 *Var[1] )
	      Set  *Var[F]  00000000 
	      Loop     00000014 
	         Call     $Function_80218114 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.5] 0000000A 00000000 00000000 )
	         Call     $Function_80218114 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.5] 0000000A 00000000 00000000 )
	         MulF  *Var[2]  *Var[0] 
	         MulF  *Var[3]  *Var[1] 
	         Call     SetActorVar 	( *Array[5] 00000003 *Var[2] )
	         Call     SetActorVar 	( *Array[5] 00000004 *Var[3] )
	         Add  *Var[F]  00000001 
	         Wait     00000001 
	      EndLoop
	      Loop     00000014 
	         Call     $Function_80218114 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.2001953] 0000000A 00000000 00000000 )
	         Call     $Function_80218114 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.80078125] 0000000A 00000000 00000000 )
	         MulF  *Var[2]  *Var[0] 
	         MulF  *Var[3]  *Var[1] 
	         Call     SetActorVar 	( *Array[5] 00000003 *Var[2] )
	         Call     SetActorVar 	( *Array[5] 00000004 *Var[3] )
	         Add  *Var[F]  00000001 
	         Wait     00000001 
	      EndLoop
	      Call     SetActorVar 	( *Array[5] 00000003 *Var[0] )
	      Call     SetActorVar 	( *Array[5] 00000004 *Var[1] )
	   EndThread
	   Thread
	      Loop     00000028 
	         Call     GetActorPos 	( *Array[5] *Var[0] *Var[1] *Var[2] )
	         Call     GetActorVar 	( *Array[5] 00000004 *Var[3] )
	         Call     GetActorVar 	( *Array[5] 00000000 *Var[4] )
	         If  *Var[4]  ==  00000000 
	            Mul  *Var[3]  00000014 
	         Else
	            Mul  *Var[3]  0000001C 
	         EndIf
	         Div  *Var[3]  000000C8 
	         Call     SetActorPos 	( *Array[5] *Var[0] *Var[3] *Var[2] )
	         Wait     00000001 
	      EndLoop
	   EndThread
	EndIf
	If  *Var[0]  &  00000040 
	   Thread
	      Call     GetActorVar 	( *Array[6] 00000003 *Var[0] )
	      Call     GetActorVar 	( *Array[6] 00000004 *Var[1] )
	      Set  *Var[F]  00000000 
	      Loop     00000014 
	         Call     $Function_80218114 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.5] 0000000A 00000000 00000000 )
	         Call     $Function_80218114 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.5] 0000000A 00000000 00000000 )
	         MulF  *Var[2]  *Var[0] 
	         MulF  *Var[3]  *Var[1] 
	         Call     SetActorVar 	( *Array[6] 00000003 *Var[2] )
	         Call     SetActorVar 	( *Array[6] 00000004 *Var[3] )
	         Add  *Var[F]  00000001 
	         Wait     00000001 
	      EndLoop
	      Loop     00000014 
	         Call     $Function_80218114 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.2001953] 0000000A 00000000 00000000 )
	         Call     $Function_80218114 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.80078125] 0000000A 00000000 00000000 )
	         MulF  *Var[2]  *Var[0] 
	         MulF  *Var[3]  *Var[1] 
	         Call     SetActorVar 	( *Array[6] 00000003 *Var[2] )
	         Call     SetActorVar 	( *Array[6] 00000004 *Var[3] )
	         Add  *Var[F]  00000001 
	         Wait     00000001 
	      EndLoop
	      Call     SetActorVar 	( *Array[6] 00000003 *Var[0] )
	      Call     SetActorVar 	( *Array[6] 00000004 *Var[1] )
	   EndThread
	   Thread
	      Loop     00000028 
	         Call     GetActorPos 	( *Array[6] *Var[0] *Var[1] *Var[2] )
	         Call     GetActorVar 	( *Array[6] 00000004 *Var[3] )
	         Call     GetActorVar 	( *Array[6] 00000000 *Var[4] )
	         If  *Var[4]  ==  00000000 
	            Mul  *Var[3]  00000014 
	         Else
	            Mul  *Var[3]  0000001C 
	         EndIf
	         Div  *Var[3]  000000C8 
	         Call     SetActorPos 	( *Array[6] *Var[0] *Var[3] *Var[2] )
	         Wait     00000001 
	      EndLoop
	   EndThread
	EndIf
	If  *Var[0]  &  00000080 
	   Thread
	      Call     GetActorVar 	( *Array[7] 00000003 *Var[0] )
	      Call     GetActorVar 	( *Array[7] 00000004 *Var[1] )
	      Set  *Var[F]  00000000 
	      Loop     00000014 
	         Call     $Function_80218114 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.5] 0000000A 00000000 00000000 )
	         Call     $Function_80218114 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.5] 0000000A 00000000 00000000 )
	         MulF  *Var[2]  *Var[0] 
	         MulF  *Var[3]  *Var[1] 
	         Call     SetActorVar 	( *Array[7] 00000003 *Var[2] )
	         Call     SetActorVar 	( *Array[7] 00000004 *Var[3] )
	         Add  *Var[F]  00000001 
	         Wait     00000001 
	      EndLoop
	      Loop     00000014 
	         Call     $Function_80218114 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.2001953] 0000000A 00000000 00000000 )
	         Call     $Function_80218114 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.80078125] 0000000A 00000000 00000000 )
	         MulF  *Var[2]  *Var[0] 
	         MulF  *Var[3]  *Var[1] 
	         Call     SetActorVar 	( *Array[7] 00000003 *Var[2] )
	         Call     SetActorVar 	( *Array[7] 00000004 *Var[3] )
	         Add  *Var[F]  00000001 
	         Wait     00000001 
	      EndLoop
	      Call     SetActorVar 	( *Array[7] 00000003 *Var[0] )
	      Call     SetActorVar 	( *Array[7] 00000004 *Var[1] )
	   EndThread
	   Thread
	      Loop     00000028 
	         Call     GetActorPos 	( *Array[7] *Var[0] *Var[1] *Var[2] )
	         Call     GetActorVar 	( *Array[7] 00000004 *Var[3] )
	         Call     GetActorVar 	( *Array[7] 00000000 *Var[4] )
	         If  *Var[4]  ==  00000000 
	            Mul  *Var[3]  00000014 
	         Else
	            Mul  *Var[3]  0000001C 
	         EndIf
	         Div  *Var[3]  000000C8 
	         Call     SetActorPos 	( *Array[7] *Var[0] *Var[3] *Var[2] )
	         Wait     00000001 
	      EndLoop
	   EndThread
	EndIf
	If  *Var[0]  &  00000100 
	   Thread
	      Call     GetActorVar 	( *Array[8] 00000003 *Var[0] )
	      Call     GetActorVar 	( *Array[8] 00000004 *Var[1] )
	      Set  *Var[F]  00000000 
	      Loop     00000014 
	         Call     $Function_80218114 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.5] 0000000A 00000000 00000000 )
	         Call     $Function_80218114 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.5] 0000000A 00000000 00000000 )
	         MulF  *Var[2]  *Var[0] 
	         MulF  *Var[3]  *Var[1] 
	         Call     SetActorVar 	( *Array[8] 00000003 *Var[2] )
	         Call     SetActorVar 	( *Array[8] 00000004 *Var[3] )
	         Add  *Var[F]  00000001 
	         Wait     00000001 
	      EndLoop
	      Loop     00000014 
	         Call     $Function_80218114 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.2001953] 0000000A 00000000 00000000 )
	         Call     $Function_80218114 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.80078125] 0000000A 00000000 00000000 )
	         MulF  *Var[2]  *Var[0] 
	         MulF  *Var[3]  *Var[1] 
	         Call     SetActorVar 	( *Array[8] 00000003 *Var[2] )
	         Call     SetActorVar 	( *Array[8] 00000004 *Var[3] )
	         Add  *Var[F]  00000001 
	         Wait     00000001 
	      EndLoop
	      Call     SetActorVar 	( *Array[8] 00000003 *Var[0] )
	      Call     SetActorVar 	( *Array[8] 00000004 *Var[1] )
	   EndThread
	   Thread
	      Loop     00000028 
	         Call     GetActorPos 	( *Array[8] *Var[0] *Var[1] *Var[2] )
	         Call     GetActorVar 	( *Array[8] 00000004 *Var[3] )
	         Call     GetActorVar 	( *Array[8] 00000000 *Var[4] )
	         If  *Var[4]  ==  00000000 
	            Mul  *Var[3]  00000014 
	         Else
	            Mul  *Var[3]  0000001C 
	         EndIf
	         Div  *Var[3]  000000C8 
	         Call     SetActorPos 	( *Array[8] *Var[0] *Var[3] *Var[2] )
	         Wait     00000001 
	      EndLoop
	   EndThread
	EndIf
	If  *Var[0]  &  00000200 
	   Thread
	      Call     GetActorVar 	( *Array[9] 00000003 *Var[0] )
	      Call     GetActorVar 	( *Array[9] 00000004 *Var[1] )
	      Set  *Var[F]  00000000 
	      Loop     00000014 
	         Call     $Function_80218114 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.5] 0000000A 00000000 00000000 )
	         Call     $Function_80218114 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.5] 0000000A 00000000 00000000 )
	         MulF  *Var[2]  *Var[0] 
	         MulF  *Var[3]  *Var[1] 
	         Call     SetActorVar 	( *Array[9] 00000003 *Var[2] )
	         Call     SetActorVar 	( *Array[9] 00000004 *Var[3] )
	         Add  *Var[F]  00000001 
	         Wait     00000001 
	      EndLoop
	      Loop     00000014 
	         Call     $Function_80218114 ( *Var[F] *Var[2] *Fixed[1.0] *Fixed[1.2001953] 0000000A 00000000 00000000 )
	         Call     $Function_80218114 ( *Var[F] *Var[3] *Fixed[1.0] *Fixed[0.80078125] 0000000A 00000000 00000000 )
	         MulF  *Var[2]  *Var[0] 
	         MulF  *Var[3]  *Var[1] 
	         Call     SetActorVar 	( *Array[9] 00000003 *Var[2] )
	         Call     SetActorVar 	( *Array[9] 00000004 *Var[3] )
	         Add  *Var[F]  00000001 
	         Wait     00000001 
	      EndLoop
	      Call     SetActorVar 	( *Array[9] 00000003 *Var[0] )
	      Call     SetActorVar 	( *Array[9] 00000004 *Var[1] )
	   EndThread
	   Thread
	      Loop     00000028 
	         Call     GetActorPos 	( *Array[9] *Var[0] *Var[1] *Var[2] )
	         Call     GetActorVar 	( *Array[9] 00000004 *Var[3] )
	         Call     GetActorVar 	( *Array[9] 00000000 *Var[4] )
	         If  *Var[4]  ==  00000000 
	            Mul  *Var[3]  00000014 
	         Else
	            Mul  *Var[3]  0000001C 
	         EndIf
	         Div  *Var[3]  000000C8 
	         Call     SetActorPos 	( *Array[9] *Var[0] *Var[3] *Var[2] )
	         Wait     00000001 
	      EndLoop
	   EndThread
	EndIf
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Set  *Var[A]  *Var[0] 
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Wait     00000064 
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Call     SetAnimation 	( .Actor:Self 00000001 007C0004 )
	      Call     SetAnimation 	( .Actor:Self 00000002 007C0005 )
	      Call     SetAnimation 	( .Actor:Self 00000003 007C0006 )
	      Wait     00000014 
	      Set  *Var[A]  00000000 
	      Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	      If  *Var[0]  &  00000010 
	         Thread
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[4] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[4] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[4] )
	            Call     MoveToGoal  	( *Array[4] 00000014 FFFFFFF6 .Easing:SinOut )
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000008 
	      EndIf
	      If  *Var[0]  &  00000200 
	         Thread
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[9] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[9] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[9] )
	            Call     MoveToGoal  	( *Array[9] 00000014 FFFFFFF6 .Easing:SinOut )
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000008 
	      EndIf
	      If  *Var[0]  &  00000008 
	         Thread
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[3] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[3] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[3] )
	            Call     MoveToGoal  	( *Array[3] 00000014 FFFFFFF6 .Easing:SinOut )
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000008 
	      EndIf
	      If  *Var[0]  &  00000020 
	         Thread
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[5] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[5] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[5] )
	            Call     MoveToGoal  	( *Array[5] 00000014 FFFFFFF6 .Easing:SinOut )
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000008 
	      EndIf
	      If  *Var[0]  &  00000002 
	         Thread
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[1] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[1] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[1] )
	            Call     MoveToGoal  	( *Array[1] 00000014 FFFFFFF6 .Easing:SinOut )
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000008 
	      EndIf
	      If  *Var[0]  &  00000001 
	         Thread
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[0] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[0] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[0] )
	            Call     MoveToGoal  	( *Array[0] 00000014 FFFFFFF6 .Easing:SinOut )
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000008 
	      EndIf
	      If  *Var[0]  &  00000100 
	         Thread
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[8] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[8] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[8] )
	            Call     MoveToGoal  	( *Array[8] 00000014 FFFFFFF6 .Easing:SinOut )
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000008 
	      EndIf
	      If  *Var[0]  &  00000004 
	         Thread
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[2] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[2] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[2] )
	            Call     MoveToGoal  	( *Array[2] 00000014 FFFFFFF6 .Easing:SinOut )
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000008 
	      EndIf
	      If  *Var[0]  &  00000080 
	         Thread
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[7] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[7] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[7] )
	            Call     MoveToGoal  	( *Array[7] 00000014 FFFFFFF6 .Easing:SinOut )
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000008 
	      EndIf
	      If  *Var[0]  &  00000040 
	         Thread
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[6] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[6] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[6] )
	            Call     MoveToGoal  	( *Array[6] 00000014 FFFFFFF6 .Easing:SinOut )
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000008 
	      EndIf
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     MoveToGoal  	( .Actor:Self 00000014 FFFFFFF6 .Easing:SinOut )
	      Wait     0000000F 
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Set  *Var[A]  00000005 
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	If  *Var[0]  &  00000001 
	   Add  *Var[A]  00000001 
	EndIf
	If  *Var[0]  &  00000002 
	   Add  *Var[A]  00000001 
	EndIf
	If  *Var[0]  &  00000004 
	   Add  *Var[A]  00000001 
	EndIf
	If  *Var[0]  &  00000008 
	   Add  *Var[A]  00000001 
	EndIf
	If  *Var[0]  &  00000010 
	   Add  *Var[A]  00000001 
	EndIf
	If  *Var[0]  &  00000020 
	   Add  *Var[A]  00000001 
	EndIf
	If  *Var[0]  &  00000040 
	   Add  *Var[A]  00000001 
	EndIf
	If  *Var[0]  &  00000080 
	   Add  *Var[A]  00000001 
	EndIf
	If  *Var[0]  &  00000100 
	   Add  *Var[A]  00000001 
	EndIf
	If  *Var[0]  &  00000200 
	   Add  *Var[A]  00000001 
	EndIf
	Wait     00000002 
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000800 00000000 00000000 *Var[A] 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Wait     00000032 
	      Set  *Var[A]  00000000 
	      Call     SetGoalToHome 	( .Actor:Self )
	      Call     MoveToGoal  	( .Actor:Self 00000014 FFFFFFF6 .Easing:SinOut )
	      Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	      If  *Var[0]  &  00000010 
	         Thread
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[4] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[4] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[4] )
	            Call     MoveToGoal  	( *Array[4] 00000014 FFFFFFF6 .Easing:SinOut )
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000008 
	      EndIf
	      If  *Var[0]  &  00000200 
	         Thread
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[9] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[9] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[9] )
	            Call     MoveToGoal  	( *Array[9] 00000014 FFFFFFF6 .Easing:SinOut )
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000008 
	      EndIf
	      If  *Var[0]  &  00000008 
	         Thread
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[3] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[3] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[3] )
	            Call     MoveToGoal  	( *Array[3] 00000014 FFFFFFF6 .Easing:SinOut )
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000008 
	      EndIf
	      If  *Var[0]  &  00000020 
	         Thread
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[5] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[5] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[5] )
	            Call     MoveToGoal  	( *Array[5] 00000014 FFFFFFF6 .Easing:SinOut )
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000008 
	      EndIf
	      If  *Var[0]  &  00000002 
	         Thread
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[1] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[1] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[1] )
	            Call     MoveToGoal  	( *Array[1] 00000014 FFFFFFF6 .Easing:SinOut )
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000008 
	      EndIf
	      If  *Var[0]  &  00000001 
	         Thread
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[0] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[0] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[0] )
	            Call     MoveToGoal  	( *Array[0] 00000014 FFFFFFF6 .Easing:SinOut )
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000008 
	      EndIf
	      If  *Var[0]  &  00000100 
	         Thread
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[8] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[8] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[8] )
	            Call     MoveToGoal  	( *Array[8] 00000014 FFFFFFF6 .Easing:SinOut )
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000008 
	      EndIf
	      If  *Var[0]  &  00000004 
	         Thread
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[2] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[2] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[2] )
	            Call     MoveToGoal  	( *Array[2] 00000014 FFFFFFF6 .Easing:SinOut )
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000008 
	      EndIf
	      If  *Var[0]  &  00000080 
	         Thread
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[7] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[7] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[7] )
	            Call     MoveToGoal  	( *Array[7] 00000014 FFFFFFF6 .Easing:SinOut )
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000008 
	      EndIf
	      If  *Var[0]  &  00000040 
	         Thread
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[6] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[6] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[6] )
	            Call     MoveToGoal  	( *Array[6] 00000014 FFFFFFF6 .Easing:SinOut )
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000008 
	      EndIf
	      Wait     00000014 
	   EndCaseGroup
	EndSwitch
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_80228004
	If  *Var[3]  ==  00000000 
	   Set  *Flag[00]  00000001 
	EndIf
	Set  *Var[A]  *Var[1] 
	Set  *Var[B]  *Var[2] 
	Div  *Var[B]  00000002 
	Add  *Var[B]  00000001 
	Call     SetOwnerID  	( *Var[1] )
	Call     RandInt     	( 000003E8 *Var[0] )
	If  *Var[0]  <  000001F4 
	   Call     SetActorVar 	( .Actor:Self 00000002 00000001 )
	Else
	   Call     SetActorVar 	( .Actor:Self 00000002 00000002 )
	EndIf
	Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	Call     GetActorPos 	( .Actor:Self *Var[3] *Var[4] *Var[5] )
	Call     GetDist2D   	( *Var[D] *Var[0] *Var[2] *Var[3] *Var[5] )
	Call     $Function_80218AA0 ( *Var[E] *Var[0] *Var[2] *Var[3] *Var[5] )
	Set  *Var[F]  00000000 
	Loop     
	   Call     PlaySoundAtActor 	( .Actor:Self 000003DB )
	   Set  *Var[F]  00000000 
	   Set  *Var[C]  *Var[B] 
	   Add  *Var[C]  *Var[B] 
	   Set  *Var[9]  *Var[C] 
	   Loop     *Var[C] 
	      Call     $Function_80218B60 ( 00000005 *Fixed[100.0] *Fixed[40.0] *Var[F] *Var[9] *Var[0] )
	      MulF  *Var[0]  *Var[D] 
	      DivF  *Var[0]  *Fixed[100.0] 
	      Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
	      Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
	      Call     AddVectorPolar ( *Var[1] *Var[3] *Var[0] *Var[E] )
	      Call     SetActorPos 	( .Actor:Self *Var[1] *Var[5] *Var[3] )
	      Add  *Var[F]  00000001 
	      Wait     00000001 
	   EndLoop
	   Wait     00000005 
	   If  *Flag[00]  ==  00000001 
	      Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	      ConstOR  *Var[0] 00000004 
	      Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	   EndIf
	   Set  *Var[F]  00000000 
	   Set  *Var[C]  *Var[B] 
	   Loop     *Var[C] 
	      Call     $Function_80218B60 ( 00000006 *Fixed[40.0] *Fixed[100.0] *Var[F] *Var[B] *Var[0] )
	      MulF  *Var[0]  *Var[D] 
	      DivF  *Var[0]  *Fixed[100.0] 
	      Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
	      Call     GetActorPos 	( .Actor:Self *Var[4] *Var[5] *Var[6] )
	      Call     AddVectorPolar ( *Var[1] *Var[3] *Var[0] *Var[E] )
	      Call     SetActorPos 	( .Actor:Self *Var[1] *Var[5] *Var[3] )
	      Add  *Var[F]  00000001 
	      Wait     00000001 
	   EndLoop
	   Wait     0000000A 
	EndLoop
	Return
	End

#new:Script $Script_TuffPuffSwarm
	UseArray $TuffPuffIDs 
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	If  *Var[0]  &  00000010 
	   Thread
	      Call     GetActorPos 	( *Array[4] *Var[1] *Var[2] *Var[3] )
	      Add  *Var[2]  0000000F 
	      Call     SetGoalToPos 	( *Array[4] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[4] 00000014 00000000 .Easing:Linear )
	      Wait     00000003 
	   EndThread
	EndIf
	If  *Var[0]  &  00000200 
	   Thread
	      Call     GetActorPos 	( *Array[9] *Var[1] *Var[2] *Var[3] )
	      Add  *Var[2]  0000000F 
	      Call     SetGoalToPos 	( *Array[9] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[9] 00000014 00000000 .Easing:Linear )
	      Wait     00000003 
	   EndThread
	EndIf
	If  *Var[0]  &  00000008 
	   Thread
	      Call     GetActorPos 	( *Array[3] *Var[1] *Var[2] *Var[3] )
	      Add  *Var[2]  0000000F 
	      Call     SetGoalToPos 	( *Array[3] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[3] 00000014 00000000 .Easing:Linear )
	      Wait     00000003 
	   EndThread
	EndIf
	If  *Var[0]  &  00000020 
	   Thread
	      Call     GetActorPos 	( *Array[5] *Var[1] *Var[2] *Var[3] )
	      Add  *Var[2]  0000000F 
	      Call     SetGoalToPos 	( *Array[5] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[5] 00000014 00000000 .Easing:Linear )
	      Wait     00000003 
	   EndThread
	EndIf
	If  *Var[0]  &  00000002 
	   Thread
	      Call     GetActorPos 	( *Array[1] *Var[1] *Var[2] *Var[3] )
	      Add  *Var[2]  0000000F 
	      Call     SetGoalToPos 	( *Array[1] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[1] 00000014 00000000 .Easing:Linear )
	      Wait     00000003 
	   EndThread
	EndIf
	If  *Var[0]  &  00000001 
	   Thread
	      Call     GetActorPos 	( *Array[0] *Var[1] *Var[2] *Var[3] )
	      Add  *Var[2]  0000000F 
	      Call     SetGoalToPos 	( *Array[0] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[0] 00000014 00000000 .Easing:Linear )
	      Wait     00000003 
	   EndThread
	EndIf
	If  *Var[0]  &  00000100 
	   Thread
	      Call     GetActorPos 	( *Array[8] *Var[1] *Var[2] *Var[3] )
	      Add  *Var[2]  0000000F 
	      Call     SetGoalToPos 	( *Array[8] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[8] 00000014 00000000 .Easing:Linear )
	      Wait     00000003 
	   EndThread
	EndIf
	If  *Var[0]  &  00000004 
	   Thread
	      Call     GetActorPos 	( *Array[2] *Var[1] *Var[2] *Var[3] )
	      Add  *Var[2]  0000000F 
	      Call     SetGoalToPos 	( *Array[2] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[2] 00000014 00000000 .Easing:Linear )
	      Wait     00000003 
	   EndThread
	EndIf
	If  *Var[0]  &  00000080 
	   Thread
	      Call     GetActorPos 	( *Array[7] *Var[1] *Var[2] *Var[3] )
	      Add  *Var[2]  0000000F 
	      Call     SetGoalToPos 	( *Array[7] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[7] 00000014 00000000 .Easing:Linear )
	      Wait     00000003 
	   EndThread
	EndIf
	If  *Var[0]  &  00000040 
	   Thread
	      Call     GetActorPos 	( *Array[6] *Var[1] *Var[2] *Var[3] )
	      Add  *Var[2]  0000000F 
	      Call     SetGoalToPos 	( *Array[6] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[6] 00000014 00000000 .Easing:Linear )
	      Wait     00000003 
	   EndThread
	EndIf
	Wait     00000014 
	Set  *Var[A]  00000000 
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	If  *Var[0]  &  00000001 
	   Add  *Var[A]  00000001 
	EndIf
	If  *Var[0]  &  00000002 
	   Add  *Var[A]  00000001 
	EndIf
	If  *Var[0]  &  00000004 
	   Add  *Var[A]  00000001 
	EndIf
	If  *Var[0]  &  00000008 
	   Add  *Var[A]  00000001 
	EndIf
	If  *Var[0]  &  00000010 
	   Add  *Var[A]  00000001 
	EndIf
	If  *Var[0]  &  00000020 
	   Add  *Var[A]  00000001 
	EndIf
	If  *Var[0]  &  00000040 
	   Add  *Var[A]  00000001 
	EndIf
	If  *Var[0]  &  00000080 
	   Add  *Var[A]  00000001 
	EndIf
	If  *Var[0]  &  00000100 
	   Add  *Var[A]  00000001 
	EndIf
	If  *Var[0]  &  00000200 
	   Add  *Var[A]  00000001 
	EndIf
	SetF  *Var[B]  *Fixed[360.0] 
	DivF  *Var[B]  *Var[A] 
	Thread
	   Wait     0000000A 
	   Call     UseCamPreset 	( 00000013 )
	   Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	   Call     SetCamTarget 	( *Var[0] *Var[1] *Var[2] )
	   Call     SetCamZoom  	( 0000012C )
	   Call     SetCamOffsetZ 	( 00000023 )
	   Call     MoveCamOver 	( 0000003C )
	EndThread
	Set  *Var[A]  00000000 
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	If  *Var[0]  &  00000010 
	   Call     UseIdleAnimation 	( *Array[4] .False )
	   Call     SetSpriteAlpha ( *Array[4] 00000001 000000FE )
	   Call     GetActorVar 	( *Array[4] 00000000 *Var[1] )
	   If  *Var[1]  ==  00000000 
	      Call     SetAnimation 	( *Array[4] 00000001 004C0009 )
	   Else
	      Call     SetAnimation 	( *Array[4] 00000001 004C000B )
	   EndIf
	   Thread
	      Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
	      MulF  *Var[B]  *Var[A] 
	      AddF  *Var[B]  *Fixed[100.0] 
	      Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[20.0] *Var[B] )
	      Call     RandInt     	( 00000014 *Var[4] )
	      Sub  *Var[4]  0000000A 
	      Add  *Var[4]  00000013 
	      Add  *Var[2]  *Var[4] 
	      Mod  *Var[A]  00000002 
	      If  *Var[A]  ==  00000000 
	         Call     PlaySoundAtActor 	( *Array[4] 000003D5 )
	      Else
	         Call     PlaySoundAtActor 	( *Array[4] 000003D6 )
	      EndIf
	      Call     SetGoalToPos 	( *Array[4] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[4] 0000001E FFFFFFF6 .Easing:SinOut )
	      Call     GetActorPos 	( .Actor:Player *Var[4] *Var[5] *Var[6] )
	      If  *Var[1]  <  *Var[4] 
	         Call     SetActorAngle 	( *Array[4] 000000B4 )
	      EndIf
	   EndThread
	   Add  *Var[A]  00000001 
	   Wait     00000004 
	EndIf
	If  *Var[0]  &  00000200 
	   Call     UseIdleAnimation 	( *Array[9] .False )
	   Call     SetSpriteAlpha ( *Array[9] 00000001 000000FE )
	   Call     GetActorVar 	( *Array[9] 00000000 *Var[1] )
	   If  *Var[1]  ==  00000000 
	      Call     SetAnimation 	( *Array[9] 00000001 004C0009 )
	   Else
	      Call     SetAnimation 	( *Array[9] 00000001 004C000B )
	   EndIf
	   Thread
	      Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
	      MulF  *Var[B]  *Var[A] 
	      AddF  *Var[B]  *Fixed[100.0] 
	      Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[20.0] *Var[B] )
	      Call     RandInt     	( 00000014 *Var[4] )
	      Sub  *Var[4]  0000000A 
	      Add  *Var[4]  00000013 
	      Add  *Var[2]  *Var[4] 
	      Mod  *Var[A]  00000002 
	      If  *Var[A]  ==  00000000 
	         Call     PlaySoundAtActor 	( *Array[9] 000003D5 )
	      Else
	         Call     PlaySoundAtActor 	( *Array[9] 000003D6 )
	      EndIf
	      Call     SetGoalToPos 	( *Array[9] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[9] 0000001E FFFFFFF6 .Easing:SinOut )
	      Call     GetActorPos 	( .Actor:Player *Var[4] *Var[5] *Var[6] )
	      If  *Var[1]  <  *Var[4] 
	         Call     SetActorAngle 	( *Array[9] 000000B4 )
	      EndIf
	   EndThread
	   Add  *Var[A]  00000001 
	   Wait     00000004 
	EndIf
	If  *Var[0]  &  00000008 
	   Call     UseIdleAnimation 	( *Array[3] .False )
	   Call     SetSpriteAlpha ( *Array[3] 00000001 000000FE )
	   Call     GetActorVar 	( *Array[3] 00000000 *Var[1] )
	   If  *Var[1]  ==  00000000 
	      Call     SetAnimation 	( *Array[3] 00000001 004C0009 )
	   Else
	      Call     SetAnimation 	( *Array[3] 00000001 004C000B )
	   EndIf
	   Thread
	      Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
	      MulF  *Var[B]  *Var[A] 
	      AddF  *Var[B]  *Fixed[100.0] 
	      Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[20.0] *Var[B] )
	      Call     RandInt     	( 00000014 *Var[4] )
	      Sub  *Var[4]  0000000A 
	      Add  *Var[4]  00000013 
	      Add  *Var[2]  *Var[4] 
	      Mod  *Var[A]  00000002 
	      If  *Var[A]  ==  00000000 
	         Call     PlaySoundAtActor 	( *Array[3] 000003D5 )
	      Else
	         Call     PlaySoundAtActor 	( *Array[3] 000003D6 )
	      EndIf
	      Call     SetGoalToPos 	( *Array[3] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[3] 0000001E FFFFFFF6 .Easing:SinOut )
	      Call     GetActorPos 	( .Actor:Player *Var[4] *Var[5] *Var[6] )
	      If  *Var[1]  <  *Var[4] 
	         Call     SetActorAngle 	( *Array[3] 000000B4 )
	      EndIf
	   EndThread
	   Add  *Var[A]  00000001 
	   Wait     00000004 
	EndIf
	If  *Var[0]  &  00000020 
	   Call     UseIdleAnimation 	( *Array[5] .False )
	   Call     SetSpriteAlpha ( *Array[5] 00000001 000000FE )
	   Call     GetActorVar 	( *Array[5] 00000000 *Var[1] )
	   If  *Var[1]  ==  00000000 
	      Call     SetAnimation 	( *Array[5] 00000001 004C0009 )
	   Else
	      Call     SetAnimation 	( *Array[5] 00000001 004C000B )
	   EndIf
	   Thread
	      Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
	      MulF  *Var[B]  *Var[A] 
	      AddF  *Var[B]  *Fixed[100.0] 
	      Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[20.0] *Var[B] )
	      Call     RandInt     	( 00000014 *Var[4] )
	      Sub  *Var[4]  0000000A 
	      Add  *Var[4]  00000013 
	      Add  *Var[2]  *Var[4] 
	      Mod  *Var[A]  00000002 
	      If  *Var[A]  ==  00000000 
	         Call     PlaySoundAtActor 	( *Array[5] 000003D5 )
	      Else
	         Call     PlaySoundAtActor 	( *Array[5] 000003D6 )
	      EndIf
	      Call     SetGoalToPos 	( *Array[5] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[5] 0000001E FFFFFFF6 .Easing:SinOut )
	      Call     GetActorPos 	( .Actor:Player *Var[4] *Var[5] *Var[6] )
	      If  *Var[1]  <  *Var[4] 
	         Call     SetActorAngle 	( *Array[5] 000000B4 )
	      EndIf
	   EndThread
	   Add  *Var[A]  00000001 
	   Wait     00000004 
	EndIf
	If  *Var[0]  &  00000002 
	   Call     UseIdleAnimation 	( *Array[1] .False )
	   Call     SetSpriteAlpha ( *Array[1] 00000001 000000FE )
	   Call     GetActorVar 	( *Array[1] 00000000 *Var[1] )
	   If  *Var[1]  ==  00000000 
	      Call     SetAnimation 	( *Array[1] 00000001 004C0009 )
	   Else
	      Call     SetAnimation 	( *Array[1] 00000001 004C000B )
	   EndIf
	   Thread
	      Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
	      MulF  *Var[B]  *Var[A] 
	      AddF  *Var[B]  *Fixed[100.0] 
	      Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[20.0] *Var[B] )
	      Call     RandInt     	( 00000014 *Var[4] )
	      Sub  *Var[4]  0000000A 
	      Add  *Var[4]  00000013 
	      Add  *Var[2]  *Var[4] 
	      Mod  *Var[A]  00000002 
	      If  *Var[A]  ==  00000000 
	         Call     PlaySoundAtActor 	( *Array[1] 000003D5 )
	      Else
	         Call     PlaySoundAtActor 	( *Array[1] 000003D6 )
	      EndIf
	      Call     SetGoalToPos 	( *Array[1] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[1] 0000001E FFFFFFF6 .Easing:SinOut )
	      Call     GetActorPos 	( .Actor:Player *Var[4] *Var[5] *Var[6] )
	      If  *Var[1]  <  *Var[4] 
	         Call     SetActorAngle 	( *Array[1] 000000B4 )
	      EndIf
	   EndThread
	   Add  *Var[A]  00000001 
	   Wait     00000004 
	EndIf
	If  *Var[0]  &  00000001 
	   Call     UseIdleAnimation 	( *Array[0] .False )
	   Call     SetSpriteAlpha ( *Array[0] 00000001 000000FE )
	   Call     GetActorVar 	( *Array[0] 00000000 *Var[1] )
	   If  *Var[1]  ==  00000000 
	      Call     SetAnimation 	( *Array[0] 00000001 004C0009 )
	   Else
	      Call     SetAnimation 	( *Array[0] 00000001 004C000B )
	   EndIf
	   Thread
	      Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
	      MulF  *Var[B]  *Var[A] 
	      AddF  *Var[B]  *Fixed[100.0] 
	      Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[20.0] *Var[B] )
	      Call     RandInt     	( 00000014 *Var[4] )
	      Sub  *Var[4]  0000000A 
	      Add  *Var[4]  00000013 
	      Add  *Var[2]  *Var[4] 
	      Mod  *Var[A]  00000002 
	      If  *Var[A]  ==  00000000 
	         Call     PlaySoundAtActor 	( *Array[0] 000003D5 )
	      Else
	         Call     PlaySoundAtActor 	( *Array[0] 000003D6 )
	      EndIf
	      Call     SetGoalToPos 	( *Array[0] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[0] 0000001E FFFFFFF6 .Easing:SinOut )
	      Call     GetActorPos 	( .Actor:Player *Var[4] *Var[5] *Var[6] )
	      If  *Var[1]  <  *Var[4] 
	         Call     SetActorAngle 	( *Array[0] 000000B4 )
	      EndIf
	   EndThread
	   Add  *Var[A]  00000001 
	   Wait     00000004 
	EndIf
	If  *Var[0]  &  00000100 
	   Call     UseIdleAnimation 	( *Array[8] .False )
	   Call     SetSpriteAlpha ( *Array[8] 00000001 000000FE )
	   Call     GetActorVar 	( *Array[8] 00000000 *Var[1] )
	   If  *Var[1]  ==  00000000 
	      Call     SetAnimation 	( *Array[8] 00000001 004C0009 )
	   Else
	      Call     SetAnimation 	( *Array[8] 00000001 004C000B )
	   EndIf
	   Thread
	      Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
	      MulF  *Var[B]  *Var[A] 
	      AddF  *Var[B]  *Fixed[100.0] 
	      Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[20.0] *Var[B] )
	      Call     RandInt     	( 00000014 *Var[4] )
	      Sub  *Var[4]  0000000A 
	      Add  *Var[4]  00000013 
	      Add  *Var[2]  *Var[4] 
	      Mod  *Var[A]  00000002 
	      If  *Var[A]  ==  00000000 
	         Call     PlaySoundAtActor 	( *Array[8] 000003D5 )
	      Else
	         Call     PlaySoundAtActor 	( *Array[8] 000003D6 )
	      EndIf
	      Call     SetGoalToPos 	( *Array[8] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[8] 0000001E FFFFFFF6 .Easing:SinOut )
	      Call     GetActorPos 	( .Actor:Player *Var[4] *Var[5] *Var[6] )
	      If  *Var[1]  <  *Var[4] 
	         Call     SetActorAngle 	( *Array[8] 000000B4 )
	      EndIf
	   EndThread
	   Add  *Var[A]  00000001 
	   Wait     00000004 
	EndIf
	If  *Var[0]  &  00000004 
	   Call     UseIdleAnimation 	( *Array[2] .False )
	   Call     SetSpriteAlpha ( *Array[2] 00000001 000000FE )
	   Call     GetActorVar 	( *Array[2] 00000000 *Var[1] )
	   If  *Var[1]  ==  00000000 
	      Call     SetAnimation 	( *Array[2] 00000001 004C0009 )
	   Else
	      Call     SetAnimation 	( *Array[2] 00000001 004C000B )
	   EndIf
	   Thread
	      Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
	      MulF  *Var[B]  *Var[A] 
	      AddF  *Var[B]  *Fixed[100.0] 
	      Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[20.0] *Var[B] )
	      Call     RandInt     	( 00000014 *Var[4] )
	      Sub  *Var[4]  0000000A 
	      Add  *Var[4]  00000013 
	      Add  *Var[2]  *Var[4] 
	      Mod  *Var[A]  00000002 
	      If  *Var[A]  ==  00000000 
	         Call     PlaySoundAtActor 	( *Array[2] 000003D5 )
	      Else
	         Call     PlaySoundAtActor 	( *Array[2] 000003D6 )
	      EndIf
	      Call     SetGoalToPos 	( *Array[2] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[2] 0000001E FFFFFFF6 .Easing:SinOut )
	      Call     GetActorPos 	( .Actor:Player *Var[4] *Var[5] *Var[6] )
	      If  *Var[1]  <  *Var[4] 
	         Call     SetActorAngle 	( *Array[2] 000000B4 )
	      EndIf
	   EndThread
	   Add  *Var[A]  00000001 
	   Wait     00000004 
	EndIf
	If  *Var[0]  &  00000080 
	   Call     UseIdleAnimation 	( *Array[7] .False )
	   Call     SetSpriteAlpha ( *Array[7] 00000001 000000FE )
	   Call     GetActorVar 	( *Array[7] 00000000 *Var[1] )
	   If  *Var[1]  ==  00000000 
	      Call     SetAnimation 	( *Array[7] 00000001 004C0009 )
	   Else
	      Call     SetAnimation 	( *Array[7] 00000001 004C000B )
	   EndIf
	   Thread
	      Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
	      MulF  *Var[B]  *Var[A] 
	      AddF  *Var[B]  *Fixed[100.0] 
	      Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[20.0] *Var[B] )
	      Call     RandInt     	( 00000014 *Var[4] )
	      Sub  *Var[4]  0000000A 
	      Add  *Var[4]  00000013 
	      Add  *Var[2]  *Var[4] 
	      Mod  *Var[A]  00000002 
	      If  *Var[A]  ==  00000000 
	         Call     PlaySoundAtActor 	( *Array[7] 000003D5 )
	      Else
	         Call     PlaySoundAtActor 	( *Array[7] 000003D6 )
	      EndIf
	      Call     SetGoalToPos 	( *Array[7] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[7] 0000001E FFFFFFF6 .Easing:SinOut )
	      Call     GetActorPos 	( .Actor:Player *Var[4] *Var[5] *Var[6] )
	      If  *Var[1]  <  *Var[4] 
	         Call     SetActorAngle 	( *Array[7] 000000B4 )
	      EndIf
	   EndThread
	   Add  *Var[A]  00000001 
	   Wait     00000004 
	EndIf
	If  *Var[0]  &  00000040 
	   Call     UseIdleAnimation 	( *Array[6] .False )
	   Call     SetSpriteAlpha ( *Array[6] 00000001 000000FE )
	   Call     GetActorVar 	( *Array[6] 00000000 *Var[1] )
	   If  *Var[1]  ==  00000000 
	      Call     SetAnimation 	( *Array[6] 00000001 004C0009 )
	   Else
	      Call     SetAnimation 	( *Array[6] 00000001 004C000B )
	   EndIf
	   Thread
	      Call     GetActorPos 	( .Actor:Player *Var[1] *Var[2] *Var[3] )
	      MulF  *Var[B]  *Var[A] 
	      AddF  *Var[B]  *Fixed[100.0] 
	      Call     AddVectorPolar ( *Var[1] *Var[3] *Fixed[20.0] *Var[B] )
	      Call     RandInt     	( 00000014 *Var[4] )
	      Sub  *Var[4]  0000000A 
	      Add  *Var[4]  00000013 
	      Add  *Var[2]  *Var[4] 
	      Mod  *Var[A]  00000002 
	      If  *Var[A]  ==  00000000 
	         Call     PlaySoundAtActor 	( *Array[6] 000003D5 )
	      Else
	         Call     PlaySoundAtActor 	( *Array[6] 000003D6 )
	      EndIf
	      Call     SetGoalToPos 	( *Array[6] *Var[1] *Var[2] *Var[3] )
	      Call     MoveToGoal  	( *Array[6] 0000001E FFFFFFF6 .Easing:SinOut )
	      Call     GetActorPos 	( .Actor:Player *Var[4] *Var[5] *Var[6] )
	      If  *Var[1]  <  *Var[4] 
	         Call     SetActorAngle 	( *Array[6] 000000B4 )
	      EndIf
	   EndThread
	   Add  *Var[A]  00000001 
	   Wait     00000004 
	EndIf
	Wait     0000001E 
	Call     UseCamPreset 	( 00000001 )
	Set  *Var[9]  00000000 
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	If  *Var[0]  &  00000001 
	   Add  *Var[9]  00000001 
	EndIf
	If  *Var[0]  &  00000002 
	   Add  *Var[9]  00000001 
	EndIf
	If  *Var[0]  &  00000004 
	   Add  *Var[9]  00000001 
	EndIf
	If  *Var[0]  &  00000008 
	   Add  *Var[9]  00000001 
	EndIf
	If  *Var[0]  &  00000010 
	   Add  *Var[9]  00000001 
	EndIf
	If  *Var[0]  &  00000020 
	   Add  *Var[9]  00000001 
	EndIf
	If  *Var[0]  &  00000040 
	   Add  *Var[9]  00000001 
	EndIf
	If  *Var[0]  &  00000080 
	   Add  *Var[9]  00000001 
	EndIf
	If  *Var[0]  &  00000100 
	   Add  *Var[9]  00000001 
	EndIf
	If  *Var[0]  &  00000200 
	   Add  *Var[9]  00000001 
	EndIf
	Set  *Var[A]  0000001E 
	Sub  *Var[A]  *Var[9] 
	Set  *Var[3]  00000000 
	Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	If  *Var[0]  &  00000001 
	   Set  *Var[1]  *Array[0] 
	   Set  *Var[2]  *Var[A] 
	   Exec     $Script_80228004 *Array[A] 
	   Add  *Var[3]  00000001 
	EndIf
	If  *Var[0]  &  00000002 
	   Set  *Var[1]  *Array[1] 
	   Set  *Var[2]  *Var[A] 
	   Exec     $Script_80228004 *Array[B] 
	   Add  *Var[3]  00000001 
	EndIf
	If  *Var[0]  &  00000004 
	   Set  *Var[1]  *Array[2] 
	   Set  *Var[2]  *Var[A] 
	   Exec     $Script_80228004 *Array[C] 
	   Add  *Var[3]  00000001 
	EndIf
	If  *Var[0]  &  00000008 
	   Set  *Var[1]  *Array[3] 
	   Set  *Var[2]  *Var[A] 
	   Exec     $Script_80228004 *Array[D] 
	   Add  *Var[3]  00000001 
	EndIf
	If  *Var[0]  &  00000010 
	   Set  *Var[1]  *Array[4] 
	   Set  *Var[2]  *Var[A] 
	   Exec     $Script_80228004 *Array[E] 
	   Add  *Var[3]  00000001 
	EndIf
	If  *Var[0]  &  00000020 
	   Set  *Var[1]  *Array[5] 
	   Set  *Var[2]  *Var[A] 
	   Exec     $Script_80228004 *Array[F] 
	   Add  *Var[3]  00000001 
	EndIf
	If  *Var[0]  &  00000040 
	   Set  *Var[1]  *Array[6] 
	   Set  *Var[2]  *Var[A] 
	   Exec     $Script_80228004 *Array[10] 
	   Add  *Var[3]  00000001 
	EndIf
	If  *Var[0]  &  00000080 
	   Set  *Var[1]  *Array[7] 
	   Set  *Var[2]  *Var[A] 
	   Exec     $Script_80228004 *Array[11] 
	   Add  *Var[3]  00000001 
	EndIf
	If  *Var[0]  &  00000100 
	   Set  *Var[1]  *Array[8] 
	   Set  *Var[2]  *Var[A] 
	   Exec     $Script_80228004 *Array[12] 
	   Add  *Var[3]  00000001 
	EndIf
	If  *Var[0]  &  00000200 
	   Set  *Var[1]  *Array[9] 
	   Set  *Var[2]  *Var[A] 
	   Exec     $Script_80228004 *Array[13] 
	   Add  *Var[3]  00000001 
	EndIf
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Label    00000000 
	      Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	      If  *Var[0]  !&  00000004 
	         Wait     00000001 
	         Goto     00000000 
	      EndIf
	      Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	      ConstAND *Var[0] FFFFFFFB 
	      Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	      Call     UseCamPreset 	( 00000002 )
	      Call     MoveCamOver 	( 00000014 )
	      Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	      If  *Var[0]  &  00000001 
	         Kill     *Array[A] 
	         Call     GetActorVar 	( *Array[0] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[0] 00000001 004C0012 )
	         Else
	            Call     SetAnimation 	( *Array[0] 00000001 004C0013 )
	         EndIf
	         Thread
	            Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Call     GetActorPos 	( *Array[0] *Var[3] *Var[4] *Var[5] )
	            Call     $Function_80218AA0 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
	            DivF  *Var[6]  *Fixed[2.0] 
	            AddF  *Var[6]  *Fixed[90.0] 
	            Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
	            Call     SetActorJumpscale 	( *Array[0] *Fixed[1.0] )
	            Call     SetGoalToPos 	( *Array[0] *Var[0] *Var[1] *Var[2] )
	            Call     JumpToGoal  	( *Array[0] 00000014 00000000 00000000 00000000 )
	         EndThread
	      EndIf
	      If  *Var[0]  &  00000002 
	         Kill     *Array[B] 
	         Call     GetActorVar 	( *Array[1] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[1] 00000001 004C0012 )
	         Else
	            Call     SetAnimation 	( *Array[1] 00000001 004C0013 )
	         EndIf
	         Thread
	            Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Call     GetActorPos 	( *Array[1] *Var[3] *Var[4] *Var[5] )
	            Call     $Function_80218AA0 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
	            DivF  *Var[6]  *Fixed[2.0] 
	            AddF  *Var[6]  *Fixed[90.0] 
	            Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
	            Call     SetActorJumpscale 	( *Array[1] *Fixed[1.0] )
	            Call     SetGoalToPos 	( *Array[1] *Var[0] *Var[1] *Var[2] )
	            Call     JumpToGoal  	( *Array[1] 00000014 00000000 00000000 00000000 )
	         EndThread
	      EndIf
	      If  *Var[0]  &  00000004 
	         Kill     *Array[C] 
	         Call     GetActorVar 	( *Array[2] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[2] 00000001 004C0012 )
	         Else
	            Call     SetAnimation 	( *Array[2] 00000001 004C0013 )
	         EndIf
	         Thread
	            Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Call     GetActorPos 	( *Array[2] *Var[3] *Var[4] *Var[5] )
	            Call     $Function_80218AA0 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
	            DivF  *Var[6]  *Fixed[2.0] 
	            AddF  *Var[6]  *Fixed[90.0] 
	            Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
	            Call     SetActorJumpscale 	( *Array[2] *Fixed[1.0] )
	            Call     SetGoalToPos 	( *Array[2] *Var[0] *Var[1] *Var[2] )
	            Call     JumpToGoal  	( *Array[2] 00000014 00000000 00000000 00000000 )
	         EndThread
	      EndIf
	      If  *Var[0]  &  00000008 
	         Kill     *Array[D] 
	         Call     GetActorVar 	( *Array[3] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[3] 00000001 004C0012 )
	         Else
	            Call     SetAnimation 	( *Array[3] 00000001 004C0013 )
	         EndIf
	         Thread
	            Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Call     GetActorPos 	( *Array[3] *Var[3] *Var[4] *Var[5] )
	            Call     $Function_80218AA0 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
	            DivF  *Var[6]  *Fixed[2.0] 
	            AddF  *Var[6]  *Fixed[90.0] 
	            Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
	            Call     SetActorJumpscale 	( *Array[3] *Fixed[1.0] )
	            Call     SetGoalToPos 	( *Array[3] *Var[0] *Var[1] *Var[2] )
	            Call     JumpToGoal  	( *Array[3] 00000014 00000000 00000000 00000000 )
	         EndThread
	      EndIf
	      If  *Var[0]  &  00000010 
	         Kill     *Array[E] 
	         Call     GetActorVar 	( *Array[4] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[4] 00000001 004C0012 )
	         Else
	            Call     SetAnimation 	( *Array[4] 00000001 004C0013 )
	         EndIf
	         Thread
	            Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Call     GetActorPos 	( *Array[4] *Var[3] *Var[4] *Var[5] )
	            Call     $Function_80218AA0 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
	            DivF  *Var[6]  *Fixed[2.0] 
	            AddF  *Var[6]  *Fixed[90.0] 
	            Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
	            Call     SetActorJumpscale 	( *Array[4] *Fixed[1.0] )
	            Call     SetGoalToPos 	( *Array[4] *Var[0] *Var[1] *Var[2] )
	            Call     JumpToGoal  	( *Array[4] 00000014 00000000 00000000 00000000 )
	         EndThread
	      EndIf
	      If  *Var[0]  &  00000020 
	         Kill     *Array[F] 
	         Call     GetActorVar 	( *Array[5] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[5] 00000001 004C0012 )
	         Else
	            Call     SetAnimation 	( *Array[5] 00000001 004C0013 )
	         EndIf
	         Thread
	            Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Call     GetActorPos 	( *Array[5] *Var[3] *Var[4] *Var[5] )
	            Call     $Function_80218AA0 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
	            DivF  *Var[6]  *Fixed[2.0] 
	            AddF  *Var[6]  *Fixed[90.0] 
	            Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
	            Call     SetActorJumpscale 	( *Array[5] *Fixed[1.0] )
	            Call     SetGoalToPos 	( *Array[5] *Var[0] *Var[1] *Var[2] )
	            Call     JumpToGoal  	( *Array[5] 00000014 00000000 00000000 00000000 )
	         EndThread
	      EndIf
	      If  *Var[0]  &  00000040 
	         Kill     *Array[10] 
	         Call     GetActorVar 	( *Array[6] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[6] 00000001 004C0012 )
	         Else
	            Call     SetAnimation 	( *Array[6] 00000001 004C0013 )
	         EndIf
	         Thread
	            Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Call     GetActorPos 	( *Array[6] *Var[3] *Var[4] *Var[5] )
	            Call     $Function_80218AA0 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
	            DivF  *Var[6]  *Fixed[2.0] 
	            AddF  *Var[6]  *Fixed[90.0] 
	            Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
	            Call     SetActorJumpscale 	( *Array[6] *Fixed[1.0] )
	            Call     SetGoalToPos 	( *Array[6] *Var[0] *Var[1] *Var[2] )
	            Call     JumpToGoal  	( *Array[6] 00000014 00000000 00000000 00000000 )
	         EndThread
	      EndIf
	      If  *Var[0]  &  00000080 
	         Kill     *Array[11] 
	         Call     GetActorVar 	( *Array[7] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[7] 00000001 004C0012 )
	         Else
	            Call     SetAnimation 	( *Array[7] 00000001 004C0013 )
	         EndIf
	         Thread
	            Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Call     GetActorPos 	( *Array[7] *Var[3] *Var[4] *Var[5] )
	            Call     $Function_80218AA0 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
	            DivF  *Var[6]  *Fixed[2.0] 
	            AddF  *Var[6]  *Fixed[90.0] 
	            Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
	            Call     SetActorJumpscale 	( *Array[7] *Fixed[1.0] )
	            Call     SetGoalToPos 	( *Array[7] *Var[0] *Var[1] *Var[2] )
	            Call     JumpToGoal  	( *Array[7] 00000014 00000000 00000000 00000000 )
	         EndThread
	      EndIf
	      If  *Var[0]  &  00000100 
	         Kill     *Array[12] 
	         Call     GetActorVar 	( *Array[8] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[8] 00000001 004C0012 )
	         Else
	            Call     SetAnimation 	( *Array[8] 00000001 004C0013 )
	         EndIf
	         Thread
	            Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Call     GetActorPos 	( *Array[8] *Var[3] *Var[4] *Var[5] )
	            Call     $Function_80218AA0 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
	            DivF  *Var[6]  *Fixed[2.0] 
	            AddF  *Var[6]  *Fixed[90.0] 
	            Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
	            Call     SetActorJumpscale 	( *Array[8] *Fixed[1.0] )
	            Call     SetGoalToPos 	( *Array[8] *Var[0] *Var[1] *Var[2] )
	            Call     JumpToGoal  	( *Array[8] 00000014 00000000 00000000 00000000 )
	         EndThread
	      EndIf
	      If  *Var[0]  &  00000200 
	         Kill     *Array[13] 
	         Call     GetActorVar 	( *Array[9] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[9] 00000001 004C0012 )
	         Else
	            Call     SetAnimation 	( *Array[9] 00000001 004C0013 )
	         EndIf
	         Thread
	            Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Call     GetActorPos 	( *Array[9] *Var[3] *Var[4] *Var[5] )
	            Call     $Function_80218AA0 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
	            DivF  *Var[6]  *Fixed[2.0] 
	            AddF  *Var[6]  *Fixed[90.0] 
	            Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
	            Call     SetActorJumpscale 	( *Array[9] *Fixed[1.0] )
	            Call     SetGoalToPos 	( *Array[9] *Var[0] *Var[1] *Var[2] )
	            Call     JumpToGoal  	( *Array[9] 00000014 00000000 00000000 00000000 )
	         EndThread
	      EndIf
	      Wait     0000000F 
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Wait     00000014 
	      Set  *Var[A]  00000000 
	      Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	      If  *Var[0]  &  00000010 
	         Call     GetActorVar 	( *Array[4] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[4] 00000001 004C0006 )
	         Else
	            Call     SetAnimation 	( *Array[4] 00000001 004C0007 )
	         EndIf
	         Thread
	            Call     SetActorVar 	( *Array[4] 00000002 00000000 )
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[4] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[4] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[4] )
	            Call     MoveToGoal  	( *Array[4] 0000001E 0000000A .Easing:SinOut )
	            Call     SetSpriteAlpha ( *Array[4] 00000001 000000FF )
	            Call     SetActorAngle 	( *Array[4] 00000000 )
	            Call     GetActorVar 	( *Array[4] 00000000 *Var[1] )
	            If  *Var[1]  ==  00000000 
	               Call     SetAnimation 	( *Array[4] 00000001 004C0002 )
	            Else
	               Call     SetAnimation 	( *Array[4] 00000001 004C0003 )
	            EndIf
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000004 
	      EndIf
	      If  *Var[0]  &  00000200 
	         Call     GetActorVar 	( *Array[9] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[9] 00000001 004C0006 )
	         Else
	            Call     SetAnimation 	( *Array[9] 00000001 004C0007 )
	         EndIf
	         Thread
	            Call     SetActorVar 	( *Array[9] 00000002 00000000 )
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[9] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[9] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[9] )
	            Call     MoveToGoal  	( *Array[9] 0000001E 0000000A .Easing:SinOut )
	            Call     SetSpriteAlpha ( *Array[9] 00000001 000000FF )
	            Call     SetActorAngle 	( *Array[9] 00000000 )
	            Call     GetActorVar 	( *Array[9] 00000000 *Var[1] )
	            If  *Var[1]  ==  00000000 
	               Call     SetAnimation 	( *Array[9] 00000001 004C0002 )
	            Else
	               Call     SetAnimation 	( *Array[9] 00000001 004C0003 )
	            EndIf
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000004 
	      EndIf
	      If  *Var[0]  &  00000008 
	         Call     GetActorVar 	( *Array[3] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[3] 00000001 004C0006 )
	         Else
	            Call     SetAnimation 	( *Array[3] 00000001 004C0007 )
	         EndIf
	         Thread
	            Call     SetActorVar 	( *Array[3] 00000002 00000000 )
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[3] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[3] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[3] )
	            Call     MoveToGoal  	( *Array[3] 0000001E 0000000A .Easing:SinOut )
	            Call     SetSpriteAlpha ( *Array[3] 00000001 000000FF )
	            Call     SetActorAngle 	( *Array[3] 00000000 )
	            Call     GetActorVar 	( *Array[3] 00000000 *Var[1] )
	            If  *Var[1]  ==  00000000 
	               Call     SetAnimation 	( *Array[3] 00000001 004C0002 )
	            Else
	               Call     SetAnimation 	( *Array[3] 00000001 004C0003 )
	            EndIf
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000004 
	      EndIf
	      If  *Var[0]  &  00000020 
	         Call     GetActorVar 	( *Array[5] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[5] 00000001 004C0006 )
	         Else
	            Call     SetAnimation 	( *Array[5] 00000001 004C0007 )
	         EndIf
	         Thread
	            Call     SetActorVar 	( *Array[5] 00000002 00000000 )
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[5] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[5] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[5] )
	            Call     MoveToGoal  	( *Array[5] 0000001E 0000000A .Easing:SinOut )
	            Call     SetSpriteAlpha ( *Array[5] 00000001 000000FF )
	            Call     SetActorAngle 	( *Array[5] 00000000 )
	            Call     GetActorVar 	( *Array[5] 00000000 *Var[1] )
	            If  *Var[1]  ==  00000000 
	               Call     SetAnimation 	( *Array[5] 00000001 004C0002 )
	            Else
	               Call     SetAnimation 	( *Array[5] 00000001 004C0003 )
	            EndIf
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000004 
	      EndIf
	      If  *Var[0]  &  00000002 
	         Call     GetActorVar 	( *Array[1] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[1] 00000001 004C0006 )
	         Else
	            Call     SetAnimation 	( *Array[1] 00000001 004C0007 )
	         EndIf
	         Thread
	            Call     SetActorVar 	( *Array[1] 00000002 00000000 )
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[1] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[1] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[1] )
	            Call     MoveToGoal  	( *Array[1] 0000001E 0000000A .Easing:SinOut )
	            Call     SetSpriteAlpha ( *Array[1] 00000001 000000FF )
	            Call     SetActorAngle 	( *Array[1] 00000000 )
	            Call     GetActorVar 	( *Array[1] 00000000 *Var[1] )
	            If  *Var[1]  ==  00000000 
	               Call     SetAnimation 	( *Array[1] 00000001 004C0002 )
	            Else
	               Call     SetAnimation 	( *Array[1] 00000001 004C0003 )
	            EndIf
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000004 
	      EndIf
	      If  *Var[0]  &  00000001 
	         Call     GetActorVar 	( *Array[0] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[0] 00000001 004C0006 )
	         Else
	            Call     SetAnimation 	( *Array[0] 00000001 004C0007 )
	         EndIf
	         Thread
	            Call     SetActorVar 	( *Array[0] 00000002 00000000 )
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[0] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[0] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[0] )
	            Call     MoveToGoal  	( *Array[0] 0000001E 0000000A .Easing:SinOut )
	            Call     SetSpriteAlpha ( *Array[0] 00000001 000000FF )
	            Call     SetActorAngle 	( *Array[0] 00000000 )
	            Call     GetActorVar 	( *Array[0] 00000000 *Var[1] )
	            If  *Var[1]  ==  00000000 
	               Call     SetAnimation 	( *Array[0] 00000001 004C0002 )
	            Else
	               Call     SetAnimation 	( *Array[0] 00000001 004C0003 )
	            EndIf
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000004 
	      EndIf
	      If  *Var[0]  &  00000100 
	         Call     GetActorVar 	( *Array[8] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[8] 00000001 004C0006 )
	         Else
	            Call     SetAnimation 	( *Array[8] 00000001 004C0007 )
	         EndIf
	         Thread
	            Call     SetActorVar 	( *Array[8] 00000002 00000000 )
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[8] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[8] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[8] )
	            Call     MoveToGoal  	( *Array[8] 0000001E 0000000A .Easing:SinOut )
	            Call     SetSpriteAlpha ( *Array[8] 00000001 000000FF )
	            Call     SetActorAngle 	( *Array[8] 00000000 )
	            Call     GetActorVar 	( *Array[8] 00000000 *Var[1] )
	            If  *Var[1]  ==  00000000 
	               Call     SetAnimation 	( *Array[8] 00000001 004C0002 )
	            Else
	               Call     SetAnimation 	( *Array[8] 00000001 004C0003 )
	            EndIf
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000004 
	      EndIf
	      If  *Var[0]  &  00000004 
	         Call     GetActorVar 	( *Array[2] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[2] 00000001 004C0006 )
	         Else
	            Call     SetAnimation 	( *Array[2] 00000001 004C0007 )
	         EndIf
	         Thread
	            Call     SetActorVar 	( *Array[2] 00000002 00000000 )
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[2] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[2] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[2] )
	            Call     MoveToGoal  	( *Array[2] 0000001E 0000000A .Easing:SinOut )
	            Call     SetSpriteAlpha ( *Array[2] 00000001 000000FF )
	            Call     SetActorAngle 	( *Array[2] 00000000 )
	            Call     GetActorVar 	( *Array[2] 00000000 *Var[1] )
	            If  *Var[1]  ==  00000000 
	               Call     SetAnimation 	( *Array[2] 00000001 004C0002 )
	            Else
	               Call     SetAnimation 	( *Array[2] 00000001 004C0003 )
	            EndIf
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000004 
	      EndIf
	      If  *Var[0]  &  00000080 
	         Call     GetActorVar 	( *Array[7] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[7] 00000001 004C0006 )
	         Else
	            Call     SetAnimation 	( *Array[7] 00000001 004C0007 )
	         EndIf
	         Thread
	            Call     SetActorVar 	( *Array[7] 00000002 00000000 )
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[7] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[7] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[7] )
	            Call     MoveToGoal  	( *Array[7] 0000001E 0000000A .Easing:SinOut )
	            Call     SetSpriteAlpha ( *Array[7] 00000001 000000FF )
	            Call     SetActorAngle 	( *Array[7] 00000000 )
	            Call     GetActorVar 	( *Array[7] 00000000 *Var[1] )
	            If  *Var[1]  ==  00000000 
	               Call     SetAnimation 	( *Array[7] 00000001 004C0002 )
	            Else
	               Call     SetAnimation 	( *Array[7] 00000001 004C0003 )
	            EndIf
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000004 
	      EndIf
	      If  *Var[0]  &  00000040 
	         Call     GetActorVar 	( *Array[6] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[6] 00000001 004C0006 )
	         Else
	            Call     SetAnimation 	( *Array[6] 00000001 004C0007 )
	         EndIf
	         Thread
	            Call     SetActorVar 	( *Array[6] 00000002 00000000 )
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[6] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[6] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[6] )
	            Call     MoveToGoal  	( *Array[6] 0000001E 0000000A .Easing:SinOut )
	            Call     SetSpriteAlpha ( *Array[6] 00000001 000000FF )
	            Call     SetActorAngle 	( *Array[6] 00000000 )
	            Call     GetActorVar 	( *Array[6] 00000000 *Var[1] )
	            If  *Var[1]  ==  00000000 
	               Call     SetAnimation 	( *Array[6] 00000001 004C0002 )
	            Else
	               Call     SetAnimation 	( *Array[6] 00000001 004C0003 )
	            EndIf
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000004 
	      EndIf
	      Wait     00000032 
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     GetStatusFlags ( .Actor:Player *Var[1] )
	If  *Var[1]  &  00100000 
	   Wait     0000000A 
	   Set  *Var[3]  00000000 
	   Loop     
	      Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	      If  *Var[0]  &  00000004 
	         Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	         ConstAND *Var[0] FFFFFFFB 
	         Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	         Wait     00000002 
	         Call     SetTargetActor ( .Actor:Self .Actor:Player )
	         Call     SetGoalToTarget 	( .Actor:Self )
	         Call     DamageTarget 	( .Actor:Self *Var[A] 18000000 00000000 00000000 00000001 00000040 )
	         Add  *Var[3]  00000001 
	      EndIf
	      If  *Var[3]  >  00000001 
	         BreakLoop
	      EndIf
	      Wait     00000001 
	   EndLoop
	Else
	   Call     ShowMessageBox ( 00000031 000000B4 )
	   Call     802694A4 ( 00000001 )
	   Call     LoadActionCommand 	( 00000006 )
	   Call     802A9000 ( )
	   Call     802691C8 ( 00000001 00000019 00000000 00000000 00000000 00000000 )
	   Wait     0000000A 
	   Call     SetBattleFlagBits 	( 00004000 .False )
	   Call     802A9110 ( 00000000 00007FFF 00000003 )
	   Set  *Var[B]  *Var[A] 
	   Div  *Var[B]  00000002 
	   Wait     *Var[B] 
	   Set  *Var[D]  00000000 
	   Loop     
	      Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	      If  *Var[0]  &  00000004 
	         Call     GetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	         ConstAND *Var[0] FFFFFFFB 
	         Call     SetActorVar 	( .Actor:Enemy0 00000000 *Var[0] )
	         Wait     00000002 
	         Call     SetTargetActor ( .Actor:Self .Actor:Player )
	         Call     SetGoalToTarget 	( .Actor:Self )
	         Call     DamageTarget 	( .Actor:Self *Var[A] 1A000000 00000000 00000000 00000002 00000040 )
	         Add  *Var[D]  00000001 
	      EndIf
	      Call     802694F8 ( *Var[0] )
	      If  *Var[0]  ==  00000001 
	         BreakLoop
	      EndIf
	      Call     GetLastDamage 	( .Actor:Player *Var[0] )
	      If  *Var[0]  ==  00000000 
	         If  *Var[D]  >  00000001 
	            Call     80269470 ( )
	            BreakLoop
	         EndIf
	      EndIf
	      Call     GetPlayerHP 	( *Var[0] )
	      If  *Var[0]  ==  00000000 
	         Call     80269470 ( )
	         BreakLoop
	      EndIf
	      If  *Var[D]  >=  00000014 
	         Call     80269470 ( )
	         BreakLoop
	      EndIf
	      Wait     00000001 
	   EndLoop
	   Call     80269470 ( )
	EndIf
	Switch  *Var[A] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000001 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Call     MoveCamOver 	( 00000014 )
	      Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	      If  *Var[0]  &  00000001 
	         Kill     *Array[A] 
	         Call     GetActorVar 	( *Array[0] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[0] 00000001 004C0012 )
	         Else
	            Call     SetAnimation 	( *Array[0] 00000001 004C0013 )
	         EndIf
	         Thread
	            Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Call     GetActorPos 	( *Array[0] *Var[3] *Var[4] *Var[5] )
	            Call     $Function_80218AA0 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
	            DivF  *Var[6]  *Fixed[2.0] 
	            AddF  *Var[6]  *Fixed[90.0] 
	            Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
	            Call     SetActorJumpscale 	( *Array[0] *Fixed[1.0] )
	            Call     SetGoalToPos 	( *Array[0] *Var[0] *Var[1] *Var[2] )
	            Call     JumpToGoal  	( *Array[0] 00000014 00000000 00000000 00000000 )
	         EndThread
	      EndIf
	      If  *Var[0]  &  00000002 
	         Kill     *Array[B] 
	         Call     GetActorVar 	( *Array[1] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[1] 00000001 004C0012 )
	         Else
	            Call     SetAnimation 	( *Array[1] 00000001 004C0013 )
	         EndIf
	         Thread
	            Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Call     GetActorPos 	( *Array[1] *Var[3] *Var[4] *Var[5] )
	            Call     $Function_80218AA0 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
	            DivF  *Var[6]  *Fixed[2.0] 
	            AddF  *Var[6]  *Fixed[90.0] 
	            Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
	            Call     SetActorJumpscale 	( *Array[1] *Fixed[1.0] )
	            Call     SetGoalToPos 	( *Array[1] *Var[0] *Var[1] *Var[2] )
	            Call     JumpToGoal  	( *Array[1] 00000014 00000000 00000000 00000000 )
	         EndThread
	      EndIf
	      If  *Var[0]  &  00000004 
	         Kill     *Array[C] 
	         Call     GetActorVar 	( *Array[2] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[2] 00000001 004C0012 )
	         Else
	            Call     SetAnimation 	( *Array[2] 00000001 004C0013 )
	         EndIf
	         Thread
	            Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Call     GetActorPos 	( *Array[2] *Var[3] *Var[4] *Var[5] )
	            Call     $Function_80218AA0 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
	            DivF  *Var[6]  *Fixed[2.0] 
	            AddF  *Var[6]  *Fixed[90.0] 
	            Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
	            Call     SetActorJumpscale 	( *Array[2] *Fixed[1.0] )
	            Call     SetGoalToPos 	( *Array[2] *Var[0] *Var[1] *Var[2] )
	            Call     JumpToGoal  	( *Array[2] 00000014 00000000 00000000 00000000 )
	         EndThread
	      EndIf
	      If  *Var[0]  &  00000008 
	         Kill     *Array[D] 
	         Call     GetActorVar 	( *Array[3] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[3] 00000001 004C0012 )
	         Else
	            Call     SetAnimation 	( *Array[3] 00000001 004C0013 )
	         EndIf
	         Thread
	            Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Call     GetActorPos 	( *Array[3] *Var[3] *Var[4] *Var[5] )
	            Call     $Function_80218AA0 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
	            DivF  *Var[6]  *Fixed[2.0] 
	            AddF  *Var[6]  *Fixed[90.0] 
	            Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
	            Call     SetActorJumpscale 	( *Array[3] *Fixed[1.0] )
	            Call     SetGoalToPos 	( *Array[3] *Var[0] *Var[1] *Var[2] )
	            Call     JumpToGoal  	( *Array[3] 00000014 00000000 00000000 00000000 )
	         EndThread
	      EndIf
	      If  *Var[0]  &  00000010 
	         Kill     *Array[E] 
	         Call     GetActorVar 	( *Array[4] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[4] 00000001 004C0012 )
	         Else
	            Call     SetAnimation 	( *Array[4] 00000001 004C0013 )
	         EndIf
	         Thread
	            Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Call     GetActorPos 	( *Array[4] *Var[3] *Var[4] *Var[5] )
	            Call     $Function_80218AA0 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
	            DivF  *Var[6]  *Fixed[2.0] 
	            AddF  *Var[6]  *Fixed[90.0] 
	            Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
	            Call     SetActorJumpscale 	( *Array[4] *Fixed[1.0] )
	            Call     SetGoalToPos 	( *Array[4] *Var[0] *Var[1] *Var[2] )
	            Call     JumpToGoal  	( *Array[4] 00000014 00000000 00000000 00000000 )
	         EndThread
	      EndIf
	      If  *Var[0]  &  00000020 
	         Kill     *Array[F] 
	         Call     GetActorVar 	( *Array[5] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[5] 00000001 004C0012 )
	         Else
	            Call     SetAnimation 	( *Array[5] 00000001 004C0013 )
	         EndIf
	         Thread
	            Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Call     GetActorPos 	( *Array[5] *Var[3] *Var[4] *Var[5] )
	            Call     $Function_80218AA0 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
	            DivF  *Var[6]  *Fixed[2.0] 
	            AddF  *Var[6]  *Fixed[90.0] 
	            Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
	            Call     SetActorJumpscale 	( *Array[5] *Fixed[1.0] )
	            Call     SetGoalToPos 	( *Array[5] *Var[0] *Var[1] *Var[2] )
	            Call     JumpToGoal  	( *Array[5] 00000014 00000000 00000000 00000000 )
	         EndThread
	      EndIf
	      If  *Var[0]  &  00000040 
	         Kill     *Array[10] 
	         Call     GetActorVar 	( *Array[6] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[6] 00000001 004C0012 )
	         Else
	            Call     SetAnimation 	( *Array[6] 00000001 004C0013 )
	         EndIf
	         Thread
	            Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Call     GetActorPos 	( *Array[6] *Var[3] *Var[4] *Var[5] )
	            Call     $Function_80218AA0 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
	            DivF  *Var[6]  *Fixed[2.0] 
	            AddF  *Var[6]  *Fixed[90.0] 
	            Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
	            Call     SetActorJumpscale 	( *Array[6] *Fixed[1.0] )
	            Call     SetGoalToPos 	( *Array[6] *Var[0] *Var[1] *Var[2] )
	            Call     JumpToGoal  	( *Array[6] 00000014 00000000 00000000 00000000 )
	         EndThread
	      EndIf
	      If  *Var[0]  &  00000080 
	         Kill     *Array[11] 
	         Call     GetActorVar 	( *Array[7] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[7] 00000001 004C0012 )
	         Else
	            Call     SetAnimation 	( *Array[7] 00000001 004C0013 )
	         EndIf
	         Thread
	            Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Call     GetActorPos 	( *Array[7] *Var[3] *Var[4] *Var[5] )
	            Call     $Function_80218AA0 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
	            DivF  *Var[6]  *Fixed[2.0] 
	            AddF  *Var[6]  *Fixed[90.0] 
	            Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
	            Call     SetActorJumpscale 	( *Array[7] *Fixed[1.0] )
	            Call     SetGoalToPos 	( *Array[7] *Var[0] *Var[1] *Var[2] )
	            Call     JumpToGoal  	( *Array[7] 00000014 00000000 00000000 00000000 )
	         EndThread
	      EndIf
	      If  *Var[0]  &  00000100 
	         Kill     *Array[12] 
	         Call     GetActorVar 	( *Array[8] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[8] 00000001 004C0012 )
	         Else
	            Call     SetAnimation 	( *Array[8] 00000001 004C0013 )
	         EndIf
	         Thread
	            Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Call     GetActorPos 	( *Array[8] *Var[3] *Var[4] *Var[5] )
	            Call     $Function_80218AA0 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
	            DivF  *Var[6]  *Fixed[2.0] 
	            AddF  *Var[6]  *Fixed[90.0] 
	            Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
	            Call     SetActorJumpscale 	( *Array[8] *Fixed[1.0] )
	            Call     SetGoalToPos 	( *Array[8] *Var[0] *Var[1] *Var[2] )
	            Call     JumpToGoal  	( *Array[8] 00000014 00000000 00000000 00000000 )
	         EndThread
	      EndIf
	      If  *Var[0]  &  00000200 
	         Kill     *Array[13] 
	         Call     GetActorVar 	( *Array[9] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[9] 00000001 004C0012 )
	         Else
	            Call     SetAnimation 	( *Array[9] 00000001 004C0013 )
	         EndIf
	         Thread
	            Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Call     GetActorPos 	( *Array[9] *Var[3] *Var[4] *Var[5] )
	            Call     $Function_80218AA0 ( *Var[6] *Var[0] *Var[2] *Var[3] *Var[5] )
	            DivF  *Var[6]  *Fixed[2.0] 
	            AddF  *Var[6]  *Fixed[90.0] 
	            Call     AddVectorPolar ( *Var[0] *Var[1] *Fixed[70.0] *Var[6] )
	            Call     SetActorJumpscale 	( *Array[9] *Fixed[1.0] )
	            Call     SetGoalToPos 	( *Array[9] *Var[0] *Var[1] *Var[2] )
	            Call     JumpToGoal  	( *Array[9] 00000014 00000000 00000000 00000000 )
	         EndThread
	      EndIf
	      Call     GetPlayerHP 	( *Var[0] )
	      If  *Var[0]  !=  00000000 
	         Call     UseIdleAnimation 	( .Actor:Player .False )
	         Wait     00000001 
	         Call     GetStatusFlags ( .Actor:Player *Var[0] )
	         If  *Var[0]  !&  00100000 
	            Thread
	               Set  *Var[0]  00000000 
	               Loop     00000014 
	                  Add  *Var[0]  00000036 
	                  Mod  *Var[0]  00000168 
	                  Call     SetActorAngle 	( .Actor:Player *Var[0] )
	                  Wait     00000001 
	               EndLoop
	               Call     SetActorAngle 	( .Actor:Player 00000000 )
	            EndThread
	            Call     SetJumpAnimations 	( .Actor:Player 00000000 00010007 00010007 00010009 )
	            Call     SetActorJumpscale 	( .Actor:Player *Fixed[1.5] )
	            Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Call     SetGoalToPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	            Call     80273444 ( 00000014 00000000 00000001 )
	         Else
	            Wait     00000014 
	         EndIf
	         Call     UseIdleAnimation 	( .Actor:Player .True )
	      Else
	         Wait     00000014 
	      EndIf
	      Wait     0000000F 
	      Set  *Var[A]  00000000 
	      Call     GetActorVar 	( .Actor:Self 00000002 *Var[0] )
	      If  *Var[0]  &  00000010 
	         Call     GetActorVar 	( *Array[4] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[4] 00000001 004C0006 )
	         Else
	            Call     SetAnimation 	( *Array[4] 00000001 004C0007 )
	         EndIf
	         Thread
	            Call     SetActorVar 	( *Array[4] 00000002 00000000 )
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[4] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[4] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[4] )
	            Call     MoveToGoal  	( *Array[4] 0000001E 0000000A .Easing:SinOut )
	            Call     SetSpriteAlpha ( *Array[4] 00000001 000000FF )
	            Call     SetActorAngle 	( *Array[4] 00000000 )
	            Call     GetActorVar 	( *Array[4] 00000000 *Var[1] )
	            If  *Var[1]  ==  00000000 
	               Call     SetAnimation 	( *Array[4] 00000001 004C0002 )
	            Else
	               Call     SetAnimation 	( *Array[4] 00000001 004C0003 )
	            EndIf
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000004 
	      EndIf
	      If  *Var[0]  &  00000200 
	         Call     GetActorVar 	( *Array[9] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[9] 00000001 004C0006 )
	         Else
	            Call     SetAnimation 	( *Array[9] 00000001 004C0007 )
	         EndIf
	         Thread
	            Call     SetActorVar 	( *Array[9] 00000002 00000000 )
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[9] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[9] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[9] )
	            Call     MoveToGoal  	( *Array[9] 0000001E 0000000A .Easing:SinOut )
	            Call     SetSpriteAlpha ( *Array[9] 00000001 000000FF )
	            Call     SetActorAngle 	( *Array[9] 00000000 )
	            Call     GetActorVar 	( *Array[9] 00000000 *Var[1] )
	            If  *Var[1]  ==  00000000 
	               Call     SetAnimation 	( *Array[9] 00000001 004C0002 )
	            Else
	               Call     SetAnimation 	( *Array[9] 00000001 004C0003 )
	            EndIf
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000004 
	      EndIf
	      If  *Var[0]  &  00000008 
	         Call     GetActorVar 	( *Array[3] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[3] 00000001 004C0006 )
	         Else
	            Call     SetAnimation 	( *Array[3] 00000001 004C0007 )
	         EndIf
	         Thread
	            Call     SetActorVar 	( *Array[3] 00000002 00000000 )
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[3] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[3] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[3] )
	            Call     MoveToGoal  	( *Array[3] 0000001E 0000000A .Easing:SinOut )
	            Call     SetSpriteAlpha ( *Array[3] 00000001 000000FF )
	            Call     SetActorAngle 	( *Array[3] 00000000 )
	            Call     GetActorVar 	( *Array[3] 00000000 *Var[1] )
	            If  *Var[1]  ==  00000000 
	               Call     SetAnimation 	( *Array[3] 00000001 004C0002 )
	            Else
	               Call     SetAnimation 	( *Array[3] 00000001 004C0003 )
	            EndIf
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000004 
	      EndIf
	      If  *Var[0]  &  00000020 
	         Call     GetActorVar 	( *Array[5] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[5] 00000001 004C0006 )
	         Else
	            Call     SetAnimation 	( *Array[5] 00000001 004C0007 )
	         EndIf
	         Thread
	            Call     SetActorVar 	( *Array[5] 00000002 00000000 )
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[5] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[5] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[5] )
	            Call     MoveToGoal  	( *Array[5] 0000001E 0000000A .Easing:SinOut )
	            Call     SetSpriteAlpha ( *Array[5] 00000001 000000FF )
	            Call     SetActorAngle 	( *Array[5] 00000000 )
	            Call     GetActorVar 	( *Array[5] 00000000 *Var[1] )
	            If  *Var[1]  ==  00000000 
	               Call     SetAnimation 	( *Array[5] 00000001 004C0002 )
	            Else
	               Call     SetAnimation 	( *Array[5] 00000001 004C0003 )
	            EndIf
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000004 
	      EndIf
	      If  *Var[0]  &  00000002 
	         Call     GetActorVar 	( *Array[1] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[1] 00000001 004C0006 )
	         Else
	            Call     SetAnimation 	( *Array[1] 00000001 004C0007 )
	         EndIf
	         Thread
	            Call     SetActorVar 	( *Array[1] 00000002 00000000 )
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[1] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[1] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[1] )
	            Call     MoveToGoal  	( *Array[1] 0000001E 0000000A .Easing:SinOut )
	            Call     SetSpriteAlpha ( *Array[1] 00000001 000000FF )
	            Call     SetActorAngle 	( *Array[1] 00000000 )
	            Call     GetActorVar 	( *Array[1] 00000000 *Var[1] )
	            If  *Var[1]  ==  00000000 
	               Call     SetAnimation 	( *Array[1] 00000001 004C0002 )
	            Else
	               Call     SetAnimation 	( *Array[1] 00000001 004C0003 )
	            EndIf
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000004 
	      EndIf
	      If  *Var[0]  &  00000001 
	         Call     GetActorVar 	( *Array[0] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[0] 00000001 004C0006 )
	         Else
	            Call     SetAnimation 	( *Array[0] 00000001 004C0007 )
	         EndIf
	         Thread
	            Call     SetActorVar 	( *Array[0] 00000002 00000000 )
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[0] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[0] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[0] )
	            Call     MoveToGoal  	( *Array[0] 0000001E 0000000A .Easing:SinOut )
	            Call     SetSpriteAlpha ( *Array[0] 00000001 000000FF )
	            Call     SetActorAngle 	( *Array[0] 00000000 )
	            Call     GetActorVar 	( *Array[0] 00000000 *Var[1] )
	            If  *Var[1]  ==  00000000 
	               Call     SetAnimation 	( *Array[0] 00000001 004C0002 )
	            Else
	               Call     SetAnimation 	( *Array[0] 00000001 004C0003 )
	            EndIf
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000004 
	      EndIf
	      If  *Var[0]  &  00000100 
	         Call     GetActorVar 	( *Array[8] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[8] 00000001 004C0006 )
	         Else
	            Call     SetAnimation 	( *Array[8] 00000001 004C0007 )
	         EndIf
	         Thread
	            Call     SetActorVar 	( *Array[8] 00000002 00000000 )
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[8] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[8] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[8] )
	            Call     MoveToGoal  	( *Array[8] 0000001E 0000000A .Easing:SinOut )
	            Call     SetSpriteAlpha ( *Array[8] 00000001 000000FF )
	            Call     SetActorAngle 	( *Array[8] 00000000 )
	            Call     GetActorVar 	( *Array[8] 00000000 *Var[1] )
	            If  *Var[1]  ==  00000000 
	               Call     SetAnimation 	( *Array[8] 00000001 004C0002 )
	            Else
	               Call     SetAnimation 	( *Array[8] 00000001 004C0003 )
	            EndIf
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000004 
	      EndIf
	      If  *Var[0]  &  00000004 
	         Call     GetActorVar 	( *Array[2] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[2] 00000001 004C0006 )
	         Else
	            Call     SetAnimation 	( *Array[2] 00000001 004C0007 )
	         EndIf
	         Thread
	            Call     SetActorVar 	( *Array[2] 00000002 00000000 )
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[2] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[2] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[2] )
	            Call     MoveToGoal  	( *Array[2] 0000001E 0000000A .Easing:SinOut )
	            Call     SetSpriteAlpha ( *Array[2] 00000001 000000FF )
	            Call     SetActorAngle 	( *Array[2] 00000000 )
	            Call     GetActorVar 	( *Array[2] 00000000 *Var[1] )
	            If  *Var[1]  ==  00000000 
	               Call     SetAnimation 	( *Array[2] 00000001 004C0002 )
	            Else
	               Call     SetAnimation 	( *Array[2] 00000001 004C0003 )
	            EndIf
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000004 
	      EndIf
	      If  *Var[0]  &  00000080 
	         Call     GetActorVar 	( *Array[7] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[7] 00000001 004C0006 )
	         Else
	            Call     SetAnimation 	( *Array[7] 00000001 004C0007 )
	         EndIf
	         Thread
	            Call     SetActorVar 	( *Array[7] 00000002 00000000 )
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[7] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[7] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[7] )
	            Call     MoveToGoal  	( *Array[7] 0000001E 0000000A .Easing:SinOut )
	            Call     SetSpriteAlpha ( *Array[7] 00000001 000000FF )
	            Call     SetActorAngle 	( *Array[7] 00000000 )
	            Call     GetActorVar 	( *Array[7] 00000000 *Var[1] )
	            If  *Var[1]  ==  00000000 
	               Call     SetAnimation 	( *Array[7] 00000001 004C0002 )
	            Else
	               Call     SetAnimation 	( *Array[7] 00000001 004C0003 )
	            EndIf
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000004 
	      EndIf
	      If  *Var[0]  &  00000040 
	         Call     GetActorVar 	( *Array[6] 00000000 *Var[1] )
	         If  *Var[1]  ==  00000000 
	            Call     SetAnimation 	( *Array[6] 00000001 004C0006 )
	         Else
	            Call     SetAnimation 	( *Array[6] 00000001 004C0007 )
	         EndIf
	         Thread
	            Call     SetActorVar 	( *Array[6] 00000002 00000000 )
	            Mod  *Var[A]  00000002 
	            If  *Var[A]  ==  00000000 
	               Call     PlaySoundAtActor 	( *Array[6] 000003D5 )
	            Else
	               Call     PlaySoundAtActor 	( *Array[6] 000003D6 )
	            EndIf
	            Call     SetGoalToHome 	( *Array[6] )
	            Call     MoveToGoal  	( *Array[6] 0000001E 0000000A .Easing:SinOut )
	            Call     SetSpriteAlpha ( *Array[6] 00000001 000000FF )
	            Call     SetActorAngle 	( *Array[6] 00000000 )
	            Call     GetActorVar 	( *Array[6] 00000000 *Var[1] )
	            If  *Var[1]  ==  00000000 
	               Call     SetAnimation 	( *Array[6] 00000001 004C0002 )
	            Else
	               Call     SetAnimation 	( *Array[6] 00000001 004C0003 )
	            EndIf
	         EndThread
	         Add  *Var[A]  00000001 
	         Wait     00000004 
	      EndIf
	      Wait     00000032 
	   EndCaseGroup
	EndSwitch
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

PADDING: 8022F578 to 8022F580 (005E5C08 to 005E5C10)
00000000 00000000 

#new:IdleAnimations $IdleAnimations_8022F580
.Status:Normal    004C0002
.Status:Stone     004C0000
.Status:Sleep     004C0002
.Status:Poison    004C0002
.Status:Stop      004C0000
.Status:Static    004C0002
.Status:Paralyze  004C0002
.Status:Paralyze  004C0000
.Status:Dizzy     004C0002
.Status:Dizzy     004C0002
.Status:Fear      004C0002
.Status:End

#new:IdleAnimations $IdleAnimations_8022F5DC
.Status:Normal    004C0003
.Status:Stone     004C0001
.Status:Sleep     004C0003
.Status:Poison    004C0003
.Status:Stop      004C0001
.Status:Static    004C0003
.Status:Paralyze  004C0003
.Status:Paralyze  004C0001
.Status:Dizzy     004C0003
.Status:Dizzy     004C0003
.Status:Fear      004C0003
.Status:End

#new:DefenseTable $DefenseTable_8022F638
.Element:Normal 00000000
.Element:Shock  00000063
.Element:Mystery00000000
.Element:Jump   00000000
.Element:Hammer 00000000
.Element:End

#new:StatusTable $StatusTable_8022F664
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep       0`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy       0`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze    0`
.Status:Shrink      0`
.Status:Stop        0`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_8022F710
00020022 01000000 000000FF $IdleAnimations_8022F580 $DefenseTable_8022F638 00000000 00000000 00000000 00000000 
80800023 02003200 00CE00FF 00000000 $DefenseTable_8022F638 00000000 00000000 00000000 00000000 

#new:Actor $TuffPuff
% stats
[Index]        BBb 
[Level]         0`b 
[MaxHP]         1`b 
[Coins]         0`b 
[Flags]       00208200 
[StatusTable] $StatusTable_8022F664 
% ai
[SpriteCount]   2`s 
[SpriteTable] $SpriteTable_8022F710 
[Script]      $Script_Init_8022F780 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  90`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         24`b  32`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -15`b   0`b % dx dy
[StatusIcon]   10`b  10`b % dx dy

#new:Script $Script_Init_8022F780
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_802305E8 )
	Call     BindIdle    	( .Actor:Self $Script_Idle_8022FA10 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_8022FE2C )
	Call     BindNextTurn 	( .Actor:Self $Script_NextTurn_8022FA00 )
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	If  *Var[0]  ==  00000000 
	   Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFFF FFFFFFF7 )
	   Call     8027D4C8 ( FFFFFF81 00000002 FFFFFFFF FFFFFFF7 )
	   Call     SetTargetOffset 	( .Actor:Self 00000001 FFFFFFFF 00000009 )
	   Call     SetTargetOffset 	( .Actor:Self 00000002 FFFFFFFF FFFFFFD7 )
	   Call     8027D810 ( FFFFFF81 00000014 00000019 )
	   Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022F580 )
	   Call     SetAnimation 	( .Actor:Self 00000001 004C0002 )
	   Call     SetActorVar 	( .Actor:Self 00000000 00000000 )
	Else
	   Call     8027D4C8 ( FFFFFF81 00000001 FFFFFFF8 FFFFFFF3 )
	   Call     8027D4C8 ( FFFFFF81 00000002 FFFFFFF8 FFFFFFF3 )
	   Call     SetTargetOffset 	( .Actor:Self 00000001 00000001 0000000E )
	   Call     SetTargetOffset 	( .Actor:Self 00000002 00000001 FFFFFFDC )
	   Call     8027D810 ( FFFFFF81 0000001C 00000023 )
	   Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_8022F5DC )
	   Call     SetAnimation 	( .Actor:Self 00000001 004C0003 )
	   Call     SetActorVar 	( .Actor:Self 00000000 00000001 )
	EndIf
	Call     SetActorVar 	( .Actor:Self 00000002 00000000 )
	Call     SetActorVar 	( .Actor:Self 00000003 00000064 )
	Call     SetActorVar 	( .Actor:Self 00000004 00000064 )
	Return
	End

#new:Script $Script_NextTurn_8022FA00
	Return
	End

#new:Script $Script_Idle_8022FA10
	Set  *Var[F]  00000000 
	Loop     
	   Call     GetActorVar 	( .Actor:Self 00000002 *Var[A] )
	   Switch  *Var[A] 
	      Case  ==  00000000 
	         Call     $Function_80218C40 ( *Var[F] *Var[0] *Fixed[0.9707031] *Fixed[1.0302734] 0000000F 00000000 00000000 )
	         Call     $Function_80218C40 ( *Var[F] *Var[1] *Fixed[1.0302734] *Fixed[0.9707031] 0000000F 00000000 00000000 )
	         Add  *Var[F]  00000001 
	      Case  ==  00000001 
	         Call     $Function_80218C40 ( *Var[F] *Var[0] *Fixed[0.9501953] *Fixed[1.0507812] 0000000F 00000000 00000000 )
	         Call     $Function_80218C40 ( *Var[F] *Var[1] *Fixed[1.0507812] *Fixed[0.9501953] 0000000F 00000000 00000000 )
	         Add  *Var[F]  00000003 
	      Case  ==  00000002 
	         Call     $Function_80218C40 ( *Var[F] *Var[0] *Fixed[0.9003906] *Fixed[1.1005859] 0000000F 00000000 00000000 )
	         Call     $Function_80218C40 ( *Var[F] *Var[1] *Fixed[1.1005859] *Fixed[0.9003906] 0000000F 00000000 00000000 )
	         Add  *Var[F]  00000005 
	   EndSwitch
	   Call     GetActorVar 	( .Actor:Self 00000003 *Var[2] )
	   Call     GetActorVar 	( .Actor:Self 00000004 *Var[3] )
	   DivF  *Var[2]  *Fixed[100.0] 
	   DivF  *Var[3]  *Fixed[100.0] 
	   MulF  *Var[1]  *Var[2] 
	   MulF  *Var[0]  *Var[3] 
	   Call     SetActorScale 	( .Actor:Self *Var[1] *Var[0] *Fixed[1.0] )
	   If  *Var[F]  >=  0000001E 
	      Set  *Var[F]  00000000 
	   EndIf
	   Wait     00000001 
	EndLoop
	Return
	End

#new:Script $Script_8022FC74
	Call     ActorExists 	( .Actor:Enemy0 *Var[0] )
	If  *Var[0]  ==  00000000 
	   Return
	EndIf
	Call     GetActorVar 	( .Actor:Self 00000001 *Var[0] )
	Call     GetActorVar 	( .Actor:Enemy0 00000002 *Var[1] )
	Switch  *Var[0] 
	   Case  ==  00000000 
	      ConstAND *Var[1] FFFFFFFE 
	   Case  ==  00000001 
	      ConstAND *Var[1] FFFFFFFD 
	   Case  ==  00000002 
	      ConstAND *Var[1] FFFFFFFB 
	   Case  ==  00000003 
	      ConstAND *Var[1] FFFFFFF7 
	   Case  ==  00000004 
	      ConstAND *Var[1] FFFFFFEF 
	   Case  ==  00000005 
	      ConstAND *Var[1] FFFFFFDF 
	   Case  ==  00000006 
	      ConstAND *Var[1] FFFFFFBF 
	   Case  ==  00000007 
	      ConstAND *Var[1] FFFFFF7F 
	   Case  ==  00000008 
	      ConstAND *Var[1] FFFFFEFF 
	   Case  ==  00000009 
	      ConstAND *Var[1] FFFFFDFF 
	EndSwitch
	Call     SetActorVar 	( .Actor:Enemy0 00000002 *Var[1] )
	Return
	End

#new:Script $Script_HandleEvent_8022FE2C
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   Case  ==  .Event:HitCombo
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
	      If  *Var[1]  ==  00000000 
	         SetConst  *Var[1]  004C000C 
	      Else
	         SetConst  *Var[1]  004C000D 
	      EndIf
	      ExecWait DoNormalHit 
	   Case  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
	      If  *Var[1]  ==  00000000 
	         SetConst  *Var[1]  004C000C 
	      Else
	         SetConst  *Var[1]  004C000D 
	      EndIf
	      ExecWait DoNormalHit 
	   Case  ==  .Event:BurnHit
	      Set  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
	      If  *Var[1]  ==  00000000 
	         SetConst  *Var[1]  004C000E 
	      Else
	         SetConst  *Var[1]  004C0010 
	      EndIf
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[2] )
	      If  *Var[2]  ==  00000000 
	         SetConst  *Var[2]  004C000F 
	      Else
	         SetConst  *Var[2]  004C0011 
	      EndIf
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      Set  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
	      If  *Var[1]  ==  00000000 
	         SetConst  *Var[1]  004C000E 
	      Else
	         SetConst  *Var[1]  004C0010 
	      EndIf
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[2] )
	      If  *Var[2]  ==  00000000 
	         SetConst  *Var[2]  004C000F 
	      Else
	         SetConst  *Var[2]  004C0011 
	      EndIf
	      ExecWait DoBurnHit 
	      ExecWait $Script_8022FC74 
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
	      If  *Var[1]  ==  00000000 
	         SetConst  *Var[1]  004C000F 
	      Else
	         SetConst  *Var[1]  004C0011 
	      EndIf
	      ExecWait DoDeath 
	      Return
	   Case  ==  00000017
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
	      If  *Var[1]  ==  00000000 
	         SetConst  *Var[1]  004C0002 
	      Else
	         SetConst  *Var[1]  004C0003 
	      EndIf
	      ExecWait DoImmune 
	   Case  ==  .Event:Immune
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
	      If  *Var[1]  ==  00000000 
	         SetConst  *Var[1]  004C0002 
	      Else
	         SetConst  *Var[1]  004C0003 
	      EndIf
	      ExecWait DoImmune 
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
	      If  *Var[1]  ==  00000000 
	         SetConst  *Var[1]  004C000C 
	      Else
	         SetConst  *Var[1]  004C000D 
	      EndIf
	      ExecWait DoNormalHit 
	      ExecWait $Script_8022FC74 
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
	      If  *Var[1]  ==  00000000 
	         SetConst  *Var[1]  004C000C 
	      Else
	         SetConst  *Var[1]  004C000D 
	      EndIf
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
	      If  *Var[1]  ==  00000000 
	         SetConst  *Var[1]  004C0002 
	      Else
	         SetConst  *Var[1]  004C0003 
	      EndIf
	      ExecWait DoRecover 
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
	      If  *Var[1]  ==  00000000 
	         SetConst  *Var[1]  004C0006 
	      Else
	         SetConst  *Var[1]  004C0007 
	      EndIf
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      ExecWait $Script_8022FC74 
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
	      If  *Var[1]  ==  00000000 
	         SetConst  *Var[1]  004C000C 
	      Else
	         SetConst  *Var[1]  004C000D 
	      EndIf
	      ExecWait DoBlowAway 
	      Return
	   Case  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000001 
	      Call     GetActorVar 	( .Actor:Self 00000000 *Var[1] )
	      If  *Var[1]  ==  00000000 
	         SetConst  *Var[1]  004C0002 
	      Else
	         SetConst  *Var[1]  004C0003 
	      EndIf
	      ExecWait DoImmune 
	   Default
	EndSwitch
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_802305E8
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

PADDING: 80230648 to 80230650 (005E6CD8 to 005E6CE0)
00000000 00000000 

#new:DefenseTable $DefenseTable_80230650
.Element:Normal 00000000
.Element:Hammer 00000000
.Element:Throw  FFFFFFFD
.Element:End

#new:StatusTable $StatusTable_8023066C
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison     80`
.Status:Frozen      0`
.Status:Dizzy      90`
.Status:Fear        0`
.Status:Static     10`
.Status:Paralyze   90`
.Status:Shrink     75`
.Status:Stop       90`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   1`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End

#new:SpriteTable $SpriteTable_80230718
00020000 01000000 FE1000FF $IdleAnimations_802307AC $DefenseTable_80230650 00000000 00000000 00F90000 00000000 
80800001 020000F1 001000FF $IdleAnimations_802307AC $DefenseTable_80230650 00000000 00000000 00F90000 00000000 
00120001 03000000 000000FF $IdleAnimations_802307F8 $DefenseTable_80230650 00000000 00000000 00000000 00000000 

#new:Actor $MontyMole
% stats
[Index]        30b 
[Level]        19`b 
[MaxHP]        12`b 
[Coins]         1`b 
[Flags]       00000000 
[StatusTable] $StatusTable_8023066C 
% ai
[SpriteCount]   3`s 
[SpriteTable] $SpriteTable_80230718 
[Script]      $Script_Init_802309C0 
% move effectiveness
[Escape]       50`b 
[Item]         50`b 
[AirLift]      55`b 
[Hurricane]    40`b % Bow's "Spook" as well
[UpAndAway]    95`b 
[PowerBounce] 100`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         34`b  18`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:IdleAnimations $IdleAnimations_802307AC
.Status:Normal    002F0101
.Status:Stone     002F0100
.Status:Sleep     002F0114
.Status:Poison    002F0101
.Status:Stop      002F0100
.Status:Static    002F0101
.Status:Paralyze  002F0100
.Status:Dizzy     002F0114
.Status:Fear      002F0114
.Status:End

#new:IdleAnimations $IdleAnimations_802307F8
.Status:Normal    002F010F
.Status:End

#new:IdleAnimations $IdleAnimations_80230804
.Status:Normal    002F0112
.Status:End

MISSING: 80230810 to 8023081C (005E6EA0 to 005E6EAC)
00000001 002F0106 00000000 

#new:SpriteTable $SpriteTable_8023081C
00022000 01000000 000000FF $IdleAnimations_80230804 00000000 00000000 00000000 00000000 00000000 

#new:Script $Script_Init_80230840
	Call     GetActorVar 	( .Actor:Self 00000000 *Var[0] )
	If  *Var[0]  ==  00000001 
	   Call     SetSpriteScale ( .Actor:Self 00000001 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	EndIf
	Return
	End

#new:Actor $EmptyMoleHole
% stats
[Index]        6Bb 
[Level]         9`b 
[MaxHP]         5`b 
[Coins]         2`b 
[Flags]       00640004 
[StatusTable] 00000000 
% ai
[SpriteCount]   1`s 
[SpriteTable] $SpriteTable_8023081C 
[Script]      $Script_Init_80230840 
% move effectiveness
[Escape]       80`b 
[Item]         80`b 
[AirLift]       0`b 
[Hurricane]    80`b % Bow's "Spook" as well
[UpAndAway]    90`b 
[PowerBounce]  90`b 
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]         32`b  18`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy

#new:Vector3D $Vector3D_802308C8
0` -1000` 0`

#new:SpecialFormation $SpecialFormation_802308D4
$EmptyMoleHole $Vector3D_802308C8 00000000 00000000 00000000 00000000 00000000 

#new:SpecialFormation $SpecialFormation_802308F0
$EmptyMoleHole $Vector3D_802308C8 00000000 00000001 00000000 00000000 00000000 

#new:Script $Script_8023090C
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  &  00080000 
	   Call     SummonEnemy 	( $SpecialFormation_802308F0 00000000 )
	Else
	   Call     SummonEnemy 	( $SpecialFormation_802308D4 00000000 )
	EndIf
	Call     GetActorPos 	( .Actor:Self *Var[1] *Var[2] *Var[3] )
	Sub  *Var[3]  00000001 
	Call     SetActorPos 	( *Var[0] *Var[1] *Var[2] *Var[3] )
	Return
	End

#new:Script $Script_Init_802309C0
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_802311BC )
	Call     BindIdle    	( .Actor:Self $Script_Idle_80230A24 )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80230A34 )
	Call     SetActorFlagBits 	( .Actor:Self 00000004 .True )
	Return
	End

#new:Script $Script_Idle_80230A24
	Return
	End

#new:Script $Script_HandleEvent_80230A34
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetLastElement ( *Var[E] )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      If  *Var[E]  &  00000040 
	         ChildThread
	            Wait     00000008 
	            Call     SetAnimation 	( .Actor:Self 00000001 002F0107 )
	         EndChildThread
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  002F0106 
	         ExecWait DoNormalHit 
	         Call     SetAnimation 	( .Actor:Self 00000001 002F0108 )
	         Wait     0000000A 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  002F0105 
	         ExecWait DoNormalHit 
	      EndIf
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002F010A 
	      SetConst  *Var[2]  002F010B 
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002F010A 
	      SetConst  *Var[2]  002F010B 
	      ExecWait DoBurnHit 
	      ExecWait $Script_8023090C 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002F010C 
	      ExecWait DoDeath 
	      Return
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	      Call     GetLastElement ( *Var[0] )
	      If  *Var[0]  &  00000040 
	         Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
	         Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
	         Call     SetAnimation 	( .Actor:Self 00000001 002F0111 )
	         Wait     00000050 
	         Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleSurface )
	         Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
	         Call     SetAnimation 	( .Actor:Self 00000001 002F0110 )
	         Wait     00000014 
	         Call     SetAnimation 	( .Actor:Self 00000001 002F0114 )
	         Wait     00000014 
	      Else
	         SetConst  *Var[0]  00000001 
	         SetConst  *Var[1]  002F0101 
	         ExecWait DoImmune 
	      EndIf
	   EndCaseGroup
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002F0105 
	      ExecWait DoNormalHit 
	      Call     SetAnimation 	( .Actor:Self 00000001 002F0106 )
	      Wait     0000000A 
	      ExecWait $Script_8023090C 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002F0109 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:RecoverStatus
	      Call     SetAnimation 	( .Actor:Self 00000001 002F0106 )
	      Wait     00000008 
	      Call     SetAnimation 	( .Actor:Self 00000001 002F0107 )
	      Wait     00000005 
	      Call     SetAnimation 	( .Actor:Self 00000001 002F0108 )
	      Wait     00000008 
	   Case  ==  .Event:ScareAway
	      Call     SetAnimation 	( .Actor:Self 00000001 002F0106 )
	      Wait     0000000F 
	      Call     SetAnimation 	( .Actor:Self 00000001 002F0107 )
	      Wait     0000000F 
	      Call     SetAnimation 	( .Actor:Self 00000001 002F0108 )
	      Wait     0000000F 
	      Call     SetActorFlagBits 	( .Actor:Self 00404000 .True )
	      Call     SetIdleAnimations 	( .Actor:Self 00000001 $IdleAnimations_80230804 )
	      Return
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  002F0105 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      ExecWait $Script_8023090C 
	      Call     GetStatusFlags ( .Actor:Self *Var[0] )
	      If  *Var[0]  &  0035D000 
	         Call     8026BA04 ( FFFFFF81 00000000 FFFFFFFB 00000000 )
	         Call     SetAnimation 	( .Actor:Self 00000001 002F0119 )
	      Else
	         If  *Var[0]  &  00080000 
	            Call     8026BA04 ( FFFFFF81 00000000 FFFFFFF7 00000000 )
	         Else
	            Call     8026BA04 ( FFFFFF81 00000000 FFFFFFE9 00000000 )
	         EndIf
	         Call     SetAnimation 	( .Actor:Self 00000001 002F0109 )
	      EndIf
	      Wait     000003E8 
	      Return
	   Case  ==  .Event:AirLiftFailed
	      Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
	      Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[2.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 002F0111 )
	      Wait     00000028 
	      Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleSurface )
	      Call     SetAnimationSpeed 	( .Actor:Self 00000001 *Fixed[1.0] )
	      Call     SetAnimation 	( .Actor:Self 00000001 002F0110 )
	      Wait     00000014 
	      Call     SetAnimation 	( .Actor:Self 00000001 002F0114 )
	      Wait     00000014 
	   Case  ==  .Event:UpAndAway
	      ExecWait $Script_8023090C 
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_802311BC
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetBattlePhase ( *Var[0] )
	If  *Var[0]  ==  .Phase:FirstStrike
	   Call     UseCamPreset 	( 00000002 )
	   Call     MoveCamOver 	( 00000001 )
	EndIf
	ChildThread
	   Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleDig )
	   Wait     00000014 
	   Call     PlaySoundAtActor 	( .Actor:Self .Sound:MoleSurface )
	EndChildThread
	Call     SetAnimation 	( .Actor:Self 00000001 002F0104 )
	Wait     00000025 
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Add  *Var[1]  00000014 
	Call     SetSpritePos 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] )
	Wait     00000001 
	Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .False )
	Call     GetStatusFlags ( .Actor:Self *Var[0] )
	If  *Var[0]  &  00080000 
	   Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	Else
	   Call     SetSpriteScale ( .Actor:Self 00000003 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	EndIf
	Call     PlaySoundAtSprite 	( .Actor:Self 00000003 .Sound:MoleThrow )
	Call     8026FA00 ( FFFFFF81 00000003 00000001 00000000 00000000 )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 10000000 00000000 00000003 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     SetTargetActor ( .Actor:Self .Actor:Player )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000064 
	      Set  *Var[1]  FFFFFFFB 
	      Call     SetSpriteSpeed ( .Actor:Self 00000003 *Fixed[12.0] )
	      Call     SetSpriteJumpscale 	( .Actor:Self 00000003 *Fixed[0.10058594] )
	      Call     SetAnimation 	( .Actor:Self 00000003 002F010F )
	      Call     MoveSpriteTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 0000001E .Easing:Linear )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[0] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Call     8027D7F0 ( )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetSpriteSpeed ( .Actor:Self 00000003 *Fixed[12.0] )
	Call     SetSpriteJumpscale 	( .Actor:Self 00000003 *Fixed[0.10058594] )
	Call     SetAnimation 	( .Actor:Self 00000003 002F010F )
	Call     MoveSpriteTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 00000014 .Easing:Linear )
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000003 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     GetActorPos 	( .Actor:Player *Var[0] *Var[1] *Var[2] )
	      Sub  *Var[0]  00000037 
	      Set  *Var[1]  00000000 
	      Call     SetSpriteSpeed ( .Actor:Self 00000003 *Fixed[6.0] )
	      Call     SetSpriteJumpscale 	( .Actor:Self 00000003 *Fixed[0.10058594] )
	      Call     MoveSpriteTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 00000019 .Easing:Linear )
	      Call     SetSpriteSpeed ( .Actor:Self 00000003 *Fixed[4.0] )
	      Sub  *Var[0]  00000014 
	      Call     MoveSpriteTo 	( .Actor:Self 00000003 *Var[0] *Var[1] *Var[2] 00000000 00000015 .Easing:Linear )
	      Call     SetSpriteFlagBits 	( .Actor:Self 00000003 00000001 .True )
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

PADDING: 80231804 to 80231810 (005E7E94 to 005E7EA0)
00000000 00000000 00000000 

#new:IdleAnimations $IdleAnimations_80231810
.Status:Normal    00100001
.Status:Stone     00100000
.Status:Sleep     0010001A
.Status:Poison    00100001
.Status:Stop      00100000
.Status:Static    00100001
.Status:Paralyze  00100000
.Status:Dizzy     00100008
.Status:Fear      00100001
.Status:End

#new:IdleAnimations $IdleAnimations_8023185C
.Status:Normal    00100014
.Status:End

#new:DefenseTable $DefenseTable_80231868
.Element:Normal 00000000
.Element:End

#new:StatusTable $StatusTable_80231874
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      40`
.Status:Poison     50`
.Status:Frozen      0`
.Status:Dizzy      50`
.Status:Fear        0`
.Status:Static     50`
.Status:Paralyze   40`
.Status:Shrink     50`
.Status:Stop       50`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -1`
.Status:End

#new:SpriteTable $SpriteTable_80231920
00800000 01000000 FB2300FF $IdleAnimations_80231810 $DefenseTable_80231868 00000000 00000000 00F30000 00000000 
00120001 02000000 000000FF $IdleAnimations_8023185C $DefenseTable_80231868 00000000 00000000 00000000 00000000 

#new:Actor $Spike
% stats
[Index]        35b 
[Level]        40`b 
[MaxHP]        50`b 
[Coins]         0`b 
[Flags]       00000200 
[StatusTable] $StatusTable_80231874 
% ai
[SpriteCount]   2`s 
[SpriteTable] $SpriteTable_80231920 
[Script]      $Script_Init_80231990 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  75`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         32`b  40`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -14`b  20`b % dx dy
[StatusIcon]    6`b  32`b % dx dy

#new:Script $Script_Init_80231990
	Call     BindTakeTurn 	( .Actor:Self $Script_TakeTurn_802329E4 )
	Call     BindIdle    	( .Actor:Self $Script_Idle_802319DC )
	Call     BindHandleEvent 	( .Actor:Self $Script_HandleEvent_80231A6C )
	Return
	End

#new:Script $Script_Idle_802319DC
	Return
	End

#new:Script $Script_802319EC
	Call     SetAnimation 	( .Actor:Self 00000001 00100003 )
	Call     SetGoalToHome 	( .Actor:Self )
	Call     SetActorSpeed 	( .Actor:Self *Fixed[7.0] )
	Call     MoveToGoal  	( .Actor:Self 00000000 00000000 .Easing:SinOut )
	Call     SetAnimation 	( .Actor:Self 00000001 00100001 )
	Return
	End

#new:Script $Script_HandleEvent_80231A6C
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     GetEventType 	( .Actor:Self *Var[0] )
	Switch  *Var[0] 
	   CaseOR  ==  .Event:HitCombo
	   CaseOR  ==  .Event:Hit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0010000A 
	      ExecWait DoNormalHit 
	   EndCaseGroup
	   Case  ==  .Event:BurnHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0010000C 
	      SetConst  *Var[2]  0010000D 
	      ExecWait DoBurnHit 
	   Case  ==  .Event:BurnDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0010000C 
	      SetConst  *Var[2]  0010000D 
	      ExecWait DoBurnHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0010000D 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:MultibounceHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0010000A 
	      ExecWait 8029B998 
	   Case  ==  .Event:MultibounceDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0010000A 
	      ExecWait 8029B998 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0010000B 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:ShockHit
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0010000A 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0010000A 
	      ExecWait 8029BD70 
	      ExecWait $Script_802319EC 
	   Case  ==  .Event:ShockDeath
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0010000A 
	      ExecWait DoShockHit 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0010000B 
	      ExecWait DoDeath 
	      Return
	   CaseOR  ==  00000017
	   CaseOR  ==  .Event:Immune
	   CaseOR  ==  .Event:AirLiftFailed
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00100001 
	      ExecWait DoImmune 
	   EndCaseGroup
	   Case  ==  .Event:Death
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0010000A 
	      ExecWait DoNormalHit 
	      Wait     0000000A 
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0010000B 
	      ExecWait DoDeath 
	      Return
	   Case  ==  .Event:BeginFirstStrike
	      Call     SetActorPos 	( .Actor:Self 00000014 00000000 00000000 )
	      Call     HPBarToCurrent ( .Actor:Self )
	   Case  ==  .Event:EndFirstStrike
	      ExecWait $Script_802319EC 
	      Call     HPBarToHome 	( .Actor:Self )
	   Case  ==  .Event:RecoverStatus
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00100001 
	      ExecWait DoRecover 
	   Case  ==  .Event:ScareAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  00100003 
	      SetConst  *Var[2]  0010000A 
	      ExecWait DoScareAway 
	      Return
	   Case  ==  .Event:BeginAirLift
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0010000A 
	      ExecWait DoAirLift 
	   Case  ==  .Event:BlowAway
	      SetConst  *Var[0]  00000001 
	      SetConst  *Var[1]  0010000A 
	      ExecWait DoBlowAway 
	      Return
	   Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_80231FBC
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self 00000000 )
	Call     SetTargetActor ( .Actor:Self .Actor:Player )
	Call     UseCamPreset 	( 0000003F )
	Call     CamTargetActor ( .Actor:Self )
	Call     8024ECF8 ( FFFFFFFF 00000001 00000000 )
	Call     SetAnimation 	( .Actor:Self 00000001 00100003 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     SetGoalToPos 	( .Actor:Self 00000014 0000001E *Var[2] )
	Call     MoveToGoal  	( .Actor:Self 0000001E 00000000 .Easing:CosInOut )
	Call     SetAnimation 	( .Actor:Self 00000001 00100001 )
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetStatusFlags ( .Actor:Self *Var[A] )
	If  *Var[A]  &  00080000 
	   Add  *Var[0]  FFFFFFFF 
	   Add  *Var[1]  00000004 
	   Add  *Var[2]  00000002 
	   Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[0.40039062] *Fixed[0.40039062] *Fixed[0.40039062] )
	Else
	   Add  *Var[0]  FFFFFFFD 
	   Add  *Var[1]  0000000A 
	   Add  *Var[2]  00000005 
	   Call     SetSpriteScale ( .Actor:Self 00000002 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	EndIf
	Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
	Wait     00000001 
	Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .False )
	Call     SetAnimation 	( .Actor:Self 00000002 00100014 )
	Call     SetAnimation 	( .Actor:Self 00000001 0010000F )
	Loop     00000004 
	   Call     GetStatusFlags ( .Actor:Self *Var[A] )
	   If  *Var[A]  &  00080000 
	      AddF  *Var[1]  *Fixed[2.4003906] 
	   Else
	      Add  *Var[1]  00000006 
	   EndIf
	   Call     SetSpritePos 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] )
	   Wait     00000001 
	EndLoop
	Call     GetActorPos 	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     GetStatusFlags ( .Actor:Self *Var[A] )
	If  *Var[A]  &  00080000 
	   Add  *Var[0]  FFFFFFFD 
	   Add  *Var[1]  00000010 
	   Add  *Var[2]  00000002 
	   SetF  *Var[3]  *Fixed[0.40039062] 
	Else
	   Add  *Var[0]  FFFFFFF8 
	   Add  *Var[1]  00000028 
	   Add  *Var[2]  00000005 
	   SetF  *Var[3]  *Fixed[1.0] 
	EndIf
	Call     PlayEffect  	( {FX:EnergyIn:ShortStreaks} *Var[0] *Var[1] *Var[2] *Var[3] 0000001E 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     PlaySoundAtActor 	( .Actor:Self 000002C5 )
	Thread
	   Loop     0000000F 
	      Call     8026BA04 ( FFFFFF81 00000001 00000000 00000000 )
	      Call     SetSpriteOffset 	( .Actor:Self 00000002 00000001 00000000 00000000 )
	      Wait     00000001 
	      Call     8026BA04 ( FFFFFF81 FFFFFFFF 00000000 00000000 )
	      Call     SetSpriteOffset 	( .Actor:Self 00000002 FFFFFFFF 00000000 00000000 )
	      Wait     00000001 
	   EndLoop
	   Call     8026BA04 ( FFFFFF81 00000000 00000000 00000000 )
	   Call     SetSpriteOffset 	( .Actor:Self 00000002 00000000 00000000 00000000 )
	EndThread
	Call     SetGoalToTarget 	( .Actor:Self )
	Wait     0000000A 
	Call     SetAnimation 	( .Actor:Self 00000001 00100010 )
	Wait     0000000A 
	Call     SetAnimation 	( .Actor:Self 00000001 00100011 )
	Wait     0000000A 
	Call     SetAnimation 	( .Actor:Self 00000001 00100012 )
	Wait     00000003 
	Call     PlaySoundAtSprite 	( .Actor:Self 00000002 000002C6 )
	Call     8026FA00 ( FFFFFF81 00000002 00000002 00000000 00000000 )
	Call     CheckPlayerHit ( .Actor:Self *Var[0] 00000000 00000000 00000001 00000010 )
	Switch  *Var[0] 
	   CaseOR  ==  00000006 
	   CaseOR  ==  00000005 
	      Set  *Var[A]  *Var[0] 
	      Call     SetAnimation 	( .Actor:Self 00000002 00100015 )
	      Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[1.5] )
	      Call     SetGoalToTarget 	( .Actor:Self )
	      Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	      Call     RandInt     	( 00000064 *Var[3] )
	      Sub  *Var[3]  00000032 
	      Add  *Var[0]  *Var[3] 
	      Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 00000014 .True )
	      Call     8026F6EC ( FFFFFF81 )
	      Thread
	         Add  *Var[0]  FFFFFFCE 
	         Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 0000000F .True )
	         Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
	      EndThread
	      If  *Var[A]  ==  00000005 
	         Call     CheckPlayerHit ( .Actor:Self *Var[A] 80000000 00000000 00000000 00000000 )
	      EndIf
	      Wait     0000000F 
	      Call     8027D7F0 ( )
	      Call     UseCamPreset 	( 00000002 )
	      Call     AddActorDecoration 	( .Actor:Self 00000001 00000000 .Decoration:Sweat )
	      Call     SetActorAngle 	( .Actor:Self 000000B4 )
	      ExecWait $Script_802319EC 
	      Call     SetActorAngle 	( .Actor:Self 00000000 )
	      Call     RemoveActorDecoration 	( .Actor:Self 00000001 00000000 )
	      Call     EnableIdleScript 	( .Actor:Self 00000001 )
	      Call     UseIdleAnimation 	( .Actor:Self .True )
	      Return
	   EndCaseGroup
	EndSwitch
	Call     SetAnimation 	( .Actor:Self 00000002 00100015 )
	Call     SetSpriteJumpscale 	( .Actor:Self 00000002 *Fixed[1.5] )
	Call     SetGoalToTarget 	( .Actor:Self )
	Call     GetGoalPos  	( .Actor:Self *Var[0] *Var[1] *Var[2] )
	Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] *Var[1] *Var[2] 00000014 .True )
	Call     8026F6EC ( FFFFFF81 )
	Thread
	   Add  *Var[0]  FFFFFFCE 
	   Call     JumpSpriteA 	( .Actor:Self 00000002 *Var[0] 00000000 *Var[2] 0000000F .True )
	   Call     SetSpriteFlagBits 	( .Actor:Self 00000002 00000001 .True )
	EndThread
	Wait     00000002 
	Call     DamageTarget 	( .Actor:Self *Var[0] 10000000 00000000 00000000 00000004 00000020 )
	Switch  *Var[0] 
	   CaseOR  ==  00000000 
	   CaseOR  ==  00000002 
	      Call     UseCamPreset 	( 00000002 )
	      Wait     0000000F 
	      Call     8027D7F0 ( )
	      ExecWait $Script_802319EC 
	   EndCaseGroup
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self 00000001 )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End

#new:Script $Script_TakeTurn_802329E4
	ExecWait $Script_80231FBC 
	Return
	End

#new:Script $Script_80232A00
	Label    00000000 
	Call     RandInt     	( 000000FA *Var[0] )
	Sub  *Var[0]  0000007D 
	Set  *Var[1]  00000000 
	Call     RandInt     	( 00000028 *Var[2] )
	Sub  *Var[2]  00000064 
	Call     RandInt     	( 0000001E *Var[3] )
	Add  *Var[3]  0000005A 
	Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     RandInt     	( 00000014 *Var[0] )
	Add  *Var[0]  00000014 
	Wait     *Var[0] 
	Goto     00000000 
	Return
	End

% Origin: HEURISTIC
#new:Script $Script_80232B18
	Label    00000000 
	Call     RandInt     	( 000000FA *Var[0] )
	Sub  *Var[0]  0000007D 
	Set  *Var[1]  00000000 
	Call     RandInt     	( 00000032 *Var[2] )
	Add  *Var[2]  00000047 
	Call     RandInt     	( 0000001E *Var[3] )
	Add  *Var[3]  0000005A 
	Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     RandInt     	( 0000001E *Var[0] )
	Add  *Var[0]  00000014 
	Wait     *Var[0] 
	Goto     00000000 
	Return
	End

% Origin: HEURISTIC
#new:Script $Script_80232C30
	Label    00000000 
	Call     RandInt     	( 000000FA *Var[0] )
	Sub  *Var[0]  0000007D 
	Set  *Var[1]  00000032 
	Call     RandInt     	( 00000028 *Var[2] )
	Add  *Var[2]  FFFFFF84 
	Call     RandInt     	( 0000001E *Var[3] )
	Add  *Var[3]  0000005A 
	Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     RandInt     	( 0000001E *Var[0] )
	Add  *Var[0]  00000014 
	Wait     *Var[0] 
	Goto     00000000 
	Return
	End

#new:Unknown $???_80232D48
$ASCII_80235830 $ASCII_80235828 $ASCII_80235820 $ASCII_80235818 $ASCII_80235810 $ASCII_80235808 $ASCII_80235800 $ASCII_802357F8 
$ASCII_802357F0 $ASCII_802357E8 $ASCII_802357E0 

#new:Script $Script_80232D74
	If  *StoryProgress  >=  00000035 
	   Call     $Function_80218DD0 ( )
	EndIf
	Return
	End

#new:Script $Script_BeforeBattle_80232DA8
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Call     802C9308 ( 00000025 00000001 )
	Call     802C9308 ( 0000001C 00000000 )
	Call     802C9308 ( 00000016 00000000 )
	Exec     $Script_80232A00 
	ExecWait $Script_80232D74 
	Return
	End

#new:Script $Script_AfterBattle_80232E38
	Return
	End

#new:ForegroundModelList $ForegroundModelList_80232E48
FFFFFFFF 0000001D 0000001E 0000001F 00000021 00000022 00000023 00000024 
00000000 

#new:Stage $Stage_80232E6C
$ASCII_80235860  % flo_tex
$ASCII_80235850  % flo_bt01_shape
$ASCII_80235840  % flo_bt01_hit
$Script_BeforeBattle_80232DA8 
$Script_AfterBattle_80232E38 
$ASCII_80235838  % fla_bg
$ForegroundModelList_80232E48 
00000000 
00000000 
00000000 

PADDING: 80232E94 to 80232EA0 (005E9524 to 005E9530)
00000000 00000000 00000000 

#new:Script $Script_80232EA0
	Label    00000000 
	Call     RandInt     	( 000000FA *Var[0] )
	Sub  *Var[0]  0000007D 
	Set  *Var[1]  00000000 
	Call     RandInt     	( 00000028 *Var[2] )
	Sub  *Var[2]  00000064 
	Call     RandInt     	( 0000001E *Var[3] )
	Add  *Var[3]  0000005A 
	Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     RandInt     	( 00000014 *Var[0] )
	Add  *Var[0]  00000014 
	Wait     *Var[0] 
	Goto     00000000 
	Return
	End

% Origin: HEURISTIC
#new:Script $Script_80232FB8
	Label    00000000 
	Call     RandInt     	( 000000FA *Var[0] )
	Sub  *Var[0]  0000007D 
	Set  *Var[1]  00000000 
	Call     RandInt     	( 00000032 *Var[2] )
	Add  *Var[2]  00000047 
	Call     RandInt     	( 0000001E *Var[3] )
	Add  *Var[3]  0000005A 
	Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     RandInt     	( 0000001E *Var[0] )
	Add  *Var[0]  00000014 
	Wait     *Var[0] 
	Goto     00000000 
	Return
	End

% Origin: HEURISTIC
#new:Script $Script_802330D0
	Label    00000000 
	Call     RandInt     	( 000000FA *Var[0] )
	Sub  *Var[0]  0000007D 
	Set  *Var[1]  00000032 
	Call     RandInt     	( 00000028 *Var[2] )
	Add  *Var[2]  FFFFFF84 
	Call     RandInt     	( 0000001E *Var[3] )
	Add  *Var[3]  0000005A 
	Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     RandInt     	( 0000001E *Var[0] )
	Add  *Var[0]  00000014 
	Wait     *Var[0] 
	Goto     00000000 
	Return
	End

#new:Unknown $???_802331E8
$ASCII_802358B8 $ASCII_802358B0 $ASCII_802358A8 $ASCII_802358A0 $ASCII_80235898 $ASCII_80235890 $ASCII_80235888 $ASCII_80235880 
$ASCII_80235878 $ASCII_80235870 $ASCII_80235868 

#new:Script $Script_80233214
	If  *StoryProgress  >=  00000035 
	   Call     $Function_80218E90 ( )
	EndIf
	Return
	End

#new:Script $Script_BeforeBattle_80233248
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Call     802C9308 ( 00000025 00000000 )
	Call     802C9308 ( 0000001C 00000001 )
	Call     802C9308 ( 00000016 00000000 )
	Exec     $Script_80232EA0 
	ExecWait $Script_80233214 
	Return
	End

#new:Script $Script_AfterBattle_802332D8
	Return
	End

#new:ForegroundModelList $ForegroundModelList_802332E8
FFFFFFFF 00000017 00000018 00000019 0000001A 0000001B 00000000 

#new:Stage $Stage_80233304
$ASCII_802358E8  % flo_tex
$ASCII_802358D8  % flo_bt01_shape
$ASCII_802358C8  % flo_bt01_hit
$Script_BeforeBattle_80233248 
$Script_AfterBattle_802332D8 
$ASCII_802358C0  % fla_bg
$ForegroundModelList_802332E8 
00000000 
00000000 
00000000 

PADDING: 8023332C to 80233330 (005E99BC to 005E99C0)
00000000 

#new:Script $Script_80233330
	Label    00000000 
	Call     RandInt     	( 000000FA *Var[0] )
	Sub  *Var[0]  0000007D 
	Set  *Var[1]  00000000 
	Call     RandInt     	( 00000028 *Var[2] )
	Sub  *Var[2]  00000064 
	Call     RandInt     	( 0000001E *Var[3] )
	Add  *Var[3]  0000005A 
	Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     RandInt     	( 00000014 *Var[0] )
	Add  *Var[0]  00000014 
	Wait     *Var[0] 
	Goto     00000000 
	Return
	End

#new:Script $Script_80233448
	Label    00000000 
	Call     RandInt     	( 000000FA *Var[0] )
	Sub  *Var[0]  0000007D 
	Set  *Var[1]  00000000 
	Call     RandInt     	( 00000032 *Var[2] )
	Add  *Var[2]  00000047 
	Call     RandInt     	( 0000001E *Var[3] )
	Add  *Var[3]  0000005A 
	Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     RandInt     	( 0000001E *Var[0] )
	Add  *Var[0]  00000014 
	Wait     *Var[0] 
	Goto     00000000 
	Return
	End

% Origin: HEURISTIC
#new:Script $Script_80233560
	Label    00000000 
	Call     RandInt     	( 000000FA *Var[0] )
	Sub  *Var[0]  0000007D 
	Set  *Var[1]  00000032 
	Call     RandInt     	( 00000028 *Var[2] )
	Add  *Var[2]  FFFFFF84 
	Call     RandInt     	( 0000001E *Var[3] )
	Add  *Var[3]  0000005A 
	Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     RandInt     	( 0000001E *Var[0] )
	Add  *Var[0]  00000014 
	Wait     *Var[0] 
	Goto     00000000 
	Return
	End

#new:Unknown $???_80233678
$ASCII_80235940 $ASCII_80235938 $ASCII_80235930 $ASCII_80235928 $ASCII_80235920 $ASCII_80235918 $ASCII_80235910 $ASCII_80235908 
$ASCII_80235900 $ASCII_802358F8 $ASCII_802358F0 

#new:Script $Script_802336A4
	If  *StoryProgress  >=  00000035 
	   Call     $Function_80218F50 ( )
	EndIf
	Return
	End

#new:Script $Script_BeforeBattle_802336D8
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Call     802C9308 ( 00000025 00000000 )
	Call     802C9308 ( 0000001C 00000000 )
	Call     802C9308 ( 00000016 00000001 )
	Exec     $Script_80233330 
	Exec     $Script_80233448 
	ExecWait $Script_802336A4 
	Return
	End

#new:Script $Script_AfterBattle_80233774
	Return
	End

#new:ForegroundModelList $ForegroundModelList_80233784
FFFFFFFF 0000000F 00000010 00000013 00000014 00000015 00000011 00000000 

#new:Stage $Stage_802337A4
$ASCII_80235970  % flo_tex
$ASCII_80235960  % flo_bt01_shape
$ASCII_80235950  % flo_bt01_hit
$Script_BeforeBattle_802336D8 
$Script_AfterBattle_80233774 
$ASCII_80235948  % fla_bg
$ForegroundModelList_80233784 
00000000 
00000000 
00000000 

PADDING: 802337CC to 802337D0 (005E9E5C to 005E9E60)
00000000 

% Origin: HEURISTIC
#new:Script $Script_802337D0
	Label    00000000 
	Call     RandInt     	( 000000FA *Var[0] )
	Sub  *Var[0]  0000007D 
	Set  *Var[1]  00000000 
	Call     RandInt     	( 00000028 *Var[2] )
	Sub  *Var[2]  00000064 
	Call     RandInt     	( 0000001E *Var[3] )
	Add  *Var[3]  0000005A 
	Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     RandInt     	( 00000014 *Var[0] )
	Add  *Var[0]  00000014 
	Wait     *Var[0] 
	Goto     00000000 
	Return
	End

% Origin: HEURISTIC
#new:Script $Script_802338E8
	Label    00000000 
	Call     RandInt     	( 000000FA *Var[0] )
	Sub  *Var[0]  0000007D 
	Set  *Var[1]  00000000 
	Call     RandInt     	( 00000032 *Var[2] )
	Add  *Var[2]  00000047 
	Call     RandInt     	( 0000001E *Var[3] )
	Add  *Var[3]  0000005A 
	Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     RandInt     	( 0000001E *Var[0] )
	Add  *Var[0]  00000014 
	Wait     *Var[0] 
	Goto     00000000 
	Return
	End

#new:Script $Script_80233A00
	Label    00000000 
	Call     RandInt     	( 000000FA *Var[0] )
	Sub  *Var[0]  0000007D 
	Set  *Var[1]  00000032 
	Call     RandInt     	( 00000028 *Var[2] )
	Add  *Var[2]  FFFFFF84 
	Call     RandInt     	( 0000001E *Var[3] )
	Add  *Var[3]  0000005A 
	Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     RandInt     	( 0000001E *Var[0] )
	Add  *Var[0]  00000014 
	Wait     *Var[0] 
	Goto     00000000 
	Return
	End

#new:Unknown $???_80233B18
$ASCII_802359C8 $ASCII_802359C0 $ASCII_802359B8 $ASCII_802359B0 $ASCII_802359A8 $ASCII_802359A0 $ASCII_80235998 $ASCII_80235990 
$ASCII_80235988 $ASCII_80235980 $ASCII_80235978 

#new:Script $Script_80233B44
	If  *StoryProgress  >=  00000035 
	   Call     $Function_80219010 ( )
	EndIf
	Return
	End

#new:Script $Script_BeforeBattle_80233B78
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Call     802C9308 ( 00000023 00000001 )
	Call     802C9308 ( 0000002F 00000000 )
	Call     802C9308 ( 00000016 00000000 )
	Exec     $Script_80233A00 
	ExecWait $Script_80233B44 
	Return
	End

#new:Script $Script_AfterBattle_80233C08
	Return
	End

#new:ForegroundModelList $ForegroundModelList_80233C18
FFFFFFFF 00000020 00000021 00000000 

#new:Stage $Stage_80233C28
$ASCII_802359F8  % flo_tex
$ASCII_802359E8  % flo_bt02_shape
$ASCII_802359D8  % flo_bt02_hit
$Script_BeforeBattle_80233B78 
$Script_AfterBattle_80233C08 
$ASCII_802359D0  % fla_bg
$ForegroundModelList_80233C18 
00000000 
00000000 
00000000 

% Origin: HEURISTIC
#new:Script $Script_80233C50
	Label    00000000 
	Call     RandInt     	( 000000FA *Var[0] )
	Sub  *Var[0]  0000007D 
	Set  *Var[1]  00000000 
	Call     RandInt     	( 00000028 *Var[2] )
	Sub  *Var[2]  00000064 
	Call     RandInt     	( 0000001E *Var[3] )
	Add  *Var[3]  0000005A 
	Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     RandInt     	( 00000014 *Var[0] )
	Add  *Var[0]  00000014 
	Wait     *Var[0] 
	Goto     00000000 
	Return
	End

% Origin: HEURISTIC
#new:Script $Script_80233D68
	Label    00000000 
	Call     RandInt     	( 000000FA *Var[0] )
	Sub  *Var[0]  0000007D 
	Set  *Var[1]  00000000 
	Call     RandInt     	( 00000032 *Var[2] )
	Add  *Var[2]  00000047 
	Call     RandInt     	( 0000001E *Var[3] )
	Add  *Var[3]  0000005A 
	Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     RandInt     	( 0000001E *Var[0] )
	Add  *Var[0]  00000014 
	Wait     *Var[0] 
	Goto     00000000 
	Return
	End

#new:Script $Script_80233E80
	Label    00000000 
	Call     RandInt     	( 000000FA *Var[0] )
	Sub  *Var[0]  0000007D 
	Set  *Var[1]  00000032 
	Call     RandInt     	( 00000028 *Var[2] )
	Add  *Var[2]  FFFFFF84 
	Call     RandInt     	( 0000001E *Var[3] )
	Add  *Var[3]  0000005A 
	Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     RandInt     	( 0000001E *Var[0] )
	Add  *Var[0]  00000014 
	Wait     *Var[0] 
	Goto     00000000 
	Return
	End

#new:Unknown $???_80233F98
$ASCII_80235A50 $ASCII_80235A48 $ASCII_80235A40 $ASCII_80235A38 $ASCII_80235A30 $ASCII_80235A28 $ASCII_80235A20 $ASCII_80235A18 
$ASCII_80235A10 $ASCII_80235A08 $ASCII_80235A00 

#new:Script $Script_80233FC4
	If  *StoryProgress  >=  00000035 
	   Call     $Function_802190D0 ( )
	EndIf
	Return
	End

#new:Script $Script_BeforeBattle_80233FF8
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Call     802C9308 ( 00000023 00000000 )
	Call     802C9308 ( 0000002F 00000001 )
	Call     802C9308 ( 00000016 00000000 )
	Exec     $Script_80233E80 
	Call     ModifyColliderFlags 	( 00000003 00000000 00000006 )
	ExecWait $Script_80233FC4 
	Return
	End

#new:Script $Script_AfterBattle_802340A0
	Return
	End

#new:ForegroundModelList $ForegroundModelList_802340B0
FFFFFFFF 00000025 00000026 00000027 00000028 00000028 0000002A 00000000 

#new:Stage $Stage_802340D0
$ASCII_80235A80  % flo_tex
$ASCII_80235A70  % flo_bt02_shape
$ASCII_80235A60  % flo_bt02_hit
$Script_BeforeBattle_80233FF8 
$Script_AfterBattle_802340A0 
$ASCII_80235A58  % fla_bg
$ForegroundModelList_802340B0 
00000000 
00000000 
00000000 

PADDING: 802340F8 to 80234100 (005EA788 to 005EA790)
00000000 00000000 

% Origin: HEURISTIC
#new:Script $Script_80234100
	Label    00000000 
	Call     RandInt     	( 000000FA *Var[0] )
	Sub  *Var[0]  0000007D 
	Set  *Var[1]  00000000 
	Call     RandInt     	( 00000028 *Var[2] )
	Sub  *Var[2]  00000064 
	Call     RandInt     	( 0000001E *Var[3] )
	Add  *Var[3]  0000005A 
	Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     RandInt     	( 00000014 *Var[0] )
	Add  *Var[0]  00000014 
	Wait     *Var[0] 
	Goto     00000000 
	Return
	End

% Origin: HEURISTIC
#new:Script $Script_80234218
	Label    00000000 
	Call     RandInt     	( 000000FA *Var[0] )
	Sub  *Var[0]  0000007D 
	Set  *Var[1]  00000000 
	Call     RandInt     	( 00000032 *Var[2] )
	Add  *Var[2]  00000047 
	Call     RandInt     	( 0000001E *Var[3] )
	Add  *Var[3]  0000005A 
	Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     RandInt     	( 0000001E *Var[0] )
	Add  *Var[0]  00000014 
	Wait     *Var[0] 
	Goto     00000000 
	Return
	End

#new:Script $Script_80234330
	Label    00000000 
	Call     RandInt     	( 000000FA *Var[0] )
	Sub  *Var[0]  0000007D 
	Set  *Var[1]  00000032 
	Call     RandInt     	( 00000028 *Var[2] )
	Add  *Var[2]  FFFFFF84 
	Call     RandInt     	( 0000001E *Var[3] )
	Add  *Var[3]  0000005A 
	Call     PlayEffect  	( {FX:FloatingFlower, duration} *Var[0] *Var[1] *Var[2] *Var[3] 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
	Call     RandInt     	( 0000001E *Var[0] )
	Add  *Var[0]  00000014 
	Wait     *Var[0] 
	Goto     00000000 
	Return
	End

#new:Unknown $???_80234448
$ASCII_80235AD8 $ASCII_80235AD0 $ASCII_80235AC8 $ASCII_80235AC0 $ASCII_80235AB8 $ASCII_80235AB0 $ASCII_80235AA8 $ASCII_80235AA0 
$ASCII_80235A98 $ASCII_80235A90 $ASCII_80235A88 

#new:Script $Script_80234474
	If  *StoryProgress  >=  00000035 
	   Call     $Function_80219190 ( )
	EndIf
	Return
	End

#new:Script $Script_BeforeBattle_802344A8
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Call     802C9308 ( 00000023 00000001 )
	Call     802C9308 ( 0000002F 00000000 )
	Call     802C9308 ( 00000010 00000000 )
	Call     802C9308 ( 00000016 00000001 )
	Exec     $Script_80234330 
	ExecWait $Script_80234474 
	Return
	End

#new:Script $Script_AfterBattle_8023454C
	Return
	End

#new:ForegroundModelList $ForegroundModelList_8023455C
FFFFFFFF 00000020 00000021 00000000 

#new:Stage $Stage_8023456C
$ASCII_80235B08  % flo_tex
$ASCII_80235AF8  % flo_bt02_shape
$ASCII_80235AE8  % flo_bt02_hit
$Script_BeforeBattle_802344A8 
$Script_AfterBattle_8023454C 
$ASCII_80235AE0  % fla_bg
$ForegroundModelList_8023455C 
00000000 
00000000 
00000000 

PADDING: 80234594 to 802345A0 (005EAC24 to 005EAC30)
00000000 00000000 00000000 

#new:Script $Script_802345A0
	Set  *Var[A]  *Var[0] 
	UseIntBuffer *Var[A] 
	Loop     
	   Get1Int  *Var[0] 
	   If  *Var[0]  ==  00000000 
	      BreakLoop
	   EndIf
	   Call     SetTexPanner 	( *Var[0] 0000000E )
	   Get1Int  *Var[0] 
	   If  *Var[0]  ==  00000000 
	      BreakLoop
	   EndIf
	   Call     SetTexPanner 	( *Var[0] 0000000F )
	EndLoop
	Set  *Var[0]  00000000 
	Set  *Var[1]  00000000 
	Label    00000000 
	Label    00000000 
	Add  *Var[0]  FFFFFF74 
	If  *Var[0]  <  00000000 
	   Add  *Var[0]  00010000 
	EndIf
	Call     802C9364 ( 0000000E 00000000 *Var[0] 00000000 )
	Add  *Var[1]  FFFFFF38 
	If  *Var[1]  <  00000000 
	   Add  *Var[1]  00010000 
	EndIf
	Call     802C9364 ( 0000000F 00000000 *Var[1] 00000000 )
	Wait     00000001 
	Goto     00000000 
	Return
	End

#new:Unknown $???_80234758
$ASCII_80235B60 $ASCII_80235B58 $ASCII_80235B50 $ASCII_80235B48 $ASCII_80235B40 $ASCII_80235B38 $ASCII_80235B30 $ASCII_80235B28 
$ASCII_80235B20 $ASCII_80235B18 $ASCII_80235B10 

#new:Script $Script_80234784
	If  *StoryProgress  >=  00000035 
	   Call     $Function_80219250 ( )
	EndIf
	Return
	End

#new:Script $Script_802347B8
	Call     EnableModel 	( *Var[F] .True )
	Set  *Var[E]  0000009F 
	Loop     *Var[E] 
	   AddF  *Var[3]  00000000 
	   AddF  *Var[4]  *Fixed[0.0] 
	   SetF  *Var[5]  *Fixed[0.0107421875] 
	   AddF  *Var[0]  *Var[3] 
	   AddF  *Var[1]  *Var[4] 
	   AddF  *Var[2]  *Var[5] 
	   MulF  *Var[6]  *Fixed[1.0107422] 
	   AddF  *Var[7]  *Fixed[0.0107421875] 
	   SetF  *Var[8]  *Var[6] 
	   Call     $Function_80219310 ( *Var[E] *Var[A] *Fixed[0.0] *Fixed[0.203125] 0000000F 00000000 00000000 )
	   AddF  *Var[8]  *Var[A] 
	   SetF  *Var[9]  *Var[7] 
	   Call     $Function_80219310 ( *Var[E] *Var[A] *Fixed[0.0] *Fixed[0.203125] 00000014 00000000 0000005A )
	   AddF  *Var[9]  *Var[A] 
	   SetF  *Var[A]  *Var[0] 
	   MulF  *Var[A]  *Fixed[10.0] 
	   Call     TranslateModel ( *Var[F] *Var[0] *Var[1] *Var[2] )
	   Call     ScaleModel  	( *Var[F] *Var[8] *Var[9] 00000001 )
	   Call     RotateModel 	( *Var[F] *Var[A] 00000000 00000000 00000001 )
	   Wait     00000001 
	EndLoop
	Call     EnableModel 	( *Var[F] .False )
	Return
	End

#new:Unknown $???_802349A8
00000021 00000022 00000023 00000000 

#new:Script $Script_BeforeBattle_802349B8
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Set  *Var[0]  $???_802349A8 
	Exec     $Script_802345A0 
	Call     SetTexPanner 	( 00000024 00000001 )
	Call     SetTexPanner 	( 00000025 00000002 )
	Call     SetTexPanner 	( 00000026 00000003 )
	Call     SetTexPanner 	( 00000027 00000004 )
	Call     SetTexPanner 	( 00000028 00000005 )
	Call     SetTexPanner 	( 00000029 00000006 )
	Call     SetTexPanner 	( 0000002A 00000007 )
	Thread
	   Set  *Var[E]  00000001 
	   Set  *Var[F]  00000000 
	   Loop     
	      AddF  *Var[F]  *Var[E] 
	      If  *Var[F]  >=  00000438 
	         Set  *Var[F]  00000000 
	      EndIf
	      Set  *Var[0]  *Var[F] 
	      Div  *Var[0]  00000009 
	      Mod  *Var[0]  00000002 
	      Mul  *Var[0]  00004000 
	      Set  *Var[1]  *Var[F] 
	      Div  *Var[1]  00000004 
	      Mod  *Var[1]  00000002 
	      Mul  *Var[1]  00004000 
	      Set  *Var[2]  *Var[F] 
	      Div  *Var[2]  00000005 
	      Mod  *Var[2]  00000002 
	      Mul  *Var[2]  00004000 
	      Set  *Var[3]  *Var[F] 
	      Div  *Var[3]  00000006 
	      Mod  *Var[3]  00000002 
	      Mul  *Var[3]  00004000 
	      Set  *Var[4]  *Var[F] 
	      Div  *Var[4]  00000002 
	      Mod  *Var[4]  00000002 
	      Mul  *Var[4]  00004000 
	      Set  *Var[5]  *Var[F] 
	      Div  *Var[5]  00000008 
	      Mod  *Var[5]  00000002 
	      Mul  *Var[5]  00004000 
	      Set  *Var[6]  *Var[F] 
	      Div  *Var[6]  00000008 
	      Mod  *Var[6]  00000002 
	      Mul  *Var[6]  00008000 
	      Call     802C9364 ( 00000001 00000000 *Var[0] 00000000 )
	      Call     802C9364 ( 00000002 00000000 *Var[1] 00000000 )
	      Call     802C9364 ( 00000003 00000000 *Var[2] 00000000 )
	      Call     802C9364 ( 00000004 00000000 *Var[3] 00000000 )
	      Call     802C9364 ( 00000005 00000000 *Var[4] 00000000 )
	      Call     802C9364 ( 00000006 00000000 *Var[5] 00000000 )
	      Call     802C9364 ( 00000007 00000000 *Var[6] 00000000 )
	      Wait     00000001 
	   EndLoop
	EndThread
	Thread
	   Set  *Var[0]  00000000 
	   Loop     00000010 
	      Set  *Var[1]  *Var[0] 
	      Add  *Var[1]  00002710 
	      Add  *Var[0]  00000001 
	      Call     CloneModel  	( 0000002C *Var[1] )
	      Call     EnableModel 	( *Var[1] .False )
	   EndLoop
	   Call     EnableModel 	( 0000002C .False )
	   Set  *Var[E]  00000000 
	   Loop     
	      SetF  *Var[0]  *Fixed[106.0] 
	      SetF  *Var[1]  *Fixed[94.0] 
	      SetF  *Var[2]  *Fixed[-91.0] 
	      Call     RandInt     	( 00000064 *Var[3] )
	      AddF  *Var[3]  FFFFFFCE 
	      DivF  *Var[3]  *Fixed[200.0] 
	      SetF  *Var[4]  *Fixed[1.0] 
	      SetF  *Var[5]  00000000 
	      SetF  *Var[6]  *Fixed[0.296875] 
	      SetF  *Var[7]  *Fixed[0.296875] 
	      Set  *Var[F]  *Var[E] 
	      Add  *Var[F]  00002710 
	      Exec     $Script_802347B8 
	      Add  *Var[E]  00000001 
	      If  *Var[E]  >=  00000010 
	         Set  *Var[E]  00000000 
	      EndIf
	      Wait     0000000A 
	   EndLoop
	EndThread
	ExecWait $Script_80234784 
	Return
	End

#new:Script $Script_AfterBattle_80234F8C
	Return
	End

#new:ForegroundModelList $ForegroundModelList_80234F9C
FFFFFFFF 00000017 0000001F 00000000 

#new:Stage $Stage_80234FAC
$ASCII_80235B90  % flo_tex
$ASCII_80235B80  % flo_bt03_shape
$ASCII_80235B70  % flo_bt03_hit
$Script_BeforeBattle_802349B8 
$Script_AfterBattle_80234F8C 
$ASCII_80235B68  % fla_bg
$ForegroundModelList_80234F9C 
00000000 
00000000 
00000000 

PADDING: 80234FD4 to 80234FE0 (005EB664 to 005EB670)
00000000 00000000 00000000 

#new:Script $Script_80234FE0
	Set  *Var[A]  *Var[0] 
	Set  *Var[F]  00000000 
	Loop     
	   Call     $Function_802194A0 ( *Var[F] *Var[0] *Fixed[0.96875] *Fixed[1.03125] 0000000F 00000000 00000000 )
	   Call     $Function_802194A0 ( *Var[F] *Var[1] *Fixed[1.03125] *Fixed[0.96875] 0000000F 00000000 00000000 )
	   Call     ScaleModel  	( *Var[A] *Var[1] *Var[0] 00000001 )
	   Add  *Var[F]  00000001 
	   If  *Var[F]  >=  0000001E 
	      Set  *Var[F]  00000000 
	   EndIf
	   Wait     00000001 
	EndLoop
	Return
	End

#new:Unknown $???_802350D4
$ASCII_80235BE8 $ASCII_80235BE0 $ASCII_80235BD8 $ASCII_80235BD0 $ASCII_80235BC8 $ASCII_80235BC0 $ASCII_80235BB8 $ASCII_80235BB0 
$ASCII_80235BA8 $ASCII_80235BA0 $ASCII_80235B98 

#new:Script $Script_80235100
	If  *StoryProgress  >=  00000035 
	   Call     $Function_80219630 ( )
	EndIf
	Return
	End

#new:Script $Script_BeforeBattle_80235134
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	Set  *Var[0]  0000000E 
	Exec     $Script_80234FE0 
	Set  *Var[0]  00000010 
	Exec     $Script_80234FE0 
	Set  *Var[0]  00000012 
	Exec     $Script_80234FE0 
	Set  *Var[0]  00000014 
	Exec     $Script_80234FE0 
	Set  *Var[0]  00000019 
	Exec     $Script_80234FE0 
	Thread
	   Set  *Var[0]  0000001F 
	   Exec     $Script_80234FE0 
	   Set  *Var[0]  00000020 
	   Exec     $Script_80234FE0 
	   Wait     00000005 
	   Set  *Var[0]  00000000 
	   Exec     $Script_80234FE0 
	   Set  *Var[0]  00000001 
	   Exec     $Script_80234FE0 
	   Wait     00000005 
	   Set  *Var[0]  00000005 
	   Exec     $Script_80234FE0 
	   Set  *Var[0]  00000004 
	   Exec     $Script_80234FE0 
	   Set  *Var[0]  00000006 
	   Exec     $Script_80234FE0 
	   Wait     00000005 
	   Set  *Var[0]  00000021 
	   Exec     $Script_80234FE0 
	   Set  *Var[0]  00000022 
	   Exec     $Script_80234FE0 
	EndThread
	Call     CloneModel  	( 0000001B 00002710 )
	Call     EnableModel 	( 00002710 .False )
	Call     TranslateModel ( 00002710 00000000 00000009 00000000 )
	Call     ParentColliderToModel 	( 00000000 00002710 )
	ExecWait $Script_80235100 
	Return
	End

#new:Script $Script_AfterBattle_80235390
	Return
	End

#new:ForegroundModelList $ForegroundModelList_802353A0
FFFFFFFF 0000001F 00000019 00000000 

#new:Stage $Stage_802353B0
$ASCII_80235C18  % flo_tex
$ASCII_80235C08  % flo_bt04_shape
$ASCII_80235BF8  % flo_bt04_hit
$Script_BeforeBattle_80235134 
$Script_AfterBattle_80235390 
$ASCII_80235BF0  % sra_bg
$ForegroundModelList_802353A0 
00000000 
00000000 
00000000 

PADDING: 802353D8 to 802353E0 (005EBA68 to 005EBA70)
00000000 00000000 

#new:Unknown $???_802353E0
$ASCII_80235C70 $ASCII_80235C68 $ASCII_80235C60 $ASCII_80235C58 $ASCII_80235C50 $ASCII_80235C48 $ASCII_80235C40 $ASCII_80235C38 
$ASCII_80235C30 $ASCII_80235C28 $ASCII_80235C20 

#new:Script $Script_8023540C
	If  *StoryProgress  >=  00000035 
	   Call     $Function_802196F0 ( )
	EndIf
	Return
	End

#new:Script $Script_BeforeBattle_80235440
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	ExecWait $Script_8023540C 
	Return
	End

#new:Script $Script_AfterBattle_80235488
	Return
	End

#new:Stage $Stage_80235498
$ASCII_80235CA0  % flo_tex
$ASCII_80235C90  % flo_bt05_shape
$ASCII_80235C80  % flo_bt05_hit
$Script_BeforeBattle_80235440 
$Script_AfterBattle_80235488 
$ASCII_80235C78  % fla_bg
00000000 
00000000 
00000000 
00000000 

#new:Unknown $???_802354C0
$ASCII_80235CF8 $ASCII_80235CF0 $ASCII_80235CE8 $ASCII_80235CE0 $ASCII_80235CD8 $ASCII_80235CD0 $ASCII_80235CC8 $ASCII_80235CC0 
$ASCII_80235CB8 $ASCII_80235CB0 $ASCII_80235CA8 

#new:Script $Script_802354EC
	If  *StoryProgress  >=  00000035 
	   Call     $Function_802197B0 ( )
	EndIf
	Return
	End

#new:Script $Script_BeforeBattle_80235520
	Call     SetSpriteShading 	( FFFFFFFF )
	Call     SetCamBGColor 	( 00000001 00000000 00000000 00000000 )
	ExecWait $Script_802354EC 
	Return
	End

#new:Script $Script_AfterBattle_80235568
	Return
	End

#new:Stage $Stage_80235578
$ASCII_80235D28  % flo_tex
$ASCII_80235D18  % flo_bt06_shape
$ASCII_80235D08  % flo_bt06_hit
$Script_BeforeBattle_80235520 
$Script_AfterBattle_80235568 
$ASCII_80235D00  % fla_bg
00000000 
00000000 
00000000 
00000000 

#new:Vector3D $Vector3D_802355A0
80` 80` 0`

#new:Formation $Formation_00
$HuffNPuff $Vector3D_802355A0 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_01
$MontyMole 00000001 0000000A 00000000 00000000 00000000 00000000 

#new:Formation $Formation_02
$MontyMole 00000001 0000000A 00000000 00000000 00000000 00000000 
$MontyMole 00000002 00000009 00000000 00000000 00000000 00000000 

#new:Formation $Formation_03
$MontyMole 00000000 0000000A 00000000 00000000 00000000 00000000 
$MontyMole 00000001 00000009 00000000 00000000 00000000 00000000 
$MontyMole 00000002 00000008 00000000 00000000 00000000 00000000 

#new:Formation $Formation_04
$MontyMole 00000000 0000000A 00000000 00000000 00000000 00000000 
$MontyMole 00000001 00000009 00000000 00000000 00000000 00000000 
$MontyMole 00000002 00000008 00000000 00000000 00000000 00000000 
$MontyMole 00000003 00000007 00000000 00000000 00000000 00000000 

#new:Formation $Formation_05
$Spike 00000005 0000000A 00000000 00000000 00000000 00000000 

#new:FormationTable $FormationTable
$SJIS_80235D9C 00000001 $Formation_00 $Stage_802353B0 00000000 
$SJIS_80235D88 00000001 $Formation_01 $Stage_80232E6C 00000000 
$SJIS_80235D70 00000002 $Formation_02 $Stage_80232E6C 00000000 
$SJIS_80235D58 00000003 $Formation_03 $Stage_80232E6C 00000000 
$SJIS_80235D40 00000004 $Formation_04 $Stage_80232E6C 00000000 
$SJIS_80235D30 00000001 $Formation_05 $Stage_80232E6C 00000000 
00000000 00000000 00000000 00000000 00000000 % unused

#new:StageTable $StageTable
$ASCII_80235DF0 $Stage_80232E6C 
$ASCII_80235DE8 $Stage_80233304 
$ASCII_80235DE0 $Stage_802337A4 
$ASCII_80235DD8 $Stage_80233C28 
$ASCII_80235DD0 $Stage_802340D0 
$ASCII_80235DC8 $Stage_8023456C 
$ASCII_80235DC0 $Stage_80234FAC 
$ASCII_80235DB8 $Stage_802353B0 
$ASCII_80235DB0 $Stage_80235498 
$ASCII_80235DA8 $Stage_80235578 
00000000 00000000 

% Origin: HEURISTIC
#new:ASCII $ASCII_802357E0
flo_24

% Origin: HEURISTIC
#new:ASCII $ASCII_802357E8
flo_22

% Origin: HEURISTIC
#new:ASCII $ASCII_802357F0
flo_21

% Origin: HEURISTIC
#new:ASCII $ASCII_802357F8
flo_19

% Origin: HEURISTIC
#new:ASCII $ASCII_80235800
flo_18

% Origin: HEURISTIC
#new:ASCII $ASCII_80235808
flo_17

% Origin: HEURISTIC
#new:ASCII $ASCII_80235810
flo_16

% Origin: HEURISTIC
#new:ASCII $ASCII_80235818
flo_10

% Origin: HEURISTIC
#new:ASCII $ASCII_80235820
flo_09

% Origin: HEURISTIC
#new:ASCII $ASCII_80235828
flo_08

% Origin: HEURISTIC
#new:ASCII $ASCII_80235830
flo_03

#new:ASCII $ASCII_80235838
fla_bg

#new:ASCII $ASCII_80235840
flo_bt01_hit

#new:ASCII $ASCII_80235850
flo_bt01_shape

#new:ASCII $ASCII_80235860
flo_tex

% Origin: HEURISTIC
#new:ASCII $ASCII_80235868
flo_24

% Origin: HEURISTIC
#new:ASCII $ASCII_80235870
flo_22

% Origin: HEURISTIC
#new:ASCII $ASCII_80235878
flo_21

% Origin: HEURISTIC
#new:ASCII $ASCII_80235880
flo_19

% Origin: HEURISTIC
#new:ASCII $ASCII_80235888
flo_18

% Origin: HEURISTIC
#new:ASCII $ASCII_80235890
flo_17

% Origin: HEURISTIC
#new:ASCII $ASCII_80235898
flo_16

% Origin: HEURISTIC
#new:ASCII $ASCII_802358A0
flo_10

% Origin: HEURISTIC
#new:ASCII $ASCII_802358A8
flo_09

% Origin: HEURISTIC
#new:ASCII $ASCII_802358B0
flo_08

% Origin: HEURISTIC
#new:ASCII $ASCII_802358B8
flo_03

#new:ASCII $ASCII_802358C0
fla_bg

#new:ASCII $ASCII_802358C8
flo_bt01_hit

#new:ASCII $ASCII_802358D8
flo_bt01_shape

#new:ASCII $ASCII_802358E8
flo_tex

% Origin: HEURISTIC
#new:ASCII $ASCII_802358F0
flo_24

% Origin: HEURISTIC
#new:ASCII $ASCII_802358F8
flo_22

% Origin: HEURISTIC
#new:ASCII $ASCII_80235900
flo_21

% Origin: HEURISTIC
#new:ASCII $ASCII_80235908
flo_19

% Origin: HEURISTIC
#new:ASCII $ASCII_80235910
flo_18

% Origin: HEURISTIC
#new:ASCII $ASCII_80235918
flo_17

% Origin: HEURISTIC
#new:ASCII $ASCII_80235920
flo_16

% Origin: HEURISTIC
#new:ASCII $ASCII_80235928
flo_10

% Origin: HEURISTIC
#new:ASCII $ASCII_80235930
flo_09

% Origin: HEURISTIC
#new:ASCII $ASCII_80235938
flo_08

% Origin: HEURISTIC
#new:ASCII $ASCII_80235940
flo_03

#new:ASCII $ASCII_80235948
fla_bg

#new:ASCII $ASCII_80235950
flo_bt01_hit

#new:ASCII $ASCII_80235960
flo_bt01_shape

#new:ASCII $ASCII_80235970
flo_tex

% Origin: HEURISTIC
#new:ASCII $ASCII_80235978
flo_24

% Origin: HEURISTIC
#new:ASCII $ASCII_80235980
flo_22

% Origin: HEURISTIC
#new:ASCII $ASCII_80235988
flo_21

% Origin: HEURISTIC
#new:ASCII $ASCII_80235990
flo_19

% Origin: HEURISTIC
#new:ASCII $ASCII_80235998
flo_18

% Origin: HEURISTIC
#new:ASCII $ASCII_802359A0
flo_17

% Origin: HEURISTIC
#new:ASCII $ASCII_802359A8
flo_16

% Origin: HEURISTIC
#new:ASCII $ASCII_802359B0
flo_10

% Origin: HEURISTIC
#new:ASCII $ASCII_802359B8
flo_09

% Origin: HEURISTIC
#new:ASCII $ASCII_802359C0
flo_08

% Origin: HEURISTIC
#new:ASCII $ASCII_802359C8
flo_03

#new:ASCII $ASCII_802359D0
fla_bg

#new:ASCII $ASCII_802359D8
flo_bt02_hit

#new:ASCII $ASCII_802359E8
flo_bt02_shape

#new:ASCII $ASCII_802359F8
flo_tex

% Origin: HEURISTIC
#new:ASCII $ASCII_80235A00
flo_24

% Origin: HEURISTIC
#new:ASCII $ASCII_80235A08
flo_22

% Origin: HEURISTIC
#new:ASCII $ASCII_80235A10
flo_21

% Origin: HEURISTIC
#new:ASCII $ASCII_80235A18
flo_19

% Origin: HEURISTIC
#new:ASCII $ASCII_80235A20
flo_18

% Origin: HEURISTIC
#new:ASCII $ASCII_80235A28
flo_17

% Origin: HEURISTIC
#new:ASCII $ASCII_80235A30
flo_16

% Origin: HEURISTIC
#new:ASCII $ASCII_80235A38
flo_10

% Origin: HEURISTIC
#new:ASCII $ASCII_80235A40
flo_09

% Origin: HEURISTIC
#new:ASCII $ASCII_80235A48
flo_08

% Origin: HEURISTIC
#new:ASCII $ASCII_80235A50
flo_03

#new:ASCII $ASCII_80235A58
fla_bg

#new:ASCII $ASCII_80235A60
flo_bt02_hit

#new:ASCII $ASCII_80235A70
flo_bt02_shape

#new:ASCII $ASCII_80235A80
flo_tex

% Origin: HEURISTIC
#new:ASCII $ASCII_80235A88
flo_24

% Origin: HEURISTIC
#new:ASCII $ASCII_80235A90
flo_22

% Origin: HEURISTIC
#new:ASCII $ASCII_80235A98
flo_21

% Origin: HEURISTIC
#new:ASCII $ASCII_80235AA0
flo_19

% Origin: HEURISTIC
#new:ASCII $ASCII_80235AA8
flo_18

% Origin: HEURISTIC
#new:ASCII $ASCII_80235AB0
flo_17

% Origin: HEURISTIC
#new:ASCII $ASCII_80235AB8
flo_16

% Origin: HEURISTIC
#new:ASCII $ASCII_80235AC0
flo_10

% Origin: HEURISTIC
#new:ASCII $ASCII_80235AC8
flo_09

% Origin: HEURISTIC
#new:ASCII $ASCII_80235AD0
flo_08

% Origin: HEURISTIC
#new:ASCII $ASCII_80235AD8
flo_03

#new:ASCII $ASCII_80235AE0
fla_bg

#new:ASCII $ASCII_80235AE8
flo_bt02_hit

#new:ASCII $ASCII_80235AF8
flo_bt02_shape

#new:ASCII $ASCII_80235B08
flo_tex

% Origin: HEURISTIC
#new:ASCII $ASCII_80235B10
flo_24

% Origin: HEURISTIC
#new:ASCII $ASCII_80235B18
flo_22

% Origin: HEURISTIC
#new:ASCII $ASCII_80235B20
flo_21

% Origin: HEURISTIC
#new:ASCII $ASCII_80235B28
flo_19

% Origin: HEURISTIC
#new:ASCII $ASCII_80235B30
flo_18

% Origin: HEURISTIC
#new:ASCII $ASCII_80235B38
flo_17

% Origin: HEURISTIC
#new:ASCII $ASCII_80235B40
flo_16

% Origin: HEURISTIC
#new:ASCII $ASCII_80235B48
flo_10

% Origin: HEURISTIC
#new:ASCII $ASCII_80235B50
flo_09

% Origin: HEURISTIC
#new:ASCII $ASCII_80235B58
flo_08

% Origin: HEURISTIC
#new:ASCII $ASCII_80235B60
flo_03

#new:ASCII $ASCII_80235B68
fla_bg

#new:ASCII $ASCII_80235B70
flo_bt03_hit

#new:ASCII $ASCII_80235B80
flo_bt03_shape

#new:ASCII $ASCII_80235B90
flo_tex

% Origin: HEURISTIC
#new:ASCII $ASCII_80235B98
flo_24

% Origin: HEURISTIC
#new:ASCII $ASCII_80235BA0
flo_22

% Origin: HEURISTIC
#new:ASCII $ASCII_80235BA8
flo_21

% Origin: HEURISTIC
#new:ASCII $ASCII_80235BB0
flo_19

% Origin: HEURISTIC
#new:ASCII $ASCII_80235BB8
flo_18

% Origin: HEURISTIC
#new:ASCII $ASCII_80235BC0
flo_17

% Origin: HEURISTIC
#new:ASCII $ASCII_80235BC8
flo_16

% Origin: HEURISTIC
#new:ASCII $ASCII_80235BD0
flo_10

% Origin: HEURISTIC
#new:ASCII $ASCII_80235BD8
flo_09

% Origin: HEURISTIC
#new:ASCII $ASCII_80235BE0
flo_08

% Origin: HEURISTIC
#new:ASCII $ASCII_80235BE8
flo_03

#new:ASCII $ASCII_80235BF0
sra_bg

#new:ASCII $ASCII_80235BF8
flo_bt04_hit

#new:ASCII $ASCII_80235C08
flo_bt04_shape

#new:ASCII $ASCII_80235C18
flo_tex

% Origin: HEURISTIC
#new:ASCII $ASCII_80235C20
flo_24

% Origin: HEURISTIC
#new:ASCII $ASCII_80235C28
flo_22

% Origin: HEURISTIC
#new:ASCII $ASCII_80235C30
flo_21

% Origin: HEURISTIC
#new:ASCII $ASCII_80235C38
flo_19

% Origin: HEURISTIC
#new:ASCII $ASCII_80235C40
flo_18

% Origin: HEURISTIC
#new:ASCII $ASCII_80235C48
flo_17

% Origin: HEURISTIC
#new:ASCII $ASCII_80235C50
flo_16

% Origin: HEURISTIC
#new:ASCII $ASCII_80235C58
flo_10

% Origin: HEURISTIC
#new:ASCII $ASCII_80235C60
flo_09

% Origin: HEURISTIC
#new:ASCII $ASCII_80235C68
flo_08

% Origin: HEURISTIC
#new:ASCII $ASCII_80235C70
flo_03

#new:ASCII $ASCII_80235C78
fla_bg

#new:ASCII $ASCII_80235C80
flo_bt05_hit

#new:ASCII $ASCII_80235C90
flo_bt05_shape

#new:ASCII $ASCII_80235CA0
flo_tex

% Origin: HEURISTIC
#new:ASCII $ASCII_80235CA8
flo_24

% Origin: HEURISTIC
#new:ASCII $ASCII_80235CB0
flo_22

% Origin: HEURISTIC
#new:ASCII $ASCII_80235CB8
flo_21

% Origin: HEURISTIC
#new:ASCII $ASCII_80235CC0
flo_19

% Origin: HEURISTIC
#new:ASCII $ASCII_80235CC8
flo_18

% Origin: HEURISTIC
#new:ASCII $ASCII_80235CD0
flo_17

% Origin: HEURISTIC
#new:ASCII $ASCII_80235CD8
flo_16

% Origin: HEURISTIC
#new:ASCII $ASCII_80235CE0
flo_10

% Origin: HEURISTIC
#new:ASCII $ASCII_80235CE8
flo_09

% Origin: HEURISTIC
#new:ASCII $ASCII_80235CF0
flo_08

% Origin: HEURISTIC
#new:ASCII $ASCII_80235CF8
flo_03

#new:ASCII $ASCII_80235D00
fla_bg

#new:ASCII $ASCII_80235D08
flo_bt06_hit

#new:ASCII $ASCII_80235D18
flo_bt06_shape

#new:ASCII $ASCII_80235D28
flo_tex

#new:SJIS $SJIS_80235D30
% jonasan?
83578387 83698354 83938148 00000000 

#new:SJIS $SJIS_80235D40
% furawa-choropu-x4
83748389 838F815B 83608387 838D8376 815B7882 53000000 

#new:SJIS $SJIS_80235D58
% furawa-choropu-x3
83748389 838F815B 83608387 838D8376 815B7882 52000000 

#new:SJIS $SJIS_80235D70
% furawa-choropu-x2
83748389 838F815B 83608387 838D8376 815B7882 51000000 

#new:SJIS $SJIS_80235D88
% furawa-choropu-
83748389 838F815B 83608387 838D8376 815B0000 

#new:SJIS $SJIS_80235D9C
% ozumo-n
83498359 8382815B 83930000 

#new:ASCII $ASCII_80235DA8
flo_06

#new:ASCII $ASCII_80235DB0
flo_05

#new:ASCII $ASCII_80235DB8
flo_04

#new:ASCII $ASCII_80235DC0
flo_03

#new:ASCII $ASCII_80235DC8
flo_02c

#new:ASCII $ASCII_80235DD0
flo_02b

#new:ASCII $ASCII_80235DD8
flo_02

#new:ASCII $ASCII_80235DE0
flo_01c

#new:ASCII $ASCII_80235DE8
flo_01b

#new:ASCII $ASCII_80235DF0
flo_01

PADDING: 80235DF8 to 80235E00 (005EC488 to 005EC490)
00000000 00000000 

